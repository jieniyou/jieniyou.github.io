<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue简单了解</title>
      <link href="/2023/05/23/vue/"/>
      <url>/2023/05/23/vue/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><p>Soc：</p><p>HTML+CSS+JS：视图：给用户看，刷新后台给的数据</p><p>网络通信：<code>axios</code></p><p>页面跳转：<code>vue-router</code></p><p>状态管理：<code>vuex</code></p><p>Vue-UI：<code>ICE</code></p><p>css/新技能</p><p>M：模型 V：视图 C：控制器</p><p>View：<code>JSP{{}}</code></p><p>DATA:</p><p>vm:数据双向绑定</p><p>虚拟Dom：利用内存；</p><p>计算属性–&gt;Vue特色</p><p>集大成者：<code>MVVM+Dom</code></p><p>大前端时代：后端：轻松、分布式、微服务，大数据</p><p>裁员：好事：<br><code>1        1.8        3</code></p><p><code>Vscode</code></p><p><code>Hbuilder</code></p><p><code>Sublime</code></p><p><code>WebStorm</code></p><p><code>IDEA</code>：插件 <code>Vue</code></p><h2 id="判断-循环"><a href="#判断-循环" class="headerlink" title="判断-循环"></a>判断-循环</h2><p>本来就是显示</p><ul><li>if</li><li>for</li></ul><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><ul><li>on</li></ul><h2 id="网络通信"><a href="#网络通信" class="headerlink" title="网络通信"></a>网络通信</h2><ul><li>jQuery.ajax()</li></ul><p><strong>计算属性</strong>：计算出来的结果，保存在属性中~，内存中运行：虚拟Dom</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue详细了解</title>
      <link href="/2023/05/23/vue2/"/>
      <url>/2023/05/23/vue2/</url>
      
        <content type="html"><![CDATA[<p><strong>一、前端核心分析</strong></p><p><em><strong>1.1、概述</strong><br>Soc原则：关注点分离原则</em></p><p>Vue 的核心库只关注视图层，方便与第三方库或既有项目整合。</p><p>HTML + CSS + JS : 视图 ： 给用户看，刷新后台给的数据</p><p>网络通信 ： axios</p><p>页面跳转 ： vue-router</p><p>状态管理：vuex</p><p>Vue-UI : ICE , Element UI</p><p><strong>1.2、前端三要素</strong></p><ul><li>HTML（结构）：超文本标记语言（Hyper Text Markup Language），决定网页的结构和内容</li><li>CSS（表现）：层叠样式表（Cascading Style Sheets），设定网页的表现样式。</li><li>JavaScript（行为）：是一种弱类型脚本语言，其源码不需经过编译，而是由浏览器解释运行，用于控制网页的行为</li></ul><p><strong>1.3、结构层（HTML）</strong><br>太简单，略</p><p><strong>1.4、表现层（CSS）</strong><br>CSS层叠样式表是一门标记语言，并不是编程语言，因此不可以自定义变量，不可以引用等，换句话说就是不具备任何语法支持，它主要缺陷如下：</p><ul><li>语法不够强大，比如<strong>无法嵌套书写</strong>，导致模块化开发中需要书写很多重复的选择器；</li><li><strong>没有变量和合理的样式复用机制</strong>，使得逻辑上相关的属性值必须以字面量的形式重复输出，导致<strong>难以维护</strong>；这就导致了我们在工作中无端增加了许多工作量。为了解决这个问题，前端开发人员会使用一种称之为【CSS预处理器】的工具,提供CSS缺失的样式层复用机制、减少冗余代码，提高样式代码的可维护性。大大的提高了前端在样式上的开发效率。</li></ul><p>什么是CSS预处理器:</p><p>CSS预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为CSS增加了一些编程的特性，将CSS作为目标生成文件，然后开发者就只需要使用这种语言进行CSS的编码工作。转化成通俗易懂的话来说就是“用一种专门的编程语言，进行Web页面样式设计，再通过编译器转化为正常的CSS文件，以供项目使用”。</p><p>常用的CSS预处理器有哪些</p><ul><li>SASS：基于Ruby ，通过服务端处理，功能强大。解析效率高。需要学习Ruby语言，上手难度高于LESS。</li><li>LESS：基于NodeJS，通过客户端处理，使用简单。功能比SASS简单，解析效率也低于SASS，但在实际开发中足够了，所以如果我们后台人员如果需要的话，建议使用LESS。</li></ul><p><strong>1.5、行为层（JavaScript）</strong><br>JavaScript<strong>一门弱类型脚本语言，其源代码在发往客户端运行之前不需要经过编译，而是将文本格式的字符代码发送给浏览器，由浏览器解释运行。</strong></p><p>Native 原生JS开发</p><p>原生JS开发，也就是让我们按照【ECMAScript】标准的开发方式，简称ES，特点是所有浏览器都支持。截至到当前，ES标准以发布如下版本：</p><ul><li>ES3</li><li>ES4（内部，未正式发布）</li><li>ES5（全浏览器支持）</li><li>ES6（常用，当前主流版本：webpack打包成为ES5支持）</li><li>ES7</li><li>ES8</li><li>ES9（草案阶段）</li></ul><p>区别就是逐步增加新特性。<br>TypeScript 微软的标准<br>TypeScript是一种由微软开发的自由和开源的编程语言。它是JavaScript的一个超集， 而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。由安德斯·海尔斯伯格(C#、Delphi、TypeScript之父； .NET创立者) 主导。该语言的特点就是除了具备ES的特性之外还纳入了许多不在标准范围内的新特性，所以会导致很多浏览器不能直接支持TypeScript语法， 需要编译后(编译成JS) 才能被浏览器正确执行。</p><p>JavaScript框架</p><ul><li>JQuery：大家熟知的JavaScript库，优点就是简化了DOM操作，缺点就是DOM操作太频繁，影响前端性能；在前端眼里使用它仅仅是为了兼容IE6，7，8；</li><li>Angular：Google收购的前端框架，由一群Java程序员开发，其特点是将后台的MVC模式搬到了前端并增加了<strong>模块化开发</strong>的理念，与微软合作，采用了TypeScript语法开发；对后台程序员友好，对前端程序员不太友好；最大的缺点是版本迭代不合理（如1代–&gt;2 代，除了名字，基本就是两个东西；截止发表博客时已推出了Angular6）</li><li>React：Facebook 出品，一款高性能的JS前端框架；特点是提出了新概念 【<strong>虚拟DOM</strong>】用于减少真实 DOM 操作，在内存中模拟 DOM操作，有效的提升了前端渲染效率；缺点是使用复杂，因为需要额外学习一门【JSX】语言；</li><li><strong>Vue</strong>：一款渐进式 JavaScript 框架，所谓渐进式就是逐步实现新特性的意思，如实现模块化开发、路由、状态管理等新特性。其特点是综合了 Angular（模块化）和React(虚拟 DOM) 的优点；</li><li><strong>Axios</strong>：前端通信框架；因为 Vue 的边界很明确，就是为了处理 DOM，所以并不具备通信能力，此时就需要额外使用一个通信框架与服务器交互；当然也可以直接选择使用jQuery 提供的AJAX 通信功能；</li></ul><p><strong>二、前端发展史</strong><br><strong>2.1、UI框架</strong></p><ul><li>Ant-Design：阿里巴巴出品，基于React的UI框架</li><li>ElementUI、iview、ice：饿了么出品，基于Vue的UI框架</li><li>BootStrap：Teitter推出的一个用于前端开发的开源工具包</li><li>AmazeUI：又叫“妹子UI”，一款HTML5跨屏前端框架</li></ul><p><strong>2.2、JavaScript构建工具</strong></p><ul><li>Babel：JS编译工具，主要用于浏览器不支持的ES新特性，比如用于编译TypeScript</li><li>WebPack：模块打包器，主要作用就是打包、压缩、合并及按序加载</li><li>注：以上知识点已将WebApp开发所需技能全部梳理完毕</li></ul><p><strong>2.3、三端同一</strong><br>混合开发（Hybrid App）</p><p>主要目的是实现一套代码三端统一（PC、Android：.apk、iOS：.ipa）并能够调用到设备底层硬件（如：传感器、GPS、摄像头等），打包方式主要有以下两种：</p><ul><li>云打包：HBuild -&gt; HBuildX，DCloud 出品；API Cloud</li><li>本地打包： Cordova（前身是 PhoneGap）</li></ul><p>微信小程序</p><p>详见微信官网，这里就是介绍一个方便微信小程序UI开发的框架：WeUI</p><p><strong>2.4、后端技术</strong><br>前端人员为了方便开发也需要掌握一定的后端技术但我们Java后台人员知道后台知识体系极其庞大复杂，所以为了方便前端人员开发后台应用，就出现了Node JS这样的技术。Node JS的作者已经声称放弃Node JS(说是架构做的不好再加上笨重的node modules，可能让作者不爽了吧)开始开发全新架构的De no<br>既然是后台技术，那肯定也需要框架和项目管理工具， Node JS框架及项目管理工具如下：</p><ul><li>Express：Node JS框架</li><li>Koa：Express简化版</li><li>NPM：项目综合管理工具，类似于Maven</li><li>YARN：NPM的替代方案，类似于Maven和Gradle的关系</li></ul><p><strong>2.5、主流前端框架</strong><br>Vue.js</p><p>iView</p><p>iview是一个强大的基于Vue的UI库， 有很多实用的基础组件比element ui的组件更丰富， 主要服务于PC界面的中后台产品。使用单文件的Vue组件化开发模式基于npm+webpack+babel开发， 支持ES 2015高质量、功能丰富友好的API， 自由灵活地使用空间。</p><ul><li>官网地址</li><li>Github</li><li>iview-admin</li></ul><p>备注：属于前端主流框架，选型时可考虑使用，主要特点是移动端支持较多</p><p>Element UI</p><p>Element是饿了么前端开源维护的Vue UI组件库， 组件齐全， 基本涵盖后台所需的所有组件，文档讲解详细， 例子也很丰富。主要用于开发PC端的页面， 是一个质量比较高的Vue UI组件库。<br>·官网地址<br>·Git hub<br>·vue-element-admin<br>备注：属于前端主流框架，选型时可考虑使用，主要特点是桌面端支持较多</p><p>ICE</p><p>飞冰是阿里巴巴团队基于React/Angular/Vue的中后台应用解决方案， 在阿里巴巴内部， 已经有270多个来自几乎所有BU的项目在使用。飞冰包含了一条从设计端到开发端的完整链路，帮助用户快速搭建属于自己的中后台应用。</p><ul><li>官网地址。</li><li>Git hub</li></ul><p>备注：主要组件还是以React为主， 截止2019年02月17日更新博客前对Vue的支持还不太完善，目前尚处于观望阶段</p><p>VantUI</p><p>Vant UI是有赞前端团队基于有赞统一的规范实现的Vue组件库， 提供了-整套UI基础组件和业务组件。通过Vant， 可以快速搭建出风格统一的页面，提升开发效率。</p><p>官网地址<br>Github<br>AtUI</p><p>at-ui是一款基于Vue 2.x的前端UI组件库， 主要用于快速开发PC网站产品。它提供了一套n pm+web pack+babel前端开发工作流程， CSS样式独立， 即使采用不同的框架实现都能保持统一的UI风格。<br>·官网地址<br>·Git hub</p><p>Cube Ul</p><p>cube-ui是滴滴团队开发的基于Vue js实现的精致移动端组件库。支持按需引入和后编译， 轻量灵活；扩展性强，可以方便地基于现有组件实现二次开发。</p><ul><li>官网地址</li><li>Github</li></ul><p>混合开发</p><p>Flutter</p><p>Flutter是谷歌的移动端UI框架， 可在极短的时间内构建Android和iOS上高质量的原生级应用。Flutter可与现有代码一起工作， 它被世界各地的开发者和组织使用， 并且Flutter是免费和开源的。</p><ul><li>官网地址</li></ul><p>Github<br>备注：Google出品， 主要特点是快速构建原生APP应用程序， 如做混合应用该框架为必选框架<br>lonic</p><p>lonic既是一个CSS框架也是一个Javascript UI库， lonic是目前最有潜力的一款HTML 5手机应用开发框架。通过SASS构建应用程序， 它提供了很多UI组件来帮助开发者开发强大的应用。它使用JavaScript MV VM框架和Angular JS/Vue来增强应用。提供数据的双向绑定， 使用它成为Web和移动开发者的共同选择。</p><p>官网地址<br>·官网文档<br>·Git hub</p><ul><li>微信小程序</li><li>mpvue</li></ul><p>mpvue是美团开发的一个使用Vue.js开发小程序的前端框架， 目前支持微信小程序、百度智能小程序，头条小程序和支付宝小程序。框架基于Vue.js， 修改了的运行时框架runtime和代码编译器compiler实现， 使其可运行在小程序环境中， 从而为小程序开发引入了Vue.js开发体验。<br>·官网地址<br>·Git hub<br>备注：完备的Vue开发体验， 井且支持多平台的小程序开发， 推荐使用</p><p>WeUI</p><p>WeUI是一套同微信原生视觉体验一致的基础样式库， 由微信官方设计团队为微信内网页和微信小程序量身设计， 令用户的使用感知更加统一。包含button、cell、dialog、toast、article、icon等各式元素。</p><ul><li>官网地址</li><li>Github</li></ul><p><strong>三、了解前后分离的演变史</strong><br>为什么需要前后分离</p><p><strong>3.1、后端为主的MVC时代</strong><br>为了降低开发的复杂度， 以后端为出发点， 比如：Struts、Spring MVC等框架的使用， 就是后端的MVC时代；<br>以SpringMVC流程为例：</p><ul><li>发起请求到前端控制器(Dispatcher Servlet)</li><li>前端控制器请求HandlerMapping查找Handler，可以根据xml配置、注解进行查找</li><li>处理器映射器HandlerMapping向前端控制器返回Handler</li><li>前端控制器调用处理器适配器去执行Handler</li><li>处理器适配器去执行Handler</li><li>Handler执行完成给适配器返回ModelAndView</li><li>处理器适配器向前端控制器返回ModelAndView，ModelAndView是SpringMvc框架的一个底层对象，包括Model和View</li><li>前端控制器请求视图解析器去进行视图解析，根据逻辑视图名解析成真正的视图(JSP)</li><li>视图解析器向前端控制器返回View</li><li>前端控制器进行视图渲染，视图渲染将模型数据(在ModelAndView对象中)填充到request域</li><li>前端控制器向用户响应结果</li></ul><p>优点<br>MVC是一个非常好的协作模式， 能够有效降低代码的耦合度从架构上能够让开发者明白代码应该写在哪里。为了让View更纯粹， 还可以使用Thyme leaf、Frree marker等模板引擎， 使模板里无法写入Java代码， 让前后端分工更加清晰。<br>缺点</p><ul><li>前端开发重度依赖开发环境，开发效率低，这种架构下，前后端协作有两种模式：</li><li>第一种是前端写DEMO， 写好后， 让后端去套模板。好处是DEMO可以本地开发， 很高效。不足是还需要后端套模板，有可能套错，套完后还需要前端确定，来回沟通调整的成本比较大；</li><li>另一种协作模式是前端负责浏览器端的所有开发和服务器端的View层模板开发。好处是UI相关的代码都是前端去写就好，后端不用太关注，不足就是前端开发重度绑定后端环境，环境成为影响前端开发效率的重要因素。</li><li>前后端职责纠缠不清：模板引擎功能强大，依旧可以通过拿到的上下文变量来实现各种业务逻辑。这样，只要前端弱势一点，往往就会被后端要求在模板层写出不少业务代码，还有一个很大的灰色地带是Controller， 页面路由等功能本应该是前端最关注的， 但却是由后端来实现。Controller本身与Model往往也会纠缠不清，看了让人咬牙的业务代码经常会出现在Controller层。这些问题不能全归结于程序员的素养， 否则JSP就够了。</li><li>对前端发挥的局限性：性能优化如果只在前端做空间非常有限，于是我们经常需要后端合作，但由于后端框架限制，我们很难使用[Comet】、【Big Pipe】等技术方案来优化性能。</li></ul><p>注：在这期间(2005年以前) ， 包括早期的JSP、PHP可以称之为Web 1.0时代。在这里想说一句， 如果你是一名Java初学者， 请你不要再把一些陈旧的技术当回事了， 比如JSP， 因为时代在变、技术在变、什么都在变(引用扎克伯格的一句话：唯一不变的是变化本身)；当我们去给大学做实训时，有些同学会认为我们没有讲什么干货，其实不然，只能说是你认知里的干货对于市场来说早就过时了而已<br><strong>3.2、基于AJAX带来的SPA时代</strong><br>时间回到2005年A OAX(Asynchronous JavaScript And XML， 异步JavaScript和XML，老技术新用法)被正式提出并开始使用CDN作为静态资源存储， 于是出现了JavaScript王者归来(在这之前JS都是用来在网页上贴狗皮膏药广告的) 的SPA(Single Page Application) 单页面应用时代。</p><p>优点<br>这种模式下， <strong>前后端的分工非常清晰， 前后端的关键协作点是AJAX接口。</strong>看起来是如此美妙， 但回过头来看看的话， 这与JSP时代区别不大。复杂度从服务端的JSP里移到了浏览器的JavaScript，浏览器端变得很复杂。类似Spring MVC， 这个时代开始出现浏览器端的分层架构：</p><p>缺点</p><ul><li>前后端接口的约定：如果后端的接口一塌糊涂，如果后端的业务模型不够稳定，那么前端开发会很痛苦；不少团队也有类似尝试，通过接口规则、接口平台等方式来做。有了和后端一起沉淀的接口规则，还可以用来模拟数据，使得前后端可以在约定接口后实现高效并行开发。</li><li>前端开发的复杂度控制：SPA应用大多以功能交互型为主，JavaScript代码过十万行很正常。大量JS代码的组织，与View层的绑定等，都不是容易的事情。</li></ul><p><strong>3.3、前端为主的MV*时代</strong><br>此处的MV*模式如下：</p><ul><li>MVC(同步通信为主) ：Model、View、Controller</li><li>MVP(异步通信为主) ：Model、View、Presenter</li><li>MVVM(异步通信为主)：Model、View、View Model为了降低前端开发复杂度，涌现了大量的前端框架，比如：Angular JS、React、Vue.js、Ember JS等， 这些框架总的原则是先按类型分层， 比如Templates、Controllers、Models， 然后再在层内做切分，如下图：</li></ul><p>优点</p><ul><li>前后端职责很清晰：前端工作在浏览器端，后端工作在服务端。清晰的分工，可以让开发并行，测试数据的模拟不难， 前端可以本地开发。后端则可以专注于业务逻辑的处理， 输出RESTful等接口。</li><li>前端开发的复杂度可控：前端代码很重，但合理的分层，让前端代码能各司其职。这一块蛮有意思的，简单如模板特性的选择，就有很多很多讲究。并非越强大越好，限制什么，留下哪些自由，代码应该如何组织，所有这一切设计，得花一本书的厚度去说明。</li><li>部署相对独立：可以快速改进产品体验缺点</li><li>代码不能复用。比如后端依旧需要对数据做各种校验，校验逻辑无法复用浏览器端的代码。如果可以复用，那么后端的数据校验可以相对简单化。</li><li>全异步， 对SEO不利。往往还需要服务端做同步渲染的降级方案。</li><li>性能并非最佳，特别是移动互联网环境下。</li><li>SPA不能满足所有需求， 依旧存在大量多页面应用。URL Design需要后端配合， 前端无法完全掌控。</li></ul><p><strong>3.4、Node JS带来的全栈时代</strong><br>前端为主的MV*模式解决了很多很多问题， 但如上所述， 依旧存在不少不足之处。随着Node JS的兴起， JavaScript开始有能力运行在服务端。这意味着可以有一种新的研发模式：</p><p>在这种研发模式下，前后端的职责很清晰。对前端来说，两个UI层各司其职：</p><ul><li>Front-end Ul layer处理浏览器层的展现逻辑。通过CSS渲染样式， 通过JavaScript添加交互功能， HTML的生成也可以放在这层， 具体看应用场景。</li><li>Back-end Ul layer处理路由、模板、数据获取、Cookie等。通过路由， 前端终于可以自主把控URL Design， 这样无论是单页面应用还是多页面应用， 前端都可以自由调控。后端也终于可以摆脱对展现的强关注，转而可以专心于业务逻辑层的开发。通过Node， WebServer层也是JavaScript代码， 这意味着部分代码可前后复用， 需要SEO的场景可以在服务端同步渲染，由于异步请求太多导致的性能问题也可以通过服务端来缓解。前一种模式的不足，通过这种模式几乎都能完美解决掉。<em>与JSP模式相比， 全栈模式看起来是一种回归， 也的确是一种向原始开发模式的回归， 不过是一种螺旋上升式的回归。**基于Node JS的全栈模式， 依旧面临很多挑战：</em></li><li>需要前端对服务端编程有更进一步的认识。比如TCP/IP等网络知识的掌握。</li><li>Node JS层与Java层的高效通信。Node JS模式下， 都在服务器端， RESTful HTTP通信未必高效， 通过SOAP等方式通信更高效。一切需要在验证中前行。</li><li>对部著、运维层面的熟练了解，需要更多知识点和实操经验。</li><li>大量历史遗留问题如何过渡。这可能是最大最大的阻力。</li><li><em>注：看到这里，相信很多同学就可以理解，为什么我总在课堂上说：“前端想学后台很难，而我们后端程序员学任何东西都很简单”；就是因为我们后端程序员具备相对完善的知识体系。</em></li></ul><p>全栈!So Easy!<br><strong>3.5、总结</strong><br>综上所述，模式也好，技术也罢，没有好坏优劣之分，只有适合不适合；前后分离的开发思想主要是基于Soc(关注度分离原则)，上面种种模式，都是让前后端的职责更清晰，分工更合理高效。</p><p><strong>四、第一个Vue程序</strong><br><strong>4.1、什么是MVVM</strong><br>MVVM（Model-View-ViewModel）是一种软件设计模式，由微软WPF（用于替代WinForm，以前就是用这个技术开发桌面应用程序的）和Silverlight（类似于Java Applet，简单点说就是在浏览器上运行WPF）的架构师Ken Cooper和Ted Peters开发，是一种简化用户界面的事件驱动编程方式。由John Gossman（同样也是WPF和Sliverlight的架构师）与2005年在他的博客上发表。</p><p>MVVM源自于经典的MVC（Model-View-Controller）模式。MVVM的核心是ViewModel层，负责转换Model中的数据对象来让数据变得更容易管理和使用。其作用如下：</p><ul><li>该层向上与视图层进行双向数据绑定</li><li>向下与Model层通过接口请求进行数据交互</li></ul><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416155351932-1106762024.png" alt="img"></p><p>MVVM已经相当成熟了，主要运用但不仅仅在网络应用程序开发中。当下流行的MVVM框架有Vue.js，Anfular JS</p><p><strong>4.2、为什么要使用MVVM</strong><br>MVVM模式和MVC模式一样，主要目的是分离视图（View）和模型（Model），有几大好处</p><ul><li>低耦合：视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的View上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。</li><li>可复用：你可以把一些视图逻辑放在一个ViewModel里面，让很多View重用这段视图逻辑。</li><li>独立开发：开发人员可以专注于业务逻辑和数据的开发（ViewMode），设计人员可以专注于页面设计。</li><li>可测试：界面素来是比较难以测试的，而现在测试可以针对ViewModel来写。</li></ul><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416155415460-511801007.png" alt="img"></p><p><strong>（1）View</strong></p><p>View是视图层， 也就是用户界面。前端主要由HTH L和csS来构建， 为了更方便地展现vi eu to del或者Hodel层的数据， 已经产生了各种各样的前后端模板语言， 比如FreeMarker，Thyme leaf等等， 各大MV VM框架如Vue.js.Angular JS， EJS等也都有自己用来构建用户界面的内置模板语言。</p><p><strong>（2）Model</strong></p><p>Model是指数据模型， 泛指后端进行的各种业务逻辑处理和数据操控， 主要围绕数据库系统展开。这里的难点主要在于需要和前端约定统一的接口规则</p><p><strong>（3）ViewModel</strong></p><p>ViewModel是由前端开发人员组织生成和维护的视图数据层。在这一层， 前端开发者对从后端获取的Model数据进行转换处理， 做二次封装， 以生成符合View层使用预期的视图数据模型。<br>  需要注意的是View Model所封装出来的数据模型包括视图的状态和行为两部分， 而Model层的数据模型是只包含状态的</p><ul><li>比如页面的这一块展示什么，那一块展示什么这些都属于视图状态(展示)</li><li>页面加载进来时发生什么，点击这一块发生什么，这一块滚动时发生什么这些都属于视图行为(交互)</li></ul><p>视图状态和行为都封装在了View Model里。这样的封装使得View Model可以完整地去描述View层。由于实现了双向绑定， View Model的内容会实时展现在View层， 这是激动人心的， 因为前端开发者再也不必低效又麻烦地通过操纵DOM去更新视图。<br>  MVVM框架已经把最脏最累的一块做好了， 我们开发者只需要处理和维护View Model， 更新数据视图就会自动得到相应更新，真正实现事件驱动编程。<br>  <strong>View层展现的不是Model层的数据， 而是ViewModel的数据， 由ViewModel负责与Model层交互，获取和更新数据， 这就完全解耦了View层和Model层， 这个解耦是至关重要的， 它是前后端分离方案实施的重要一环。</strong></p><p><strong>4.3、Vue</strong><br>Vue(读音/vju/， 类似于view) 是一套用于构建用户界面的渐进式框架， 发布于2014年2月。与其它大型框架不同的是， Vue被设计为可以自底向上逐层应用。Vue的核心库只关注视图层， 不仅易于上手， 还便于与第三方库(如：vue-router，vue-resource，vue x) 或既有项目整合。</p><p>（1）MVVM模式的实现者</p><ul><li>Model：模型层， 在这里表示JavaScript对象</li><li>View：视图层， 在这里表示DOM(HTML操作的元素)</li><li>ViewModel：连接视图和数据的中间件， Vue.js就是MVVM中的View Model层的实现者</li></ul><p>在MVVM架构中， 是不允许数据和视图直接通信的， 只能通过ViewModel来通信， 而View Model就是定义了一个Observer观察者</p><ul><li>ViewModel能够观察到数据的变化， 并对视图对应的内容进行更新</li><li>ViewModel能够监听到视图的变化， 并能够通知数据发生改变</li></ul><p>至此， 我们就明白了， Vue.js就是一个MV VM的实现者， 他的核心就是实现了DOM监听与数据绑定</p><p>（2）为什么要使用Vue.js</p><ul><li>轻量级， 体积小是一个重要指标。Vue.js压缩后有只有20多kb(Angular压缩后56kb+，React压缩后44kb+)</li><li>移动优先。更适合移动端， 比如移动端的Touch事件</li><li>易上手，学习曲线平稳，文档齐全</li><li>吸取了Angular(模块化) 和React(虚拟DOＭ) 的长处， 并拥有自己独特的功能，如：计算属性</li><li>开源，社区活跃度高</li></ul><p>4.4、第一个Vue程序<br>【说明】IDEA可以安装Vue的插件!<br>  注意：Vue不支持IE 8及以下版本， 因为Vue使用了IE 8无法模拟的ECMAScript 5特性。但它支持所有兼容ECMAScript 5的浏览器。</p><p>（1）下载地址</p><p>开发版本</p><ul><li>包含完整的警告和调试模式：https：//yuejs.org/js/vue.js</li><li>删除了警告， 30.96KB min+gzip：https：//vuejs.org/js/vue.min.js</li></ul><p>CDN</p><ul><li><script src="“https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.js”"></script></li><li><script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"></script></li></ul><p>（2）代码编写</p><p>Vue.js的核心是实现了MVVM模式， 她扮演的角色就是View Model层， 那么所谓的第一个应用程序就是展示她的数据绑定功能，操作流程如下：</p><p>1、创建一个HTML文件</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、引入Vue.js</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3、创建一个Vue实例</p><pre class="line-numbers language-none"><code class="language-none">&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        /*Model：数据*/        data:{            message:"hello,vue!"        }    });&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ul><li><code>el: '#vue'</code>：绑定元素的ID</li><li><code>data:{message:'Hello Vue!'}</code>：数据对象中有一个名为message的属性，并设置了初始值 Hello Vue！</li></ul><p>4、将数据绑定到页面元素</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    {{message}}&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（3）完整的HTML</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    {{message}}&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        /*Model：数据*/        data:{            message:"hello,vue!"        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）测试</p><p>为了能够更直观的体验Vue带来的数据绑定功能， 我们需要在浏览器测试一番， 操作流程如下：<br>  1、在浏览器上运行第一个Vue应用程序， 进入开发者工具<br>  2、在控制台输入vm.message=‘HelloWorld’， 然后回车， 你会发现浏览器中显示的内容会直接变成HelloWorld<br>  此时就可以在控制台直接输入vm.message来修改值， 中间是可以省略data的， 在这个操作中， 我并没有主动操作DOM， 就让页面的内容发生了变化， 这就是借助了Vue的数据绑定功能实现的； MV VM模式中要求View Model层就是使用观察者模式来实现数据的监听与绑定， 以做到数据与视图的快速响应。</p><p><strong>五、基础语法指令</strong><br>4.1、v-bind<br>我们已经成功创建了第一个Vue应用!看起来这跟渲染一个字符串模板非常类似， 但是Vue在背后做了大量工作。现在数据和DOM已经被建立了关联， 所有东西都是响应式的。我们在控制台操作对象属性，界面可以实时更新!<br>  我们还可以使用v-bind来绑定元素特性!</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en" xmlns:v-bind="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    &lt;span v-bind:title="message"&gt;    鼠标悬停几秒钟查看此处动态绑定的提示信息！  &lt;/span&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        /*Model：数据*/        data:{            message: '页面加载于 ' + new Date().toLocaleString()        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你看到的v-bind等被称为指令。指令带有前缀v以表示它们是Vue提供的特殊特性。可能你已经猜到了， 它们会在渲染的DOM上应用特殊的响应式行为在这里，该指令的意思是：“将这个元素节点的title特性和Vue实例的message属性保持一致”。<br>  如果你再次打开浏览器的JavaScript控制台， 输入app， message=‘新消息’，就会再一次看到这个绑定了title特性的HTML已经进行了更新。</p><p>4.2、v-if， v-else<br>什么是条件判断语句，就不需要我说明了吧，以下两个属性!</p><p>v-if<br>v-else<br>上代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en" xmlns:v-bind="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    &lt;h1 v-if="ok"&gt;Yes&lt;/h1&gt;    &lt;h1 v-else&gt;No&lt;/h1&gt;   &lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        /*Model：数据*/        data:{            type: true        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：<br>1.在浏览器上运行，打开控制台!<br>2.在控制台输入vm.ok=false然后回车，你会发现浏览器中显示的内容会直接变成NO<br>  注：使用v-*属性绑定数据是不需要双花括号包裹的</p><p>v-else-if</p><p>v-if<br>v-else-if<br>v-else<br>注：===三个等号在JS中表示绝对等于(就是数据与类型都要相等)上代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en" xmlns:v-bind="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    &lt;h1 v-if="type==='A'"&gt;A&lt;/h1&gt;    &lt;h1 v-else-if="type==='B'"&gt;B&lt;/h1&gt;    &lt;h1 v-else-if="type==='D'"&gt;D&lt;/h1&gt;    &lt;h1 v-else&gt;C&lt;/h1&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        /*Model：数据*/        data:{            type: 'A'        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3、v-for"><a href="#4-3、v-for" class="headerlink" title="4.3、v-for"></a>4.3、v-for</h3><ul><li>v-for</li></ul><p>格式说明</p><pre class="line-numbers language-none"><code class="language-none">&lt;div id="app"&gt;    &lt;li v-for="(item,index) in items"&gt;        {{item.message}}---{{index}}    &lt;/li&gt;&lt;/div&gt;123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：<code>items</code>是数组，<code>item</code>是数组元素迭代的别名。我们之后学习的Thymeleaf模板引擎的语法和这个十分的相似！<br>  上代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    &lt;li v-for="(item,index) in items"&gt;        {{item.message}}---{{index}}    &lt;/li&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        /*Model：数据*/        data:{            items:[                {message:'狂神说Java'},                {message:'狂神说前端'},                {message:'狂神说运维'}            ]        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：在控制台输入<code>vm.items.push({message：'狂神说运维'})</code>，尝试追加一条数据，你会发现浏览器中显示的内容会增加一条<code>狂神说运维</code>.</p><h3 id="4-4、v-on"><a href="#4-4、v-on" class="headerlink" title="4.4、v-on"></a>4.4、v-on</h3><p><code>v-on</code>监听事件<br> emsp;事件有Vue的事件、和前端页面本身的一些事件!我们这里的<code>click</code>是vue的事件， 可以绑定到Vue中的<code>methods</code>中的方法事件!<br>  上代码：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en" xmlns:v-on="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;    &lt;button v-on:click="sayHi"&gt;点我&lt;/button&gt;&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            message:'Hello World'        },        methods:{            sayHi:function(event){                //'this'在方法里面指向当前Vue实例                alert(this.message);            }        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击测试<br>  Vue还有一些基本的使用方式， 大家有需要的可以再跟着官方文档看看， 因为这些基本的指令几乎我们都见过了，一通百通!掌握学习的方式!</p><p><strong>六、表单双绑、组件</strong><br>6.1、什么是双向数据绑定<br>Vue.js是一个MV VM框架， 即数据双向绑定， 即当数据发生变化的时候， 视图也就发生变化， 当视图发生变化的时候，数据也会跟着同步变化。这也算是Vue.js的精髓之处了。<br>  值得注意的是，我们所说的数据双向绑定，一定是对于UI控件来说的非UI控件不会涉及到数据双向绑定。单向数据绑定是使用状态管理工具的前提。如果我们使用vue x那么数据流也是单项的，这时就会和双向数据绑定有冲突。</p><p>（1）为什么要实现数据的双向绑定</p><p>在Vue.js中，如果使用vuex， 实际上数据还是单向的， 之所以说是数据双向绑定，这是用的UI控件来说， 对于我们处理表单， Vue.js的双向数据绑定用起来就特别舒服了。即两者并不互斥，在全局性数据流使用单项，方便跟踪；局部性数据流使用双向，简单易操作。</p><p>6.2、在表单中使用双向数据绑定<br>你可以用v-model指令在表单、及元素上创建双向数据绑定。它会根据控件类型自动选取正确的方法来更新元素。尽管有些神奇， 但v-model本质上不过是语法糖。它负责监听用户的输入事件以更新数据，并对一些极端场景进行一些特殊处理。<br>  注意：v-model会忽略所有表单元素的value、checked、selected特性的初始值而总是将Vue实例的数据作为数据来源。你应该通过JavaScript在组件的data选项中声明初始值!</p><p>（1）单行文本</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;    输入的文本：&lt;input type="text" v-model="message" value="hello"&gt;{{message}}&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            message:""        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（2）多行文本"><a href="#（2）多行文本" class="headerlink" title="（2）多行文本"></a>（2）多行文本</h4><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;   多行文本：&lt;textarea v-model="pan"&gt;&lt;/textarea&gt;&amp;nbsp;&amp;nbsp;多行文本是：{{pan}}&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            message:"Hello hello!"        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（3）单复选框"><a href="#（3）单复选框" class="headerlink" title="（3）单复选框"></a>（3）单复选框</h4><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;    单复选框：    &lt;input type="checkbox" id="checkbox" v-model="checked"&gt;    &amp;nbsp;&amp;nbsp;    &lt;label for="checkbox"&gt;{{checked}}&lt;/label&gt;&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            checked:false        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（4）多复选框"><a href="#（4）多复选框" class="headerlink" title="（4）多复选框"></a>（4）多复选框</h4><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;    多复选框：    &lt;input type="checkbox" id="jack" value="Jack" v-model="checkedNames"&gt;    &amp;nbsp;&amp;nbsp;    &lt;label for="jack"&gt;Jack&lt;/label&gt;    &lt;input type="checkbox" id="join" value="Join" v-model="checkedNames"&gt;    &amp;nbsp;&amp;nbsp;    &lt;label for="join"&gt;Jack&lt;/label&gt;    &lt;input type="checkbox" id="mike" value="Mike" v-model="checkedNames"&gt;    &amp;nbsp;&amp;nbsp;    &lt;label for="mike"&gt;Mike&lt;/label&gt;    &lt;span&gt;选中的值：{{checkedNames}}&lt;/span&gt;&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            checkedNames:[]        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（6）单选按钮"><a href="#（6）单选按钮" class="headerlink" title="（6）单选按钮"></a>（6）单选按钮</h4><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;    单选框按钮    &lt;input type="radio" id="one" value="One" v-model="picked"&gt;    &lt;label for="one"&gt;One&lt;/label&gt;    &lt;input type="radio" id="two" value="Two" v-model="picked"&gt;    &lt;label for="two"&gt;Two&lt;/label&gt;    &lt;span&gt;选中的值：{{picked}}&lt;/span&gt;&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            picked:'Two'        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（7）下拉框"><a href="#（7）下拉框" class="headerlink" title="（7）下拉框"></a>（7）下拉框</h4><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;&lt;!--    性别：    &lt;input type="radio" name="sex" value="男" v-model="pan"&gt;男    &lt;input type="radio" name="sex" value="女" v-model="pan"&gt;女    &lt;p&gt;选中了：{{pan}}&lt;/p&gt;--&gt;    下拉框:    &lt;select v-model="pan"&gt;        &lt;option value="" disabled&gt;---请选择---&lt;/option&gt;        &lt;option&gt;A&lt;/option&gt;        &lt;option&gt;B&lt;/option&gt;        &lt;option&gt;C&lt;/option&gt;        &lt;option&gt;D&lt;/option&gt;    &lt;/select&gt;    &lt;span&gt;value:{{pan}}&lt;/span&gt;&lt;/div&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{            pan:"A"        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：<code>v-model</code>表达式的初始值未能匹配任何选项，元系将被渲染为“未选中”状态。 在iOS中， 这会使用户无法选择第一个选项，因为这样的情况下，iOS不会触发<code>change</code>事件。因此，更推荐像上面这样提供一个值为空的禁用选项。</p><p>6.3、什么是组件<br>组件是可复用的Vue实例， 说白了就是一组可以重复使用的模板， 跟JSTL的自定义标签、Thymeleal的th:fragment等框架有着异曲同工之妙，通常一个应用会以一棵嵌套的组件树的形式来组织：</p><p> <img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416182213930-1910477912.png" alt="img"></p><p> <img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416182221939-631708112.png" alt="img"></p><p>例如，你可能会有页头、侧边栏、内容区等组件，每个组件又包含了其它的像导航链接、博文之类的组件。</p><h4 id="（1）第一个Vue组件"><a href="#（1）第一个Vue组件" class="headerlink" title="（1）第一个Vue组件"></a>（1）第一个Vue组件</h4><p>注意：在实际开发中，我们并不会用以下方式开发组件，而是采用<code>vue-cli</code>创建，<code>vue</code>模板文件的方式开发，以下方法只是为了让大家理解什么是组件。<br>  使用<code>Vue.component()</code>方法注册组件，格式如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;div id="app"&gt;  &lt;pan&gt;&lt;/pan&gt;&lt;/div&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    //先注册组件    Vue.component("pan",{                template:'&lt;li&gt;Hello&lt;/li&gt;'    });    //再实例化Vue    var vm = new Vue({        el:"#app",    });&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><p>Vue.component()：注册组件<br>pan：自定义组件的名字<br>template：组件的模板<br>（2）使用props属性传递参数<br>像上面那样用组件没有任何意义，所以我们是需要传递参数到组件的，此时就需要使用props属性了！<br>  注意：默认规则下props属性里的值不能为大写；</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="app"&gt;    &lt;!--组件：传递给组件中的值：props--&gt;  &lt;pan v-for="item in items" v-bind:panh="item"&gt;&lt;/pan&gt;&lt;/div&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    //定义组件    Vue.component("pan",{        props:['panh'],        template:'&lt;li&gt;{{panh}}&lt;/li&gt;'    });    var vm = new Vue({        el:"#app",        data:{            items:["java","Linux","前端"]        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ul><li>v-for=”item in items”：遍历Vue实例中定义的名为items的数组，并创建同等数量的组件</li><li>v-bind:panh=”item”：将遍历的item项绑定到组件中props定义名为item属性上；= 号左边的panh为props定义的属性名，右边的为item in items 中遍历的item项的值</li></ul><p><strong>七、Axios异步通信</strong><br>7.1、什么是Axios<br>Axios是一个开源的可以用在浏览器端和Node JS的异步通信框架， 她的主要作用就是实现AJAX异步通信，其功能特点如下：</p><p>从浏览器中创建XMLHttpRequests<br>从node.js创建http请求<br>支持Promise API[JS中链式编程]<br>拦截请求和响应<br>转换请求数据和响应数据<br>取消请求<br>自动转换JSON数据<br>客户端支持防御XSRF(跨站请求伪造)<br>GitHub：<a href="https://github.com/axios/axios">https://github.com/axios/axios</a><br>  中文文档：<a href="http://www.axios-js.com/">http://www.axios-js.com/</a></p><p>7.2、为什么要使用Axios<br>由于Vue.js是一个视图层框架并且作者(尤雨溪) 严格准守SoC(关注度分离原则)所以Vue.js并不包含AJAX的通信功能， 为了解决通信问题， 作者单独开发了一个名为vue-resource的插件， 不过在进入2.0版本以后停止了对该插件的维护并推荐了Axios框架。少用jQuery， 因为它操作Dom太频繁!</p><p>7.3、第一个Axios应用程序<br>咱们开发的接口大部分都是采用JSON格式， 可以先在项目里模拟一段JSON数据， 数据内容如下：创建一个名为data.json的文件并填入上面的内容， 放在项目的根目录下</p><pre class="line-numbers language-none"><code class="language-none">{  "name": "狂神说Java",  "url": "https://blog.kuangstudy.com",  "page": 1,  "isNonProfit": true,  "address": {    "street": "含光门",    "city": "陕西西安",    "country": "中国"  },  "links": [    {      "name": "bilibili",      "url": "https://space.bilibili.com/95256449"    },    {      "name": "狂神说Java",      "url": "https://blog.kuangstudy.com"    },    {      "name": "百度",      "url": "https://www.baidu.com/"    }  ]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试代码</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en" xmlns:v-binf="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;!--v-cloak 解决闪烁问题--&gt;    &lt;style&gt;        [v-cloak]{            display: none;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="vue"&gt;    &lt;div&gt;地名：{{info.name}}&lt;/div&gt;    &lt;div&gt;地址：{{info.address.country}}--{{info.address.city}}--{{info.address.street}}&lt;/div&gt;    &lt;div&gt;链接：&lt;a v-binf:href="info.url" target="_blank"&gt;{{info.url}}&lt;/a&gt; &lt;/div&gt;&lt;/div&gt;&lt;!--引入js文件--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script src="https://unpkg.com/axios/dist/axios.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#vue",        //data：属性：vm        data(){            return{                info:{                    name:null,                    address:{                        country:null,                        city:null,                        street:null                    },                    url:null                }            }        },        mounted(){//钩子函数            axios                .get('data.json')                .then(response=&gt;(this.info=response.data));        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>在这里使用了v-bind将a:href的属性值与Vue实例中的数据进行绑定</li><li>使用axios框架的get方法请求AJAX并自动将数据封装进了Vue实例的数据对象中</li><li>我们在data中的数据结构必须和<code>Ajax</code>响应回来的数据格式匹配！</li></ol><p>7.4、Vue的生命周期<br>官方文档：<a href="https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA">https://cn.vuejs.org/v2/guide/instance.html#生命周期图示</a><br>  Vue实例有一个完整的生命周期，也就是从开始创建初女台化数据、编译模板、挂载DOM、渲染一更新一渲染、卸载等一系列过程，我们称这是Vue的生命周期。通俗说就是Vue实例从创建到销毁的过程，就是生命周期。<br>  在Vue的整个生命周期中，它提供了一系列的事件，可以让我们在事件触发时注册JS方法，可以让我们用自己注册的JS方法控制整个大局，在这些事件响应方法中的this直接指向的是Vue的实例。<br><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416213825502-1608429244.png" alt="img"></p><p><strong>八、计算属性、内容分发、自定义事件</strong><br>1、什么是计算属性<br>计算属性的重点突出在属性两个字上(属性是名词)，首先它是个属性其次这个属性有计算的能力(计算是动词)，这里的计算就是个函数：简单点说，它就是一个能够将计算结果缓存起来的属性(将行为转化成了静态的属性)，仅此而已；可以想象为缓存!</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="app"&gt;    &lt;p&gt;currentTime1:{{currentTime1()}}&lt;/p&gt;    &lt;p&gt;currentTime2:{{currentTime2}}&lt;/p&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    var vm = new Vue({        el:"#app",        data:{          message:"pan"        },        methods:{            currentTime1:function(){                return Date.now();//返回一个时间戳            }        },        computed:{            currentTime2:function(){//计算属性：methods，computed方法名不能重名，重名之后，只会调用methods的方法                this.message;                return Date.now();//返回一个时间戳            }        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：methods和computed里的东西不能重名<br>说明：</p><ul><li>methods：定义方法， 调用方法使用currentTime1()， 需要带括号</li><li>computed：定义计算属性， 调用属性使用currentTime2， 不需要带括号：this.message是为了能够让currentTime2观察到数据变化而变化</li><li>如何在方法中的值发生了变化，则缓存就会刷新!可以在控制台使用vm.message=”q in jiang”， 改变下数据的值，再次测试观察效果!</li><li>结论：</li><li>  调用方法时，每次都需要讲行计算，既然有计算过程则必定产生系统开销，那如果这个结果是不经常变化的呢?此时就可以考虑将这个结果缓存起来，采用计算属性可以很方便的做到这点，计算属性的主要特性就是为了将不经常变化的计算结果进行缓存，以节约我们的系统开销；</li></ul><p>8.2、内容分发<br>在Vue.js中我们使用<slot>元素作为承载分发内容的出口，作者称其为插槽，可以应用在组合组件的场景中；</slot></p><p>测试<br>比如准备制作一个待办事项组件(todo) ， 该组件由待办标题(todo-title) 和待办内容(todo-items)组成，但这三个组件又是相互独立的，该如何操作呢?<br>  第一步定义一个待办事项的组件</p><pre class="line-numbers language-none"><code class="language-none">&lt;div id="app"&gt;    &lt;todo&gt;&lt;/todo&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    Vue.component('todo',{        template:'&lt;div&gt;\                &lt;div&gt;代办事项&lt;/div&gt;\                &lt;ul&gt;\                    &lt;li&gt;学习狂神说Java&lt;/li&gt;\                &lt;/ul&gt;\            &lt;/div&gt;'    })&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步 我们需要让，代办事项的标题和值实现动态绑定，怎么做呢？我们可以留一个插槽！<br>  1-将上面的代码留出一个插槽，即slot</p><pre class="line-numbers language-none"><code class="language-none">Vue.component('todo',{       template:'&lt;div&gt;\               &lt;slot name="todo-title"&gt;&lt;/slot&gt;\               &lt;ul&gt;\                   &lt;slot name="todo-items"&gt;&lt;/slot&gt;\               &lt;/ul&gt;\           &lt;/div&gt;'   });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2-定义一个名为todo-title的待办标题组件 和 todo-items的待办内容组件</p><pre class="line-numbers language-none"><code class="language-none">Vue.component('todo-title',{        props:['title'],        template:'&lt;div&gt;{{title}}&lt;/div&gt;'    });   12345//这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！    Vue.component("todo-items",{        props:["item","index"],        template:"&lt;li&gt;{{index+1}},{{item}}&lt;/li&gt;"    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3-实例化Vue并初始化数据</p><pre class="line-numbers language-none"><code class="language-none">var vm = new Vue({       el:"#vue",       data:{           todoItems:['test1','test2','test3']       }   });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4-将这些值，通过插槽插入</p><pre class="line-numbers language-none"><code class="language-none">&lt;div id="vue"&gt;    &lt;todo&gt;        &lt;todo-title slot="todo-title" title="秦老师系列课程"&gt;&lt;/todo-title&gt;        &lt;!--&lt;todo-items slot="todo-items" v-for="{item,index} in todoItems" v-bind:item="item"&gt;&lt;/todo-items&gt;--&gt;        &lt;!--如下为简写--&gt;        &lt;todo-items slot="todo-items" v-for="item in todoItems" :item="item"&gt;&lt;/todo-items    &lt;/todo&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：我们的todo-title和todo-items组件分别被分发到了todo组件的todo-title和todo-items插槽中<br>  完整代码如下：</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="vue"&gt;    &lt;todo&gt;        &lt;todo-title slot="todo-title" title="title"&gt;&lt;/todo-title&gt;        &lt;!--&lt;todo-items slot="todo-items" v-for="{item,index} in todoItems" v-bind:item="item"&gt;&lt;/todo-items&gt;--&gt;        &lt;!--如下为简写--&gt;        &lt;todo-items slot="todo-items" v-for="item in todoItems" :item="item"&gt;&lt;/todo-items    &lt;/todo&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    Vue.component('todo',{        template:'&lt;div&gt;\                &lt;slot name="todo-title"&gt;&lt;/slot&gt;\                &lt;ul&gt;\                    &lt;slot name="todo-items"&gt;&lt;/slot&gt;\                &lt;/ul&gt;\            &lt;/div&gt;'    });    Vue.component('todo-title',{        props:['title'],        template:'&lt;div&gt;{{title}}&lt;/div&gt;'    });    //这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！    Vue.component("todo-items",{        props:["item","index"],        template:"&lt;li&gt;{{index+1}},{{item}}&lt;/li&gt;"    });    var vm = new Vue({        el:"#vue",        data:{            title:"秦老师系列课程",            todoItems:['test1','test2','test3']        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>8.3、自定义事件<br>通以上代码不难发现，数据项在Vue的实例中， 但删除操作要在组件中完成， 那么组件如何才能删除Vue实例中的数据呢?此时就涉及到参数传递与事件分发了， Vue为我们提供了自定义事件的功能很好的帮助我们解决了这个问题； 使用this.$emit(‘自定义事件名’， 参数) ， 操作过程如下：<br>  1-在vue的实例中增加了methods对象并定义了一个名为removeTodoltems的方法</p><pre class="line-numbers language-none"><code class="language-none">var vm = new Vue({        el:"#vue",        data:{            title_text:"秦老师系列课程",            todoItems:['test1','test2','test3']        },        methods:{            removeItems:function(index){                console.log("删除了"+this.todoItems[index]+"OK");                //splice（） 方法向/从数组中添加/删除项目，然后返回被删除的项目，其中index                this.todoItems.splice(index,1);            }        }    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2-修改todo-items待办内容组件的代码，增加一个删除按钮，并且绑定事件！</p><pre class="line-numbers language-none"><code class="language-none">Vue.component("todo-items",{       props:["item_p","index_p"],       template:"&lt;li&gt;{{index_p+1}},{{item_p}} &lt;button @click='remove'&gt;删除&lt;/button&gt;&lt;/li&gt;",       methods:{           remove:function (index) {           //这里的remove是自定义事件名称，需要在HTML中使用v-on:remove的方式               //this.$emit 自定义事件分发               this.$emit('remove',index);           }       }   });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3-修改todo-items待办内容组件的HTML代码，增加一个自定义事件，比如叫remove，可以和组件的方法绑定，然后绑定到vue的方法！</p><pre class="line-numbers language-none"><code class="language-none">&lt;!--增加了v-on:remove="removeTodoItems(index)"自定义事件，该组件会调用Vue实例中定义的--&gt;&lt;todo-items slot="todo-items" v-for="(item,index) in todoItems"                    :item_p="item" :index_p="index" v-on:remove="removeItems(index)" :key="index"&gt;&lt;/todo-items&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>对上一个代码进行修改，实现删除功能</p><pre class="line-numbers language-none"><code class="language-none">&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--view层，模板--&gt;&lt;div id="vue"&gt;    &lt;todo&gt;        &lt;todo-title slot="todo-title" :title="title_text"&gt;&lt;/todo-title&gt;        &lt;!--&lt;todo-items slot="todo-items" v-for="(item,index) in todoItems" v-bind:item="item"&gt;&lt;/todo-items&gt;--&gt;        &lt;!--如下为简写--&gt;        &lt;todo-items slot="todo-items" v-for="(item,index) in todoItems"                    :item_p="item" :index_p="index" v-on:remove="removeItems(index)" :key="index"&gt;&lt;/todo-items&gt;    &lt;/todo&gt;&lt;/div&gt;&lt;!--1.导入Vue.js--&gt;&lt;script src="../js/vue.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;    Vue.component('todo',{        template:'&lt;div&gt;\                &lt;slot name="todo-title"&gt;&lt;/slot&gt;\                &lt;ul&gt;\                    &lt;slot name="todo-items"&gt;&lt;/slot&gt;\                &lt;/ul&gt;\            &lt;/div&gt;'    });    Vue.component('todo-title',{        props:['title'],        template:'&lt;div&gt;{{title}}&lt;/div&gt;'    });    //这里的index，就是数组的下标，使用for循环遍历的时候，可以循环出来！    Vue.component("todo-items",{        props:["item_p","index_p"],        template:"&lt;li&gt;{{index_p+1}},{{item_p}} &lt;button @click='remove_methods'&gt;删除&lt;/button&gt;&lt;/li&gt;",        methods:{            remove_methods:function (index) {                //this.$emit 自定义事件分发                this.$emit('remove',index);            }        }    });    var vm = new Vue({        el:"#vue",        data:{            title_text:"秦老师系列课程",            todoItems:['test1','test2','test3']        },        methods:{            removeItems:function(index){                console.log("删除了"+this.todoItems[index]+"OK");                this.todoItems.splice(index,1);            }        }    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210416214133497-1987308751.png" alt="img"></p><p>8.4、Vue入门小结<br>核心：数据驱动，组件化</p><p>优点：借鉴了AngularJS的模块化开发和React的虚拟Dom，虚拟Dom就是把Demo操作放到内存中执行；</p><p>常用的属性：</p><ul><li>v-if</li><li>v-else-if</li><li>v-else</li><li>v-for</li><li>v-on绑定事件，简写@</li><li>v-model数据双向绑定</li><li>v-bind给组件绑定参数，简写：</li></ul><p>组件化：</p><ul><li>组合组件slot插槽</li><li>组件内部绑定事件需要使用到this.$emit(“事件名”,参数);</li><li>计算属性的特色，缓存计算数据</li></ul><p>遵循SoC关注度分离原则，Vue是纯粹的视图框架，并不包含，比如Ajax之类的通信功能，为了解决通信问题，我们需要使用Axios框架做异步通信；</p><p>说明<br>Vue的开发都是要基于NodeJS，实际开发采用Vue-cli脚手架开发，vue-router路由，vuex做状态管理；Vue UI，界面我们一般使用ElementUI（饿了么出品），或者ICE（阿里巴巴出品）来快速搭建前端项目~~</p><p>官网：</p><ul><li><a href="https://element.eleme.cn/#/zh-CN">https://element.eleme.cn/#/zh-CN</a></li><li><a href="https://ice.work/">https://ice.work/</a></li></ul><p><strong>九、第一个vue-cli项目</strong><br>9.1、什么是vue-cli<br>vue-cli官方提供的一个脚手架，用于快速生成一个vue的项目模板；<br>  预先定义好的目录结构及基础代码，就好比咱们在创建Maven项目时可以选择创建一个骨架项目，这个估计项目就是脚手架，我们的开发更加的快速；<br>  项目的功能</p><p>统一的目录结构<br>本地调试<br>热部署<br>单元测试<br>集成打包上线<br>9.2、需要的环境<br>Node.js：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a><br>安装就是无脑的下一步就好，安装在自己的环境目录下<br>Git：<a href="https://git-scm.com/doenloads">https://git-scm.com/doenloads</a><br>镜像：<a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a><br>确认nodejs安装成功：</p><p>cmd下输入node -v，查看是否能够正确打印出版本号即可！<br>cmd下输入npm -v，查看是否能够正确打印出版本号即可！<br>这个npm，就是一个软件包管理工具，就和linux下的apt软件安装差不多！<br>  安装Node.js淘宝镜像加速器（cnpm）<br>  这样的话，下载会快很多~</p><pre class="line-numbers language-none"><code class="language-none"># -g 就是全局安装npm install cnpm -g# 或使用如下语句解决npm速度慢的问题npm install --registry=https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装的过程可能有点慢~，耐心等待！虽然安装了cnpm，但是尽量少用！<br>  安装的位置：<code>C:\Users\administrator\AppData\Roaming\npm</code></p><p><img src="https://img-blog.csdnimg.cn/20200619110151865.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Bhbl9oMTk5NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p> 安装vue-cli</p><pre class="line-numbers language-none"><code class="language-none">cnpm instal1 vue-cli-g#测试是否安装成功#查看可以基于哪些模板创建vue应用程序，通常我们选择webpackvue list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417175225130-1979010386.png" alt="img"></p><h3 id="9-3、第一个vue-cli应用程序"><a href="#9-3、第一个vue-cli应用程序" class="headerlink" title="9.3、第一个vue-cli应用程序"></a>9.3、第一个vue-cli应用程序</h3><p>1.创建一个Vue项目，我们随便建立一个空的文件夹在电脑上，我这里在D盘下新建一个目录</p><pre class="line-numbers language-none"><code class="language-none">D:\Project\vue-study;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.创建一个基于webpack模板的vue应用程序</p><pre class="line-numbers language-none"><code class="language-none">#1、首先需要进入到对应的目录 cd D:\Project\vue-study#2、这里的myvue是顶日名称，可以根据自己的需求起名vue init webpack myvue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>一路都选择no即可；<br>  说明：</p><p>Project name：项目名称，默认回车即可<br>Project description：项目描述，默认回车即可<br>Author：项目作者，默认回车即可<br>Install vue-router：是否安装vue-router，选择n不安装（后期需要再手动添加）<br>Use ESLint to lint your code:是否使用ESLint做代码检查，选择n不安装（后期需要再手动添加)<br>Set up unit tests:单元测试相关，选择n不安装（后期需要再手动添加）<br>Setupe2etests with Nightwatch：单元测试相关，选择n不安装（后期需要再手动添加）<br>Should we run npm install for you after the,project has been created:创建完成后直接初始化，选择n，我们手动执行；运行结果！<br>（1）初始化并运行</p><pre class="line-numbers language-none"><code class="language-none">cd myvuenpm installnpm run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>执行完成后，目录多了很多依赖</p><p>当出现问题时，可以查看提示进行处理如下</p><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417175409074-1773252474.png" alt="img"></p><p><strong>十、webpack使用</strong><br>10.1、什么是Webpack<br>本质上， webpack是一个现代JavaScript应用程序的静态模块打包器(module bundler) 。当webpack处理应用程序时， 它会递归地构建一个依赖关系图(dependency graph) ， 其中包含应用程序需要的每个模块， 然后将所有这些模块打包成一个或多个bundle.<br>  Webpack是当下最热门的前端资源模块化管理和打包工具， 它可以将许多松散耦合的模块按照依赖和规则打包成符合生产环境部署的前端资源。还可以将按需加载的模块进行代码分离，等到实际需要时再异步加载。通过loader转换， 任何形式的资源都可以当做模块， 比如Commons JS、AMD、ES 6、CSS、JSON、Coffee Script、LESS等；<br>  伴随着移动互联网的大潮， 当今越来越多的网站已经从网页模式进化到了WebApp模式。它们运行在现代浏览器里， 使用HTML 5、CSS 3、ES 6等新的技术来开发丰富的功能， 网页已经不仅仅是完成浏览器的基本需求； WebApp通常是一个SPA(单页面应用) ， 每一个视图通过异步的方式加载，这导致页面初始化和使用过程中会加载越来越多的JS代码，这给前端的开发流程和资源组织带来了巨大挑战。<br>  前端开发和其他开发工作的主要区别，首先是前端基于多语言、多层次的编码和组织工作，其次前端产品的交付是基于浏览器的，这些资源是通过增量加载的方式运行到浏览器端，如何在开发环境组织好这些碎片化的代码和资源，并且保证他们在浏览器端快速、优雅的加载和更新，就需要一个模块化系统，这个理想中的模块化系统是前端工程师多年来一直探索的难题。</p><h3 id="10-2、模块化的演进"><a href="#10-2、模块化的演进" class="headerlink" title="10.2、模块化的演进"></a>10.2、模块化的演进</h3><h4 id="Script标签"><a href="#Script标签" class="headerlink" title="Script标签"></a>Script标签</h4><pre class="line-numbers language-none"><code class="language-none">&lt;script src = "module1.js"&gt;&lt;/script&gt;&lt;script src = "module2.js"&gt;&lt;/script&gt;&lt;script src = "module3.js"&gt;&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是最原始的JavaScript文件加载方式，如果把每一个文件看做是一个模块，那么他们的接口通常是暴露在全局作用域下，也就是定义在window对象中，不同模块的调用都是一个作用域。<br>  这种原始的加载方式暴露了一些显而易见的弊端：</p><p>全局作用域下容易造成变量冲突<br>文件只能按照<script>的书写顺序进行加载<br>开发人员必须主观解决模块和代码库的依赖关系<br>在大型项目中各种资源难以管理，长期积累的问题导致代码库混乱不堪</p><h4 id="CommonsJS"><a href="#CommonsJS" class="headerlink" title="CommonsJS"></a>CommonsJS</h4><hr><p>服务器端的NodeJS遵循CommonsJS规范，该规范核心思想是允许模块通过require方法来同步加载所需依赖的其它模块，然后通过exports或module.exports来导出需要暴露的接口。</p><pre class="line-numbers language-none"><code class="language-none">require(&quot;module&quot;);require(&quot;..&#x2F;module.js&quot;);export.doStuff &#x3D; function()&#123;&#125;;module.exports &#x3D; someValue;1234<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优点：</p><p>服务器端模块便于重用<br>NPM中已经有超过45万个可以使用的模块包<br>简单易用<br>缺点：</p><p>同步的模块加载方式不适合在浏览器环境中，同步意味着阻塞加载，浏览器资源是异步加载的<br>不能非阻塞的并行加载多个模块<br>实现：</p><p>服务端的NodeJS<br>•Browserify，浏览器端的CommonsJS实现，可以使用NPM的模块，但是编译打包后的文件体积较大<br>modules-webmake，类似Browserify，但不如Browserify灵活<br>wreq，Browserify的前身</p><p>AMD<br>Asynchronous Module Definition规范其实主要一个主要接口define(id?,dependencies?,factory);它要在声明模块的时候指定所有的依赖dependencies，并且还要当做形参传到factory中，对于依赖的模块提前执行。</p><p>define(“module”,[“dep1”,”dep2”],functian(d1,d2){<br>return someExportedValue;<br>});<br>require（[“module”,”../file.js”],function(module，file){});</p><p>优点</p><p>适合在浏览器环境中异步加载模块<br>可以并行加载多个模块<br>缺点</p><p>提高了开发成本，代码的阅读和书写比较困难，模块定义方式的语义不畅<br>不符合通用的模块化思维方式，是一种妥协的实现<br>实现</p><p>RequireJS<br>curl<br>CMD<br>Commons Module Definition规范和AMD很相似，尽保持简单，并与CommonsJS和NodeJS的Modules规范保持了很大的兼容性。</p><p>define(function(require,exports,module){<br>var $=require(“jquery”);<br>var Spinning = require(“./spinning”);<br>exports.doSomething = …;<br>module.exports=…;<br>});</p><p>优点：</p><p>依赖就近，延迟执行<br>可以很容易在NodeJS中运行缺点<br>依赖SPM打包，模块的加载逻辑偏重<br>实现</p><p>Sea.js<br>coolie<br>ES6模块</p><p>EcmaScript 6标准增加了JavaScript语言层面的模块体系定义。ES 6模块的设计思想， 是尽量静态化， 使编译时就能确定模块的依赖关系， 以及输入和输出的变量。Commons JS和AMD模块，都只能在运行时确定这些东西。</p><p>import “jquery”<br>export function doStuff(){}<br>module “localModule”{}</p><p>优点</p><p>容易进行静态分析<br>面向未来的Ecma Script标准<br>缺点</p><p>原生浏览器端还没有实现该标准<br>全新的命令，新版的Node JS才支持<br>实现</p><p>Babel<br>大家期望的模块<br>  系统可以兼容多种模块风格， 尽量可以利用已有的代码， 不仅仅只是JavaScript模块化， 还有CSS、图片、字体等资源也需要模块化。</p><h3 id="10-3、安装Webpack"><a href="#10-3、安装Webpack" class="headerlink" title="10.3、安装Webpack"></a>10.3、安装Webpack</h3><p>WebPack是一款模块加载器兼打包工具， 它能把各种资源， 如JS、JSX、ES 6、SASS、LESS、图片等都作为模块来处理和使用。</p><pre class="line-numbers language-none"><code class="language-none">npm install webpack -gnpm install webpack-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>测试安装成功</p><ul><li><code>webpack -v</code></li><li><code>webpack-cli -v</code></li></ul><p><img src="https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417175642618-1271395346.png" alt="img"></p><p>配置<br>创建 webpack.config.js配置文件</p><ul><li>entry：入口文件， 指定Web Pack用哪个文件作为项目的入口</li><li>output：输出， 指定WebPack把处理完成的文件放置到指定路径</li><li>module：模块， 用于处理各种类型的文件</li><li>plugins：插件， 如：热更新、代码重用等</li><li>resolve：设置路径指向</li><li>watch：监听， 用于设置文件改动后直接打包</li></ul><p>直接运行<code>webpack</code>命令打包</p><h3 id="10-4、使用webpack"><a href="#10-4、使用webpack" class="headerlink" title="10.4、使用webpack"></a>10.4、使用webpack</h3><ol><li>创建项目</li><li>创建一个名为modules的目录，用于放置JS模块等资源文件</li><li>在modules下创建模块文件，如hello.js，用于编写JS模块相关代码</li></ol><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;暴露一个方法：sayHiexports.sayHi &#x3D; function()&#123;    document.write(&quot;&lt;div&gt;Hello Webpack&lt;&#x2F;div&gt;&quot;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>在modules下创建一个名为main.js的入口文件，用于打包时设置entry属性</p></li><li><p>```<br>//require 导入一个模块，就可以调用这个模块中的方法了<br>var hello = require(“./hello”);<br>hello.sayHi();</p><pre class="line-numbers language-none"><code class="language-none">1. 在项目目录下创建webpack.config.js配置文件，使用webpack命令打包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>module.exports = {<br> entry:”./modules/main.js”,<br> output:{</p><pre><code> filename:&quot;./js/bundle.js&quot;</code></pre><p> }</p></li></ol><p>}</p><pre class="line-numbers language-none"><code class="language-none">1. 在项目目录下创建HTML页面，如index.html，导入webpack打包后的JS文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>&lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt;    &lt;head&gt;        &lt;meta charset=&quot;UTF-8&quot;&gt;        &lt;title&gt;狂神说Java&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;script src=&quot;dist/js/bundle.js&quot;&gt;&lt;/script&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><pre class="line-numbers language-none"><code class="language-none">1. 在IDEA控制台中直接执行webpack；如果失败的话，就使用管理员权限运行即可！2. 运行HTML看效果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参数–watch-用于监听变化"><a href="#参数–watch-用于监听变化" class="headerlink" title="参数–watch 用于监听变化"></a>参数–watch 用于监听变化</h1><p>webpack –watch</p><pre class="line-numbers language-none"><code class="language-none">## 十一、vue-router路由学习的时候，尽量的打开官方的文档Vue Router是Vue.js官方的路由管理器。它和Vue.js的核心深度集成， 让构建单页面应用变得易如反掌。包含的功能有：嵌套的路由&#x2F;视图表模块化的、基于组件的路由配置路由参数、查询、通配符基于Vue js过渡系统的视图过渡效果细粒度的导航控制带有自动激活的CSS class的链接HTML5 历史模式或hash模式， 在IE 9中自动降级自定义的滚动行为### 11.2、安装基于第一个&#96;vue-cli&#96;进行测试学习； 先查看node modules中是否存在vue-router  vue-router是一个插件包， 所以我们还是需要用n pm&#x2F;cn pm来进行安装的。打开命令行工具，进入你的项目目录，输入下面命令。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>npm install vue-router –save-dev</p><pre class="line-numbers language-none"><code class="language-none">如果在一个模块化工程中使用它，必须要通过Vue.use()明确地安装路由功能：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>import Vue from ‘vue’<br>import VueRouter from ‘vue-router’</p><p>Vue.use(VueRouter);</p><pre class="line-numbers language-none"><code class="language-none">### 11.3、测试1、先删除没有用的东西2、&#96;components&#96; 目录下存放我们自己编写的组件3、定义一个&#96;Content.vue&#96; 的组件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>    <div>        <h1>内容页</h1>    </div></template><script>    export default {        name:"Content"    }</script></p><pre class="line-numbers language-none"><code class="language-none">`Main.vue`组件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>&lt;template&gt;&lt;div&gt;    &lt;h1&gt;首页&lt;/h1&gt;&lt;/div&gt;</code></pre><script>    export default {        name:"Main"    }</script><pre class="line-numbers language-none"><code class="language-none">4、安装路由，在src目录下，新建一个文件夹：`router`，专门存放路由，配置路由index.js，如下<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><p>import Vue from’vue’<br>//导入路由插件<br>import Router from ‘vue-router’<br>//导入上面定义的组件<br>import Content from ‘../components/Content’<br>import Main from ‘../components/Main’<br>//安装路由<br>Vue.use(Router) ;<br>//配置路由<br>export default new Router({<br>    routes:[<br>        {<br>            //路由路径<br>            path:’/content’,<br>            //路由名称<br>            name:’content’,<br>            //跳转到组件<br>            component:Content<br>            },{<br>            //路由路径<br>            path:’/main’,<br>            //路由名称<br>            name:’main’,<br>            //跳转到组件<br>            component:Main<br>            }<br>        ]<br>    });</p><pre class="line-numbers language-none"><code class="language-none">5、在`main.js`中配置路由<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>import Vue from ‘vue’<br>import App from ‘./App’</p><p>//导入上面创建的路由配置目录<br>import router from ‘./router’//自动扫描里面的路由配置</p><p>//来关闭生产模式下给出的提示<br>Vue.config.productionTip = false;</p><p>new Vue({<br>    el:”#app”,<br>    //配置路由<br>    router,<br>    components:{App},<br>    template:’<app>‘<br>});</app></p><pre class="line-numbers language-none"><code class="language-none">6、在`App.vue`中使用路由<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>    <div id="app">        <!--            router-link：默认会被渲染成一个<a>标签，to属性为指定链接            router-view：用于渲染路由匹配到的组件        -->        <router-link to="/">首页</router-link>        <router-link to="/content">内容</router-link>        <router-view></router-view>    </div></template><script>    export default{        name:'App'    }</script><style></style><pre class="line-numbers language-none"><code class="language-none"> ## 十二、实战快速上手我们采用实战教学模式并结合ElementUI组件库，将所需知识点应用到实际中，以最快速度带领大家掌握Vue的使用；### 12.1、创建工程注意：命令行都要使用管理员模式运行1、创建一个名为hello-vue的工程`vue init webpack hello-vue`2、安装依赖， 我们需要安装vue-router、element-ui、sass-loader和node-sass四个插件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#进入工程目录<br>cd hello-vue<br>#安装vue-routern<br>npm install vue-router –save-dev<br>#安装element-ui<br>npm i element-ui -S<br>#安装依赖<br>npm install</p><h1 id="安装SASS加载器"><a href="#安装SASS加载器" class="headerlink" title="安装SASS加载器"></a>安装SASS加载器</h1><p>cnpm install sass-loader node-sass –save-dev<br>#启功测试<br>npm run dev</p><pre class="line-numbers language-none"><code class="language-none">3、Npm命令解释：npm install moduleName：安装模块到项目目录下npm install -g moduleName：-g的意思是将模块安装到全局，具体安装到磁盘哪个位置要看npm config prefix的位置npm install -save moduleName：–save的意思是将模块安装到项目目录下， 并在package文件的dependencies节点写入依赖，-S为该命令的缩写npm install -save-dev moduleName:–save-dev的意思是将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖，-D为该命令的缩写### 12.2、创建登录页面把没有用的初始化东西删掉！  在源码目录中创建如下结构：- - assets：用于存放资源文件  - components：用于存放Vue功能组件  - views：用于存放Vue视图组件  - router：用于存放vue-router配置![img](https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417223052365-1192170115.png)   创建首页视图，在views目录下创建一个名为Main.vue的视图组件：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>    <div>首页</div></template><script>    export default {            name:"Main"    }</script><style scoped=""></style><pre class="line-numbers language-none"><code class="language-none">创建登录页视图在views目录下创建名为Login.vue的视图组件，其中el-*的元素为ElementUI组件；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>  <div>    <el-form ref="loginForm" :model="form" :rules="rules" label-width="80px" class="login-box">      <h3 class="login-title">欢迎登录</h3>      <el-form-item label="账号" prop="username">        <el-input type="text" placeholder="请输入账号" v-model="form.username">      </el-input></el-form-item>      <el-form-item label="密码" prop="password">        <el-input type="password" placeholder="请输入密码" v-model="form.password">      </el-input></el-form-item>      <el-form-item>        <el-button type="primary" v-on:click="onsubmit('loginForm')">登录</el-button>      </el-form-item>    </el-form><pre><code>&lt;el-dialog title="温馨提示" :visible.sync="dialogVisiable" width="30%" :before-close="handleClose"&gt;  &lt;span&gt;请输入账号和密码&lt;/span&gt;  &lt;span slot="footer" class="dialog-footer"&gt;      &lt;el-button type="primary" @click="dialogVisible = false"&gt;确定&lt;/el-button&gt;    &lt;/span&gt;&lt;/el-dialog&gt;</code></pre>  </div></template><script>    export default {        name: "Login",      data(){          return{            form:{              username:'',              password:''            },            //表单验证，需要在 el-form-item 元素中增加prop属性            rules:{              username:[                {required:true,message:"账号不可为空",trigger:"blur"}              ],              password:[                {required:true,message:"密码不可为空",tigger:"blur"}              ]            },            //对话框显示和隐藏            dialogVisible:false          }      },      methods:{          onSubmit(formName){            //为表单绑定验证功能            this.$refs[formName].validate((valid)=>{              if(valid){                //使用vue-router路由到指定界面，该方式称为编程式导航                this.$router.push('/main');              }else{                this.dialogVisible=true;                return false;              }            });          }      }    }</script><style lang="scss" scoped="">  .login-box{    border:1px solid #DCDFE6;    width: 350px;    margin:180px auto;    padding: 35px 35px 15px 35px;    border-radius: 5px;    -webkit-border-radius: 5px;    -moz-border-radius: 5px;    box-shadow: 0 0 25px #909399;  }  .login-title{    text-align:center;    margin: 0 auto 40px auto;    color: #303133;  }</style><pre class="line-numbers language-none"><code class="language-none">创建路由，在router目录下创建一个名为`index.js`的vue-router路由配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>//导入vue<br>import Vue from ‘vue’;<br>import VueRouter from ‘vue-router’;<br>//导入组件<br>import Main from “../views/Main”;<br>import Login from “../views/Login”;<br>//使用<br>Vue.use(VueRouter);<br>//导出<br>export default new VueRouter({<br>  routes: [<br>    {<br>      //登录页<br>      path: ‘/main’,<br>      component: Main<br>    },<br>    //首页<br>    {<br>      path: ‘/login’,<br>      component: Login<br>    },<br>  ]</p><p>})</p><pre class="line-numbers language-none"><code class="language-none">APP.vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>  <div id="app">    <router-view></router-view>  </div></template><script>export default {  name: 'App',}</script><style>#app {  font-family: 'Avenir', Helvetica, Arial, sans-serif;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;  text-align: center;  color: #2c3e50;  margin-top: 60px;}</style><pre class="line-numbers language-none"><code class="language-none">main.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>// The Vue build version to load with the <code>import</code> command<br>// (runtime-only or standalone) has been set in webpack.base.conf with an alias.<br>import Vue from ‘vue’<br>import App from ‘./App’<br>import router from “./router”</p><p>import ElementUI from ‘element-ui’<br>import ‘element-ui/lib/theme-chalk/index.css’</p><p>Vue.use(router)<br>Vue.use(ElementUI)</p><p>/* eslint-disable no-new */<br>new Vue({<br>  el: ‘#app’,<br>  router,<br>  render:h=&gt;h(App)<br>})</p><pre class="line-numbers language-none"><code class="language-none">测试：在浏览器打开 http://localhost:8080/#/login如果出现错误: 可能是因为sass-loader的版本过高导致的编译错误，当前最高版本是8.0.2，需要退回到7.3.1 ；去package.json文件里面的 "sass-loader"的版本更换成7.3.1，然后重新cnpm install就可以了；12.3、路由嵌套嵌套路由又称子路由，在实际应用中，通常由多层嵌套的组件组合而成。demo1、 创建用户信息组件，在 views/user 目录下创建一个名为 Profile.vue 的视图组件；Profile.vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>  <h1>个人信息</h1></template><script>  export default {    name: "UserProfile"  }</script><style scoped=""></style><pre class="line-numbers language-none"><code class="language-none">2、在用户列表组件在 views/user 目录下创建一个名为 List.vue 的视图组件；List.vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>  <h1>用户列表</h1></template><script>  export default {    name: "UserList"  }</script><style scoped=""></style><pre class="line-numbers language-none"><code class="language-none"> 3、 修改首页视图，我们修改 Main.vue 视图组件，此处使用了 ElementUI 布局容器组件，代码如下：Main.vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>    <div>      <el-container>        <el-aside width="200px">          <el-menu :default-openeds="['1']">            <el-submenu index="1">              <template slot="title"><i class="el-icon-caret-right"></i>用户管理</template>              <el-menu-item-group>                <el-menu-item index="1-1">                <!--插入的地方-->                  <router-link to="/user/profile">个人信息</router-link>                </el-menu-item>                <el-menu-item index="1-2">                <!--插入的地方-->                  <router-link to="/user/list">用户列表</router-link>                </el-menu-item>              </el-menu-item-group>            </el-submenu>            <el-submenu index="2">              <template slot="title"><i class="el-icon-caret-right"></i>内容管理</template>              <el-menu-item-group>                <el-menu-item index="2-1">分类管理</el-menu-item>                <el-menu-item index="2-2">内容列表</el-menu-item>              </el-menu-item-group>            </el-submenu>          </el-menu>        </el-aside><pre><code>    &lt;el-container&gt;      &lt;el-header style="text-align: right; font-size: 12px"&gt;        &lt;el-dropdown&gt;          &lt;i class="el-icon-setting" style="margin-right: 15px"&gt;&lt;/i&gt;          &lt;el-dropdown-menu slot="dropdown"&gt;            &lt;el-dropdown-item&gt;个人信息&lt;/el-dropdown-item&gt;            &lt;el-dropdown-item&gt;退出登录&lt;/el-dropdown-item&gt;          &lt;/el-dropdown-menu&gt;        &lt;/el-dropdown&gt;      &lt;/el-header&gt;      &lt;el-main&gt;      &lt;!--在这里展示视图--&gt;        &lt;router-view /&gt;      &lt;/el-main&gt;    &lt;/el-container&gt;  &lt;/el-container&gt;&lt;/div&gt;</code></pre></el-container></div></template><script>    export default {        name: "Main"    }</script><style scoped="" lang="scss">  .el-header {    background-color: #B3C0D1;    color: #333;    line-height: 60px;  }  .el-aside {    color: #333;  }</style><pre class="line-numbers language-none"><code class="language-none">4、 配置嵌套路由修改 router 目录下的 index.js 路由配置文件，使用children放入main中写入子模块，代码如下index.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>//导入vueimport Vue from 'vue';import VueRouter from 'vue-router';//导入组件import Main from "../views/Main";import Login from "../views/Login";//导入子模块import UserList from "../views/user/List";import UserProfile from "../views/user/Profile";<p>//使用<br>Vue.use(VueRouter);<br>//导出<br>export default new VueRouter({<br>  routes: [<br>    {<br>      //登录页<br>      path: ‘/main’,<br>      component: Main,<br>      //  写入子模块<br>      children: [<br>        {<br>          path: ‘/user/profile’,<br>          component: UserProfile,<br>        }, {<br>          path: ‘/user/list’,<br>          component: UserList,<br>        },<br>      ]<br>    },<br>    //首页<br>    {<br>      path: ‘/login’,<br>      component: Login</p><pre><code>},</code></pre><p>  ]<br>})</p><pre class="line-numbers language-none"><code class="language-none">5、 路由嵌套实战效果图![img](https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417223330532-1466120251.png)     图 路由嵌套效果图### 12.4、参数传递这里演示如果请求带有参数该怎么传递demo 用的还是上述例子的代码 修改一些代码 这里不放重复的代码了第一种取值方式1、 修改路由配置, 主要是router下的index.js中的 path 属性中增加了 :id 这样的占位符 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>{<br>    path: ‘/user/profile/:id’,<br>    name:’UserProfile’,<br>    component: UserProfile<br>}</p><pre class="line-numbers language-none"><code class="language-none">2、传递参数 此时我们在Main.vue中的route-link位置处 to 改为了 :to，是为了将这一属性当成对象使用，注意 router-link 中的 name 属性名称 一定要和 路由中的 name 属性名称 匹配，因为这样 Vue 才能找到对应的路由路径;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><!--name是组件的名字 params是传的参数 如果要传参数的话就需要用v:bind:来绑定--><p><router-link :to="{name:'UserProfile',params:{id:1}}">个人信息</router-link></p><pre class="line-numbers language-none"><code class="language-none">3、在要展示的组件Profile.vue中接收参数 使用 {{$route.params.id}}来接收Profile.vue 部分代码![img](https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417224209340-146452477.png)  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>  <!--  所有的元素必须在根节点下-->  <div>    <h1>个人信息</h1>      </div></template><pre class="line-numbers language-none"><code class="language-none">第二种取值方式 使用props 减少耦合1、修改路由配置 , 主要在router下的index.js中的路由属性中增加了 props: true 属性<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>{    path: '/user/profile/:id',     name:'UserProfile',     component: UserProfile,     props: true}<pre class="line-numbers language-none"><code class="language-none">2、传递参数和之前一样 在Main.vue中修改route-link地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><!--name是组件的名字 params是传的参数 如果要传参数的话就需要用v:bind:来绑定--><router-link :to="{name:'UserProfile',params:{id:1}}">个人信息</router-link><pre class="line-numbers language-none"><code class="language-none">3、在Profile.vue接收参数为目标组件增加 props 属性Profile.vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>  <div>    个人信息      </div></template><script>    export default {      props: ['id'],      name: "UserProfile"    }</script><style scoped=""></style><pre class="line-numbers language-none"><code class="language-none">![img](https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417223533421-1238139188.png)  ### 12.5、组件重定向重定向的意思大家都明白，但 Vue 中的重定向是作用在路径不同但组件相同的情况下，比如：在router下面index.js的配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>{  path: '/main',  name: 'Main',  component: Main},{  path: '/goHome',  redirect: '/main'}<pre class="line-numbers language-none"><code class="language-none">说明：这里定义了两个路径，一个是 /main ，一个是 /goHome，其中 /goHome 重定向到了 /main 路径，由此可以看出重定向不需要定义组件；使用的话，只需要在Main.vue设置对应路径即可；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><el-menu-item index="1-3">    <router-link to="/goHome">回到首页</router-link></el-menu-item><pre class="line-numbers language-none"><code class="language-none">### 12.6、路由模式与 404路由模式有两种- hash：路径带 # 符号，如 http://localhost/#/login- history：路径不带 # 符号，如 http://localhost/login修改路由配置，代码如下：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>export default new Router({  mode: 'history',  routes: [  ]});<pre class="line-numbers language-none"><code class="language-none">404 demo1.创建一个NotFound.vue视图组件NotFound.vue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><template>    <div>      <h1>404,你的页面走丢了</h1>    </div></template><script>    export default {        name: "NotFound"    }</script><style scoped=""></style><pre class="line-numbers language-none"><code class="language-none">2.修改路由配置index.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>import NotFound from '../views/NotFound'{   path: '*',   component: NotFound}<pre class="line-numbers language-none"><code class="language-none">3.效果图![img](https://img2020.cnblogs.com/blog/1363376/202104/1363376-20210417223707039-1410702057.png)图 404效果图路由钩子与异步请求beforeRouteEnter：在进入路由前执行beforeRouteLeave：在离开路由前执行在Profile.vue中写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  export default {    name: "UserProfile",    beforeRouteEnter: (to, from, next) =&gt; {      console.log("准备进入个人信息页");      next();    },    beforeRouteLeave: (to, from, next) =&gt; {      console.log("准备离开个人信息页");      next();    }  }<pre class="line-numbers language-none"><code class="language-none">参数说明：to：路由将要跳转的路径信息from：路径跳转前的路径信息next：路由的控制参数next() 跳入下一个页面next(’/path’) 改变路由的跳转方向，使其跳到另一个路由next(false) 返回原来的页面next((vm)=&gt;{}) 仅在 beforeRouteEnter 中可用，vm 是组件实例在钩子函数中使用异步请求1、安装 Axioscnpm install --save vue-axios2、main.js引用 Axios<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>import axios from 'axios'import VueAxios from 'vue-axios'Vue.use(VueAxios, axios)<pre class="line-numbers language-none"><code class="language-none">3、准备数据 ： 只有我们的 static 目录下的文件是可以被访问到的，所以我们就把静态文件放入该目录下。数据和之前用的json数据一样 需要的去上述axios例子里<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>// 静态数据存放的位置static/mock/data.json4.在 beforeRouteEnter 中进行异步请求Profile.vue<pre class="line-numbers language-none"><code class="language-none"><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  export default {    //第二种取值方式    // props:['id'],    name: "UserProfile",    //钩子函数 过滤器    beforeRouteEnter: (to, from, next) =&gt; {      //加载数据      console.log("进入路由之前")      next(vm =&gt; {        //进入路由之前执行getData方法        vm.getData()      });    },    beforeRouteLeave: (to, from, next) =&gt; {      console.log("离开路由之前")      next();    },    //axios    methods: {      getData: function () {        this.axios({          method: 'get',          url: 'http://localhost:8080/static/mock/data.json'        }).then(function (response) {          console.log(response)        })      }    }  }``` <p>5.路由钩子和axios结合图<br><img src="https://img-blog.csdnimg.cn/20200624143534392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L29rRm9ycmVzdDI3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开发中token 的使用</title>
      <link href="/2023/05/23/java-token-01/"/>
      <url>/2023/05/23/java-token-01/</url>
      
        <content type="html"><![CDATA[<h1 id="Java开发中token-的使用"><a href="#Java开发中token-的使用" class="headerlink" title="Java开发中token 的使用"></a>Java开发中token 的使用</h1><h2 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h2><p>流程： 1.建立token工具类，先编辑token签名sign()：设置超时时长、token秘钥。 2.配置拦截器类，拦截器中重写preHandle()方法，对每次请求进行自定义的拦截操作。 3.建立配置类：定义拦截与不拦截的接口信息。</p><p>页面请求登录接口→登录成功后，返回登录信息+token秘钥给前端→前端记住密钥信息，并赋予每个接口（例：在每个接口访问时将秘钥信息放置于headers中的参数下）→拦截器接到请求，从headers获取token密钥进行匹配，通过则继续访问，不通过则返回提示信息。</p><h3 id="1-建立token工具类，先编辑token签名sign-：设置超时时长、token秘钥。"><a href="#1-建立token工具类，先编辑token签名sign-：设置超时时长、token秘钥。" class="headerlink" title="1.建立token工具类，先编辑token签名sign()：设置超时时长、token秘钥。"></a>1.建立token工具类，先编辑token签名sign()：设置超时时长、token秘钥。</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">import com.auth0.jwt.JWT;import com.auth0.jwt.JWTVerifier;import com.auth0.jwt.algorithms.Algorithm;import lombok.extern.slf4j.Slf4j;import java.io.UnsupportedEncodingException;import java.util.Date;import java.util.HashMap;import java.util.Map;@Slf4jpublic class JwtUtil {  /**     * 过期时间     */  private static final long EXPIRE_TIME = 15 * 60 * 1000;  /**      * token秘钥      */  private static final String TOKEN_SECRET = "c369a1e4-43ee-4e1e-b130-2b952f1ba9ad";  /** * 签名方法 * @Param userName  userName * @Param role  role * @return String role */  public static String sign(String userName, String role) {    log.info("sign begin.");    try {      // 过期时间      Date date = new Date(System.currentTimeMillis() + EXPIRE_TIME);      // 秘钥和加密算法      Algorithm algorithm = Algorithm.HMAC256(TOKEN_SECRET);      // headers      Map&lt;String, Object&gt; herders = new HashMap&lt;&gt;(2);      herders.put("typ", "JWT");      herders.put("alg", "HS256");      log.info("sign end.");      return JWT.create()        .withHeader(herders)        .withClaim("userName", userName)        .withClaim("role", role)        .withExpiresAt(date)        .sign(algorithm);    } catch (UnsupportedEncodingException exception) {      exception.printStackTrace();      log.info("sign error.");      return exception.getMessage();    }  }  /** * token 校验方法 * @Param userName  userName * @return String role */  public static boolean verify(String token) {    log.info("verify begin.");    try {      Algorithm algorithm = Algorithm.HMAC256(TOKEN_SECRET);      JWTVerifier verifier = JWT.require(algorithm).build();      verifier.verify(token);      log.info("verify end.");      return true;    } catch (UnsupportedEncodingException exception) {      log.info("verify error.");      exception.printStackTrace();      return false;    }  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-controller层登录操作中设置登录校验及token插入："><a href="#2-controller层登录操作中设置登录校验及token插入：" class="headerlink" title="2.controller层登录操作中设置登录校验及token插入："></a>2.controller层登录操作中设置登录校验及token插入：</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">/** * @program: smartOperationTest * @description: 用户操作 * @author: 作者名字 * @create: 2021-07-15 10:37 **/@Controller@RequestMapping("/user")@Api("userActionController")@CrossOrigin(value = "*", maxAge = 3600)@Slf4jpublic class UserActionController {  @Autowired  UserInfoServiceImpl userInfoService;  @RequestMapping(value = "/login", method = RequestMethod.GET)  @ApiOperation(value = "登录", notes = "")  @ResponseBody  public CommonResultBO userLogin(@RequestParam() String username, @RequestParam() String password) {    CommonResultBO resultBO = userInfoService.getUserInfo(username, password);    Integer statusCode = resultBO.getStatusCode();    if (statusCode == 200) {// 登录校验通过则插入token信息      UserInfo userInfo = (UserInfo)resultBO.getData();      String token = JwtUtil.sign(username, userInfo.getRole());      resultBO.setData(token);      return resultBO;    }    resultBO.setData("");    resultBO.setStatusCode(1);    resultBO.setStatusMessage("token failed");    return resultBO;  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-设置拦截器"><a href="#3-设置拦截器" class="headerlink" title="3.设置拦截器"></a>3.设置拦截器</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">import com.alibaba.fastjson.JSONObject;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Component;import org.springframework.web.servlet.HandlerInterceptor;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;/** * @program: smartOperationTest * @description: 拦截器 * @author: 作者名字 * @create: 2021-07-15 16:20 **/@Component@Slf4jpublic class TokenInterceptor implements HandlerInterceptor {  public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object object) throws IOException {    log.info("preHandle begin.");    response.setCharacterEncoding("utf-8");    String token = request.getHeader("accessToken");    log.info("preHandle begin TOKEN: {}." + token);    // token通过验证 返回true 继续访问    if (null != token) {      boolean result = JwtUtil.verify(token) ;      if (result) {        log.info("preHandle end.");        return true;      }    }    // token验证不通过 返回失败提示    CommonResultBO commonResultBO = CommonResultBO.init(null, -1, "failed", "token invalid");    response.getWriter().write(JSONObject.toJSONString(commonResultBO));    log.info("preHandle end.");    return false;  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-建立配置类，明确拦截与不拦截的接口：-拦截一层路径，-拦截-后全布路径。"><a href="#4-建立配置类，明确拦截与不拦截的接口：-拦截一层路径，-拦截-后全布路径。" class="headerlink" title="4.建立配置类，明确拦截与不拦截的接口：/*拦截一层路径，/**拦截/后全布路径。"></a>4.建立配置类，明确拦截与不拦截的接口：/*拦截一层路径，/**拦截/后全布路径。</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java">import com.hawk.smartoperationtest.common.TokenInterceptor;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Configuration;import org.springframework.web.servlet.config.annotation.*;/** * @program: smartOperationTest * @description: 自定义拦截器配置 * @author: 作者名字 * @create: 2021-07-15 16:48 **/@Configuration@Slf4jpublic class MvcConfig extends WebMvcConfigurationSupport {  @Autowired  TokenInterceptor tokenInterceptor;  @Override  protected void addInterceptors(InterceptorRegistry registry) {    //添加自定义拦截器    log.info("addInterceptors begin.");    InterceptorRegistration patterns = registry.addInterceptor(tokenInterceptor).addPathPatterns("/mary/**")    //指定拦截的url地址      .excludePathPatterns("/user/**", "/swagger-resources/**", "/v2/**");    log.info("addInterceptors :" + patterns.toString());  }  /**    * 发现如果继承了WebMvcConfigurationSupport，则在yml中配置的相关内容会失效。    * 配置拦截器后swagger访问会被拦截 按如下配置可保持swagger访问    * 需要重新指定静态资源    * @param registry    */  @Override  public void addResourceHandlers(ResourceHandlerRegistry registry) {    //registry.addResourceHandler("/**").addResourceLocations("classpath:/static/");    registry.addResourceHandler("swagger-ui.html")      .addResourceLocations("classpath:/META-INF/resources/");    registry.addResourceHandler("/webjars/**")      .addResourceLocations("classpath:/META-INF/resources/webjars/");    //super.addResourceHandlers(registry);  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>登录验证通过后，再次进行接口访问时，header中就要携带token信息进行校验。例：</p><p>accessToken：xxxtoken加密信息xxxx</p><h3 id="verify-也可以用于任意地方进行token校验。"><a href="#verify-也可以用于任意地方进行token校验。" class="headerlink" title="verify()也可以用于任意地方进行token校验。"></a>verify()也可以用于任意地方进行token校验。</h3><p>解析token：例</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">DecodedJWT verify = verifier.verify(token);String role = verify.getClaim("role").asString();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解析如何在vue前端处理token</title>
      <link href="/2023/05/23/vue-token-01/"/>
      <url>/2023/05/23/vue-token-01/</url>
      
        <content type="html"><![CDATA[<h1 id="解析如何在vue前端处理token"><a href="#解析如何在vue前端处理token" class="headerlink" title="解析如何在vue前端处理token"></a>解析如何在vue前端处理token</h1><p>[toc]</p><p>token（令牌）是用户登录后获取的一种凭证。</p><p>那么，用户登录后访问其他API都需要携带token，才可以成功请求；所以如果没有携带，便不可以请求成功。</p><p><strong>好处：</strong>如果不使用token，可能请求时都需要去验证用户名和密码，那么这就造成对服务器算力的浪费，使用token，便可以减少服务器的压力，减少频繁的查询数据库。</p><p>token具有时效性，可能有效期是几分钟，或者几天。</p><p>token生成机制一般是通过加密算法和盐把类似（用户名 + 时间戳 + 盐）生成串</p><p>而后端生成token后，会把它存在Redis（缓存）中。</p><p>使用token这项技术，后端可以做单点登录（只允许一个账号同时登录1次，不允许一个账号同时登录多次，是指在多系统应用群中登录一个系统，便可在其他所有系统中得到授权而无需再次登录，包括单点登录与单点注销两部分）</p><p>所以我们依然以《电商管理系统》这个项目为基础，分析</p><h3 id="1、如何在登录之后存储token（登录的post请求，会返回一个token）"><a href="#1、如何在登录之后存储token（登录的post请求，会返回一个token）" class="headerlink" title="1、如何在登录之后存储token（登录的post请求，会返回一个token）"></a>1、如何在登录之后存储token（登录的post请求，会返回一个token）</h3><h3 id="2、如何在访问其他API时，携带token（如何配置）"><a href="#2、如何在访问其他API时，携带token（如何配置）" class="headerlink" title="2、如何在访问其他API时，携带token（如何配置）"></a>2、如何在访问其他API时，携带token（如何配置）</h3><h2 id="1、如何在登录之后存储token"><a href="#1、如何在登录之后存储token" class="headerlink" title="1、如何在登录之后存储token"></a>1、如何在登录之后存储token</h2><p>需要在客户端存储token,</p><h3 id="（1）可以存储在cookie中，"><a href="#（1）可以存储在cookie中，" class="headerlink" title="（1）可以存储在cookie中，"></a>（1）可以存储在cookie中，</h3><p>cookie指的就是浏览器里面能永久存储数据的一种数据存储功能。cookie由服务器生成，发送给浏览器，浏览器把cookie以kv形式保存到某个目录下的文本文件内，下一次请求同一网站时会把该cookie发送给服务器。</p><p>由于cookie是存在客户端上的，所以浏览器加入了一些限制确保cookie不会被恶意使用，同时不会占据太多磁盘空间，所以每个域的cookie数量是有限的。</p><h3 id="（2）可以存储在sessionStorage或者是localStorage"><a href="#（2）可以存储在sessionStorage或者是localStorage" class="headerlink" title="（2）可以存储在sessionStorage或者是localStorage"></a>（2）可以存储在sessionStorage或者是localStorage</h3><p>cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递，</p><p>localStorage 和 sessionStorage 属性允许在浏览器中存储 key/value 对的数据。</p><p>localStorage 用于长久保存整个网站的数据，保存的数据没有过期时间，直到手动去删除。</p><p>localStorage 属性是只读的。</p><p>如果你只想将数据保存在当前会话中，可以使用sessionStorage 属性， 该数据对象临时保存同一窗口(或标签页)的数据，在关闭窗口或标签页之后将会删除这些数据。</p><blockquote><p>在js中，使用window对象调用sessionStorage和localStorage</p><p>Window 对象表示浏览器中打开的窗口。</p><p>此处补充一些window对象的内容：</p><p>（1）Window 对象的属性</p><table><thead><tr><th>closed</th><th>返回窗口是否已被关闭。</th></tr></thead><tbody><tr><td>localStorage</td><td>在浏览器中存储 key/value 对。没有过期时间。</td></tr><tr><td>parent</td><td>返回父窗口</td></tr><tr><td>sessionStorage</td><td>在浏览器中存储 key/value 对。 在关闭窗口或标签页之后将会删除这些数据。</td></tr></tbody></table><p>（2）Window 对象的方法</p><table><thead><tr><th>alert()</th><th>显示带有一段消息和一个确认按钮的警告框</th></tr></thead><tbody><tr><td>clearTimeout()</td><td>取消由 setTimeout() 方法设置的 timeout</td></tr><tr><td>close()</td><td>关闭浏览器窗口</td></tr><tr><td>print()</td><td>打印当前窗口的内容。</td></tr><tr><td>setTimeout()</td><td>在指定的毫秒数后调用函数或计算表达式。</td></tr></tbody></table></blockquote><p>在登录页面中，在发起请求登录时，存储token代码如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>loginFormRef<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">valid</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>    <span class="token comment">// console.log(valid);</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loginForm<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'登录失败！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'登录成功！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 1.将登录成功后的token，保存到客户端的sessionStorage中</span>    <span class="token comment">//    1.1项目中除了登录之外的其他API接口，必须在登录之后才能访问</span>    <span class="token comment">//    1.2token只应在当前网站打开期间生效，所以将token保存在sessionStorage中</span>    window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 2.通过编程式导航跳转到后台主页，路由地址是 /home</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/home'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以通过浏览器在Application查看如下:</p><p><img src="https://img-blog.csdnimg.cn/20210916193451394.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbHo5ODY2,size_20,color_FFFFFF,t_70,g_se,x_16" alt="xiaomin"></p><p><img src="https://img-blog.csdnimg.cn/20210916193529641.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbHo5ODY2,size_20,color_FFFFFF,t_70,g_se,x_16" alt="xiaomin"></p><p>下面考虑第二个问题，</p><h2 id="2、如何在访问其他API时，携带token（如何配置）-1"><a href="#2、如何在访问其他API时，携带token（如何配置）-1" class="headerlink" title="2、如何在访问其他API时，携带token（如何配置）"></a>2、如何在访问其他API时，携带token（如何配置）</h2><h3 id="第一步：如果我们没有登录，直接通过URL，访问除了登录页面以外的页面，是不可以访问的，可以让它跳转到登录页面。这一步，我们利用路由导航守卫来完成"><a href="#第一步：如果我们没有登录，直接通过URL，访问除了登录页面以外的页面，是不可以访问的，可以让它跳转到登录页面。这一步，我们利用路由导航守卫来完成" class="headerlink" title="第一步：如果我们没有登录，直接通过URL，访问除了登录页面以外的页面，是不可以访问的，可以让它跳转到登录页面。这一步，我们利用路由导航守卫来完成"></a>第一步：如果我们没有登录，直接通过URL，访问除了登录页面以外的页面，是不可以访问的，可以让它跳转到登录页面。这一步，我们利用路由导航守卫来完成</h3><p>为router路由对象，添加beforeEach导航守卫。如果用户访问的是登录页，直接放行；如果访问是其他页面，则从sessionStorage取token，看是否为空，如果为空，则跳转到登录页。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">//to将要访问的路径</span>  <span class="token comment">//from代表从哪个路径跳转而来</span>  <span class="token comment">//next是一个函数，表示放行</span>  <span class="token comment">//next() 放行 next('/login')强制跳转</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">'/login'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//获取token</span>  <span class="token keyword">const</span> tokenStr <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tokenStr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意next函数</p><ol><li><p>next() 放行</p></li><li><p>next(‘/login’)跳转到指定页面</p></li></ol><h3 id="第二步：通过axios请求拦截器添加token"><a href="#第二步：通过axios请求拦截器添加token" class="headerlink" title="第二步：通过axios请求拦截器添加token"></a>第二步：通过axios请求拦截器添加token</h3><p>在接口文档中已经说明，需要授权的 API ，必须在请求头中使用 Authorization 字段提供 token 令牌 。</p><p>在导入axios包后，</p><p>做一个请求拦截器，类似于对请求进行预处理，我们在axios的一个use方法中，调用了一个箭头函数，这个箭头函数会将对请求头的Authorization字段填入token值</p><p>config即是一个请求对象</p><p>代码是在main.js入口文件中，配置如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 在最后必须return config</span>  <span class="token keyword">return</span> config<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 例如登录的config在console中打印长这个样子：</p><p><img src="https://img-blog.csdnimg.cn/20210916204459322.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbHo5ODY2,size_20,color_FFFFFF,t_70,g_se,x_16" alt="xiaomin"></p><p> 好了，那我们现在去检查一下别的接口在请求时，是否在请求头中携带了Authorization，在浏览器中选择Network</p><p><img src="https://img-blog.csdnimg.cn/20210916204953605.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAbHo5ODY2,size_20,color_FFFFFF,t_70,g_se,x_16" alt="xiaomin"></p><p> 选择menus这个请求，发现它在请求头中的Authorization带了token，成功。</p><h2 id="3、退出登录、销毁token、并跳转登录页"><a href="#3、退出登录、销毁token、并跳转登录页" class="headerlink" title="3、退出登录、销毁token、并跳转登录页"></a>3、退出登录、销毁token、并跳转登录页</h2><p>那么当我们退出登录时，其实就是销毁了获得的token，那么后续的请求必须生成新的token；</p><p>并且退出后跳转到登录页面</p><p>点击“退出”按钮，触发logout方法，代码如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解ssessionStorage和localStorage</title>
      <link href="/2023/05/23/sessionstorage-localstorage/"/>
      <url>/2023/05/23/sessionstorage-localstorage/</url>
      
        <content type="html"><![CDATA[<h3 id="1-下定义，什么是sessionStorage、localStorage？"><a href="#1-下定义，什么是sessionStorage、localStorage？" class="headerlink" title="1.下定义，什么是sessionStorage、localStorage？"></a>1.下定义，什么是<code>sessionStorage、localStorage</code>？</h3><ul><li><code>sessionStorage</code>和<code>localStorage</code>是浏览器厂商约定开放给开发者的保存数据缓存的api</li><li>延伸：什么是数据缓存？</li><li>例如<code>jpg、png、text</code>文本等数据保存在内存或硬盘里一段时间以备重新读取使用称之为数据缓存。</li></ul><h3 id="2-sessionStorage、localStorage常用的方法有哪些？（从前端开发者角度你可以认为sessionStorage、localStorage是一个对象）"><a href="#2-sessionStorage、localStorage常用的方法有哪些？（从前端开发者角度你可以认为sessionStorage、localStorage是一个对象）" class="headerlink" title="2.sessionStorage、localStorage常用的方法有哪些？（从前端开发者角度你可以认为sessionStorage、localStorage是一个对象）"></a>2.<code>sessionStorage、localStorage</code>常用的方法有哪些？（从前端开发者角度你可以认为<code>sessionStorage、localStorage</code>是一个对象）</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>  <span class="token comment">//从内存的缓存数据获取键为 key 的数据缓存</span>sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">//从内存中移除键为key的数据缓存</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span>  <span class="token comment">//保存数据到硬盘中 （key键-要保存数据的名称 ，value值-要保存的数据）</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>  <span class="token comment">//从硬盘的缓存数据获取键为 key 的数据缓存</span>localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">//从硬盘中移除键为key的数据缓存</span><span class="token comment">//延伸：localStorage、sessionStorage是window对象的属性之一；window.sessionStorage.setItem() === sessionStorage.setItem;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-value值的数据类型只能是字符串。那如何保存对象和数组等数据类型呢"><a href="#3-value值的数据类型只能是字符串。那如何保存对象和数组等数据类型呢" class="headerlink" title="3.value值的数据类型只能是字符串。那如何保存对象和数组等数据类型呢?"></a>3.<code>value</code>值的数据类型只能是字符串。那如何保存对象和数组等数据类型呢?</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> userInfo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"konglingzhan"</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">28</span><span class="token punctuation">}</span>sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将数组或对象用JSON.stringify()转化为json字符串再保存</span><span class="token keyword">let</span> myUserInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"userInfo"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取的时候用JSON.parse将json字符串转化为数组或对象再使用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-两者的区别是什么呢？"><a href="#4-两者的区别是什么呢？" class="headerlink" title="4.两者的区别是什么呢？"></a>4.两者的区别是什么呢？</h3><ol><li><code>sessionStorage</code>的数据缓存是保存在网页窗口的进程内存或线程内存中的，当网页窗口关闭的时候<code>sessionStorage</code>的数据缓存也自动清除了</li><li><code>localStorage</code>的数据缓存是保存在物理硬盘中的，数据不会随着网页窗口关闭或者关闭浏览器而丢失。当需要清除的时候需要到浏览器的设置里手动清除</li></ol><h3 id="5-一些使用场景？"><a href="#5-一些使用场景？" class="headerlink" title="5.一些使用场景？"></a>5.一些使用场景？</h3><ul><li>web后台管理系统调用登录接口时保存返回的用户信息……</li><li>说到底知道了以上原理之后使用场景其实就是缓存一些数据以备复用，而不需要每次需要这些数据的时候都去请求接口</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Description </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 详细安装教程（详解 Git 安装过程的每一个步骤）</title>
      <link href="/2023/05/23/git-xiang-xi-an-zhuang-jiao-cheng-xiang-jie-git-an-zhuang-guo-cheng-de-mei-yi-ge-bu-zou/"/>
      <url>/2023/05/23/git-xiang-xi-an-zhuang-jiao-cheng-xiang-jie-git-an-zhuang-guo-cheng-de-mei-yi-ge-bu-zou/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-详细安装教程（详解-Git-安装过程的每一个步骤）"><a href="#Git-详细安装教程（详解-Git-安装过程的每一个步骤）" class="headerlink" title="Git 详细安装教程（详解 Git 安装过程的每一个步骤）"></a>Git 详细安装教程（详解 Git 安装过程的每一个步骤）</h1><p>版本 :  <code>Git-2.40.0-64-bit.exe</code></p><h4 id="使用许可声明"><a href="#使用许可声明" class="headerlink" title="使用许可声明"></a>使用许可声明</h4><p>双击下载后的 <code>Git-2.40.0-64-bit.exe</code>，开始安装，这个界面主要展示了 <a href="https://so.csdn.net/so/search?q=GPL&amp;spm=1001.2101.3001.7020">GPL</a> 第 2 版协议<a href="https://blog.csdn.net/mukes/article/details/115693833#fn1">1</a>的内容，点击 [next] 到第二步。</p><img src="https://img-blog.csdnimg.cn/e1bba68d04694d5fb98bc92500a6b013.png" alt="001" style="zoom: 80%;"><h4 id="选择安装目录"><a href="#选择安装目录" class="headerlink" title="选择安装目录"></a>选择安装目录</h4><p>可点击 “Browse…” 更换目录，也可直接在方框里面改，我一般直接将 “C” 改为 “D”，这样就直接安装在 D 盘里了。点击 [next] 到第三步。</p><p>![002](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/dd6fab0c1ae049729a7df0105c8951f4.png)</p><h4 id="选择安装组件"><a href="#选择安装组件" class="headerlink" title="选择安装组件"></a>选择安装组件</h4><p>图中这些英文都比较简单，我已经把大概意思翻译出来了，大家根据自己的需要选择勾选。点击 [next] 到第四步。</p><p>![003](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbXVrZXM=,size_20,color_FFFFFF,t_70,g_se,x_16.png)</p><p><code>注：最后一个选项打勾的话，需要下载 Windows Terminal 配合 Git Bash使用</code>，如图：</p><p>![004](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAbXVrZXM=,size_20,color_FFFFFF,t_70,g_se,x_16-1681100993494-5.png)</p><h4 id="选择开始菜单文件夹"><a href="#选择开始菜单文件夹" class="headerlink" title="选择开始菜单文件夹"></a>选择开始菜单文件夹</h4><p>方框内 Git 可改为其他名字，也可点击 “<code>Browse...</code>” 选择其他文件夹或者给”<code>Don't create a Start Menu folder</code>“ 打勾不要文件夹，点击 [next] 到第五步。</p><p>![005](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/78469fca81b541c5986913f233740bb5.png)</p><p>安装成功后在开始菜单里的图如下：</p><p>![006](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2Vz,size_16,color_FFFFFF,t_70.png)</p><p>选择 Git 默认编辑器</p><blockquote><p>Git 安装程序里面内置了 10 种编辑器供你挑选，比如 Atom、Notepad、Notepad++、Sublime Text、Visual Studio Code、Vim 等等，默认的是 Vim ，选择 Vim 后可以直接进行到下一步，但是 Vim 是纯命令行，操作有点难度，需要学习。如果选其他编辑器，则还需要去其官网安装后才能进行下一步。</p></blockquote><p>下图为默认编辑器 <code>Vim</code>.可直接点击 [next] 到第六步。</p><p>![007](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/0518f6fa41f6451b864c2c7a0c4c0f17.png)</p><p>如果你不想用 <code>Vim</code> 当默认编辑器，换一个，比如 <code>Notepad++</code> ，那么你者需要点击下面的蓝色字体 “ Notepad++ “ 去其官网下载安装好才能进行下一步 [next].</p><p>![008](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/b1057c8b5f26494894fa691e84037520.png)</p><p>安装后还要配置在我的电脑-&gt;属性-&gt;高级系统设置-&gt;高级-&gt;环境变量-&gt;系统变量-&gt;Path-&gt;编辑添加 Notepad++ 的安装地址，如 C:\Program Files\notepad++.<br>这样才能在 Git Bash 里面直接调用 Notepad++.</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">$ notepad++ 文件名.后缀  //在 git bash 调用 notepad++ 打开文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新手建议使用 Notepad++ 、Sublime Text，这两个比 Windows 自带的记事本功能多太多了。点击 [next] 到第六步。</p><p>决定初始化新项目(仓库)的主干名字<br>第一种是让 Git 自己选择，名字是 master ，但是未来也有可能会改为其他名字；第二种是我们自行决定，默认是 main，当然，你也可以改为其他的名字。一般默认第一种，点击 [next] 到第七步。</p><p>注： 第二个选项下面有个 NEW！ ，说很多团队已经重命名他们的默认主干名为 main . 这是因为2020 年非裔男子乔治·弗洛伊德因白人警察暴力执法惨死而掀起的 Black Lives Matter(黑人的命也是命)运动，很多人认为 master 不尊重黑人，呼吁改为 main.</p><p>![在这里插入图片描述](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/5044ca0a1c1a4534a274b0d2df580ec3.png)</p><h4 id="调整你的-path-环境变量"><a href="#调整你的-path-环境变量" class="headerlink" title="调整你的 path 环境变量"></a>调整你的 path 环境变量</h4><p>![009](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/bf76981c79714e2586af65fbd48eed01.png)</p><p>翻译如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Use Git from Git Bash only This is the most cautious choice as your PATH will not be modified at all. You w only be able to use the Git command line tools from Git Bash.仅从 Git Bash 使用 Git这是最谨慎的选择，因为您的 PATH 根本不会被修改。您将只能使用 Git Bash 中的 Git 命令行工具。Git from the command line and also from 3rd-party software(Recommended) This option adds only some minimal Git wrappers to your PATH to avoid cluttering your environment with optional Unix tools.You will be able to use Git from Git Bash, the Command Prompt and the Windov PowerShell as well as any third-party software looking for Git in PATH.从命令行以及第三方软件进行 Git（推荐）此选项仅将一些最小的 Git 包装器添加到PATH中，以避免使用可选的 Unix 工具使环境混乱。您将能够使用 Git Bash 中的 Git，命令提示符和 Windov PowerShell 以及在 PATH 中寻找 Git 的任何第三方软件。Use Git and optional Unix tools from the Command Prompt Both Git and the optional Unix tools will be added to your PATH.Warning: This will override Windows tools like "find"and "sort". Only use this option if you understand the implications.使用命令提示符中的 Git 和可选的 Unix 工具Git 和可选的 Unix 工具都将添加到您的 PATH 中。警告：这将覆盖 Windows 工具，例如 "find" and "sort". 仅在了解其含义后使用此选项。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>第一种是仅从 Git Bash 使用 Git。这个的意思就是你只能通过 Git 安装后的 Git Bash 来使用 Git ，其他的什么命令提示符啊等第三方软件都不行。</p></li><li><p>第二种是从命令行以及第三方软件进行 Git。这个就是在第一种基础上进行第三方支持，你将能够从 Git Bash，命令提示符(cmd) 和 Windows PowerShell 以及可以从 Windows 系统环境变量中寻找 Git 的任何第三方软件中使用 Git。推荐使用这个。</p></li><li><p>第三种是从命令提示符使用 Git 和可选的 Unix 工具。选择这种将覆盖 Windows 工具，如 “ find 和 sort ”。只有在了解其含义后才使用此选项。一句话，适合比较懂的人折腾。</p></li></ol><p>选择 SSH 执行文件</p><p>![010](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/a5128524791d4415b2ee612f6357e90d.png)</p><p>翻译如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Use bundled OpenSSH This uses ssh. exe that comes with Git.使用捆绑的 OpenSSH这使用的 ssh.exe 是 Git 自带的 Use (Tortoise) Plink To use PuTTY, specify the path to an existing copy of (Tortoise) Plink.exeSet ssh. variant for Tortoise Plink 使用 TortoisePlink (注，这是一个软件)要使用 PuTTY，请指定 TortoisePlink.exe 的现有副本的路径为 TortoisePlink 设置 ssh.variantUse external OpenSSH NEW! This uses an external ssh. exe. Git will not install its own OpenSSH(and related) binaries but use them as found on the PATH.使用外部 OpenSSH新！这使用外部 ssh.exe 文件。 Git 不会安装自己的 OpenSSH（和相关）二进制文件，而是使用在环境变量 PATH 中找到的它们。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：这是一个新功能，我 2021-4-17 安装的 2.31.1 版本并没有这个选项，先按默认的来吧，先填个坑，有机会再补充</p><h4 id="选择HTTPS后端传输"><a href="#选择HTTPS后端传输" class="headerlink" title="选择HTTPS后端传输"></a>选择HTTPS后端传输</h4><p>![011](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/aee056db19ca4412acb5885e3aca9fdb.png)</p><p>翻译如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use the OpenSSL library Server certificates will be validated using the ca-bundle. crt file.使用 OpenSSL 库服务器证书将使用 ca-bundle.crt 文件进行验证。Use the native Windows Secure Channel library Server certificates will be validated using Windows Certificate Stores.This option also allows you to use your company's internal Root CA certificates distributed e.g. via Active Directory Domain Services.使用本机 Windows 安全通道库服务器证书将使用 Windows 证书存储进行验证。此选项还允许您使用公司内部分发的内部根 CA 证书，例如通过 Active Directory 域服务。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这两种选项有什么区别呢？</p><blockquote><p>来自<a href="https://stackoverflow.com/questions/62456484/whats-the-difference-between-openssl-and-the-native-windows-secure-channel-libr">https://stackoverflow.com/questions/62456484/whats-the-difference-between-openssl-and-the-native-windows-secure-channel-libr</a></p></blockquote><blockquote><p>如果在具有企业管理证书的组织中使用 Git，则将需要使用安全通道。如果你仅使用 Git 来访问公共存储库（例如 GitHub ），或者你的组织不管理自己的证书，那么使用 SSL 后端（它们只是同一协议的不同实现）就可以了。</p></blockquote><p>也就是说，作为普通用户，只是用 Git 来访问 Github、GitLab 等网站，选择前者就行了。点击 [next] 到第十步。</p><h4 id="配置行尾符号转换"><a href="#配置行尾符号转换" class="headerlink" title="配置行尾符号转换"></a>配置行尾符号转换</h4><p>![012](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/0f1968ce5c6a46539ef0dfa324b7ec4c.png)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Checkout Windows-style, commit Unix-style line endings Git will convert LF to CRLF when checking out text files. When committing text files, CRLF will be converted to LF. For cross-platform projects, this is the recommended setting on Windows("core. autocrif"is set to "true").签出 Windows 样式，提交 Unix 样式的行结尾Git 签出文本文件时，会将 LF 转换为 CRLF。提交文本文件时，CRLF 将转换为 LF。对于跨平台项目，这是 Windows 上的建议设置（"core.autocrif" 设置为 "true"）。Checkout as-is, commit Unix-style line endings Git will not perform any conversion when checking out text files. When committing text files, CRLF will be converted to LF. For cross-platform projects, this is the recommended setting on Unix("core.autocrif" is set to "input").按原样签出，提交 Unix 样式的行结尾Git 在签出文本文件时不会执行任何转换。提交文本文件时，CRLF 将转换为 LF。对于跨平台项目，这是在 Unix 上的建议设置（"core.autocrif" 设置为 "input"）。Checkout as-is, commit as-is Git will not perform any conversions when checking out or committing text files. Choosing this option is not recommended for cross-platform projects("core. autocrif"is set to "false").按原样签出，按原样提交Git 在签出或提交文本文件时不会执行任何转换。不建议跨平台项目选择此选项（"core.autocrif" 设置为 "false"）。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这三种选择分别是：</p><ul><li><code>签出 Windows 样式，提交 Unix 样式的行结尾。</code></li><li><code>按原样签出，提交Unix样式的行结尾。</code></li><li><code>按原样签出，按原样提交。</code></li></ul><p>那 Windows 样式和 Unix 样式到底有什么区别呢？</p><blockquote><p>引用 《GitHub入门与实践》 第 50 页内容2</p><p>GitHub 中公开的代码大部分都是以 Mac 或 Linux 中的 LF（Line Feed）换行。然而，由于 Windows 中是以 CRLF（Carriage Return+ Line Feed）换行的，所以在非对应的编辑器中将不能正常显示。</p><p>Git 可以通过设置自动转换这些换行符。使用 Windows 环境的各位，请选择推荐的 “Checkout Windows-style，commit Unix-style line endings” 选项。换行符在签出时会自动转换为 CRLF，在提交时则会自动转换为 LF .</p><p>上面说 Mac 、Linux、Unix 的 Line Feed ，翻译过来就是换行符，用 “\n” 表示，换行符 “\n” 的 ASCII 值为10；<br>Windows 的是 Carriage Return+ Line Feed（回车+换行），用 “\r\n” 表示，回车符 “\r” 的 ASCII 值为13；</p></blockquote><ul><li><p>这上下两者是不一样的。<br>所以这就需要转换了，至于为什么选第一项？<br>这还用问吗？我们现在的教程就是介绍怎么安装 Windows 版 Git，肯定选第一项啦。</p></li><li><p>至于 “回车”（carriage return）和 “换行”（line feed）这两个概念的来历和区别？<br>引用一下 阮一峰老师博客的部分内容</p></li><li><p>在计算机还没有出现之前，有一种叫做电传打字机（Teletype Model 33）的玩意，每秒钟可以打10个字符。但是它有一个问题，就是打字机打完一行换行的时候，要用去0.2秒，正好可以打两个字符。要是在这0.2秒里面，又有新的字符传过来，那么这个字符将丢失。<br>于是，研制人员想了个办法解决这个问题，就是在每行后面加两个表示结束的字符。一个叫做”回车”，告诉打字机把打印头定位在左边界；另一个叫做”换行”，告诉打字机把纸向下移一行。</p></li></ul><p>更多资料参考：</p><blockquote><p>腾讯云 - 换行符 ‘\n’ 和 回车符 ‘\r’ 的区别？[<a href="https://cloud.tencent.com/developer/article/1353286]">https://cloud.tencent.com/developer/article/1353286]</a><br>知乎 - 为什么会用\r\n两个字符表示换行？[<a href="https://www.zhihu.com/question/29326647]">https://www.zhihu.com/question/29326647]</a><br>Stackoverflow - What are carriage return, linefeed, and form feed?[<a href="https://stackoverflow.com/questions/3091524/what-are-carriage-return-linefeed-and-form-feed]">https://stackoverflow.com/questions/3091524/what-are-carriage-return-linefeed-and-form-feed]</a><br>点击 [next] 到第十一步。</p></blockquote><h4 id="配置终端模拟器以与-Git-Bash-一起使用"><a href="#配置终端模拟器以与-Git-Bash-一起使用" class="headerlink" title="配置终端模拟器以与 Git Bash 一起使用"></a>配置终端模拟器以与 Git Bash 一起使用</h4><p>![013](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/01177039343f447ab1c873d59269db94.png)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Use MinTTY(the default terminal of MSYS2) Git Bash will use MinTTY as terminal emulator, which sports a resizable windownon-rectangular selections and a Unicode font.Windows console programs(suchas interactive Python) must be launched via 'winpty' to work in MinTTY.使用 MinTTY（MSYS2的默认终端）Git Bash 将使用 MinTTY 作为终端仿真器，该仿真器具有可调整大小的窗口非矩形选择和 Unicode 字体。Windows 控制台程序（例如交互式 Python）必须通过 "winpty" 启动才能在 MinTTY 中运行。Use Windows' default console window Git will use the default console window of Windows("cmd.exe"), which works vwith Win32 console programs such as interactive Python or node. js, but has avery limited default scroll-back,needs to be configured to use a Unicode font in order to display non-ASCII characters correctly, and prior to Windows 10 its window was not freely resizable and it only allowed rectangular text selections.&lt;br&gt;使用 Windows 的默认控制台窗口Git 将使用 Windows 的默认控制台窗口（"cmd.exe"），该窗口可与 Win32 控制台程序（例如交互式Python 或 node.js）一起使用，但默认回滚非常有限，需要将其配置为使用 Unicode 字体才能正确显示非 ASCII 字符，并且在 Windows 10 之前，其窗口不可随意调整大小，并且仅允许选择矩形文本。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>建议选择第一种，MinTTY 3功能比 cmd 多，cmd 只不过 比 MinTTY 更适合处理 Windows 的一些接口问题，这个对 Git 用处不大，除此之外 Windows 的默认控制台窗口（cmd）有很多劣势，比如 cmd 具有非常有限的默认历史记录回滚堆栈和糟糕的字体编码等等。<br>相比之下，MinTTY 具有可调整大小的窗口和其他有用的可配置选项，可以通过右键单击的工具栏来打开它们 git-bash 。点击 [next] 到第十二步。</p><h4 id="选择默认的-“git-pull”-行为"><a href="#选择默认的-“git-pull”-行为" class="headerlink" title="选择默认的 “git pull” 行为"></a>选择默认的 “git pull” 行为</h4><p>![014](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/0d65965260c74054983f04c8fb330b49.png)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ODefault(fast-forward or merge)This is the standard behavior ofgit pull": fast-forward the current branch to the fetched branch when possible, otherwise create a merge commit.默认（快进或合并）这是 "git pull" 的标准行为：在可能的情况下将 当前分支 快进到 获取的分支，否则创建合并提交。ORebase Rebase the current branch onto the fetched branch. If there are no local commits to rebase, this is equivalent to a fast-forward.变基将当前分支变基到获取的分支上。如果没有本地提交要变基，则等同于快进。Oonly ever fast-forward Fast-forward to the fetched branch. Fail if that is not possible.只能快进快进到获取的分支。如果不可能，则失败。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>“git pull” 是什么意思呢？<br><code>git pull</code> 就是获取最新的远程仓库分支到本地，并与本地分支合并</p><p>上面给了三个 “git pull” 的行为：</p><ol><li><p>第一个是 <code>merge</code></p></li><li><p>第二个是 <code>rebase</code></p></li><li><p>第三个是 直接获取</p></li><li><p>第一种<code> git pull = git fetch + git merge</code></p></li><li><p>第二种<code> git pull = git fetch + git rebase</code></p></li><li><p>第三种<code> git pull = git fetch</code> ？(这个没试过，纯属猜测</p></li></ol><p>一般默认选择第一项，<code>git rebase</code> 绝大部分程序员都用不好或者不懂，而且风险很大，但是很多会用的人也很推崇，但是用不好就是灾难。</p><p><code>git pull</code> 只是拉取远程分支并与本地分支合并，而 <code>git fetch</code> 只是拉取远程分支，怎么合并，选择 merge 还是 rebase ，可以再做选择。</p><p>更多参考资料：</p><blockquote><p>知乎 - git pull 和 git fetch的区别？ [<a href="https://www.zhihu.com/question/38305012]">https://www.zhihu.com/question/38305012]</a><br>知乎 - 在开发过程中使用 git rebase 还是 git merge，优缺点分别是什么？ [<a href="https://www.zhihu.com/question/36509119]">https://www.zhihu.com/question/36509119]</a><br>Stackoverflow - Why does git perform fast-forward merges by default? [<a href="https://stackoverflow.com/questions/2850369]">https://stackoverflow.com/questions/2850369]</a><br>Stackoverflow - In git how is fetch different than pull and how is merge different than rebase? [<a href="https://stackoverflow.com/questions/14894768/]">https://stackoverflow.com/questions/14894768/]</a><br>Stackoverflow - Difference between git pull and git pull –rebase [<a href="https://stackoverflow.com/questions/18930527]">https://stackoverflow.com/questions/18930527]</a></p></blockquote><h4 id="选择一个凭证帮助程序"><a href="#选择一个凭证帮助程序" class="headerlink" title="选择一个凭证帮助程序"></a>选择一个凭证帮助程序</h4><p>![015](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/fe3c254258b84f9a84c0ed40d7a1602d.png)</p><p>翻译如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Git Credential Manager Use the cross-platform Git Credential Manager.See more information about the future of Git Credential Manager here.Git 凭证管理使用跨平台的 Git  凭证管理。在此处查看有关 Git 凭证管理未来的更多信息。None Do not use a credential helper.不使用凭证助手。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一共两个选项：<br><code>Git 凭证管理</code><br><code>不使用凭证助手</code></p><p>第一个选项是提供登录凭证帮助的，Git 有时需要用户的凭据才能执行操作；例如，可能需要输入用户名和密码才能通过 HTTP 访问远程存储库（GitHub，GItLab 等等）。</p><p>登录图如下(属于第一个选项的，老图了)，来自<a href="https://segmentfault.com/q/1010000011171685">https://segmentfault.com/q/1010000011171685</a></p><p>![016](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2Vz,size_16,color_FFFFFF,t_70-1681101905774-47.png)</p><p>更多参考资料：</p><blockquote><p>Stackoverflow - Is Control Panel’s Credential Manager same as git’s credential helpers Credential Manager and Credential manager Core? [<a href="https://stackoverflow.com/questions/66795897]">https://stackoverflow.com/questions/66795897]</a><br>GitHub - Git Credential Manager Core [<a href="https://github.com/microsoft/Git-Credential-Manager-Core]">https://github.com/microsoft/Git-Credential-Manager-Core]</a><br>GitHub - Git Credential Manager Core Core FAQ [<a href="https://github.com/microsoft/Git-Credential-Manager-Core/blob/master/docs/faq.md#about-the-project]">https://github.com/microsoft/Git-Credential-Manager-Core/blob/master/docs/faq.md#about-the-project]</a><br>Git官网文档 - <a href="https://git-scm.com/docs/gitcredentials">https://git-scm.com/docs/gitcredentials</a> [<a href="https://git-scm.com/docs/gitcredentials]">https://git-scm.com/docs/gitcredentials]</a></p></blockquote><p>注：资料链接建议不用看，这个本来三个选项的，不知因何回退成两个选项了，原本的那个新选项被取消了</p><p>点击 [next] 进到十四步。</p><h4 id="配置额外的选项"><a href="#配置额外的选项" class="headerlink" title="配置额外的选项"></a>配置额外的选项</h4><p>![017](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/f9aee091420b4807b961f48a00afd6f8.png)</p><p>翻译如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Enable file system caching File system data will be read in bulk and cached in memory for certain operations("core.fscache" is set to "true"). This provides a significant performance boost.启用文件系统缓存将批量读取文件系统数据并将其缓存在内存中以进行某些操作（"core.fscache” 设置为 "true"）。这可以显着提高性能。Enable symbolic links Enable symbolic links(requires the SeCreateSymbolicLink permission).Please note that existing repositories are unaffected by this setting.启用符号链接启用符号链接（需要SeCreateSymbolicLink权限）。请注意，现有存储库不受此设置的影响。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有两个选项：<br><code>启用文件系统缓存</code><br><code>启用符号链接</code></p><p><code>启用文件系统缓存</code>就是将批量读取文件系统数据并将其缓存在内存中以进行某些操作，可以显著提升性能。这个选项默认开启。<br><code>启用符号链接</code> ，符号链接是一类特殊的文件， 其包含有一条以绝对路径或者相对路径的形式指向其它文件或者目录的<code>引用</code>，类似于 Windows 的快捷方式，不完全等同 类Unix（如 Linux） 下的 符号链接。因为该功能的支持需要一些<code>条件</code>，所以默认不开启。</p><p>更多关于 “符号链接” 参考资料：</p><blockquote><p>GitHub - Symbolic-Links [<a href="https://github.com/git-for-windows/git/wiki/Symbolic-Links]">https://github.com/git-for-windows/git/wiki/Symbolic-Links]</a><br>Stackoverflow - How does Git handle symbolic links? [<a href="https://stackoverflow.com/questions/954560/]">https://stackoverflow.com/questions/954560/]</a><br>Stackoverflow - What is the difference between NTFS Junction Points and Symbolic Links? [<a href="https://stackoverflow.com/questions/9042542/]">https://stackoverflow.com/questions/9042542/]</a></p></blockquote><p>点击 [next] 到第十五步。</p><h4 id="配置实验性选项"><a href="#配置实验性选项" class="headerlink" title="配置实验性选项"></a>配置实验性选项</h4><p>![018](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/88422790b5e3410c92eb2bafef00e7fc.png)</p><p>翻译如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Enable experimental support for pseudo consoles.(NEW!) This allows running native console programs like Node or Python in a Git Bash window without using winpty, but it still has known bugs.启用对伪控制台的实验性支持。(新功能!) 这允许在不使用 winpty 的情况下在 Git Bash 窗口中运行诸如 Node 或 Python 之类的本机控制台程序，但是它仍然存在已知的 bug。Enable experimental built-in file system monitor(NEW!) Automatically run a built-in file system watcher, to speed up common operations such as ' git status', ' git add', ' git commit', etc in worktrees containing many files.启用实验性内置文件系统监视器（新！）自动运行内置文件系统监视器，以加快包含许多文件的工作树中的常见操作，例如 'git status'、'git add'、'git commit' 等.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是实验性功能，可能会有一些小错误之类的，建议不用开启。<br>点击 [install] 进行安装。</p><p>![019](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/5e1699e416034847aeaa75878e5533d0.png)</p><p>…<br>…<br>…<br><code>安装成功</code></p><p>![020](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/a027138e46344191b181fa2d9510decf.png)</p><h3 id="Git-的功能介绍"><a href="#Git-的功能介绍" class="headerlink" title="Git 的功能介绍"></a>Git 的功能介绍</h3><p>这是安装成功后开始菜单里面的图。</p><p>![021](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2Vz,size_16,color_FFFFFF,t_70-1681102097473-58.png)</p><p>有 Git Bash、Git CMD、Git FAQs、Git GUI、Git Release Note，下面我们就分别介绍一下这几个。</p><h4 id="Git-Bash"><a href="#Git-Bash" class="headerlink" title="Git Bash"></a>Git Bash</h4><p><code>Git Bash</code> 是基于CMD的，在CMD的基础上增添一些新的命令与功能，平时主要用这个，功能很丰富，长这样：</p><p>![022](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2Vz,size_16,color_FFFFFF,t_70-1681102158438-61.png)</p><h4 id="Git-CMD"><a href="#Git-CMD" class="headerlink" title="Git CMD"></a>Git CMD</h4><p><code>Git CMD</code> 不能说和 cmd 完全一样，只能说一模一样，功能少得可怜，两者如下图：</p><p>![023](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2Vz,size_16,color_FFFFFF,t_70-1681102173915-64.png)</p><h4 id="Git-FAQs"><a href="#Git-FAQs" class="headerlink" title="Git FAQs"></a>Git FAQs</h4><p><code>Git FAQs</code> 就是 Git Frequently Asked Questions（常问问题），访问地址：<a href="https://github.com/git-for-windows/git/wiki/FAQ">https://github.com/git-for-windows/git/wiki/FAQ</a></p><h4 id="Git-GUI"><a href="#Git-GUI" class="headerlink" title="Git GUI"></a>Git GUI</h4><p><code>Git GUI</code> 就是 Git 的图形化界面，如下图：</p><p>![024](./Git 详细安装教程（详解 Git 安装过程的每一个步骤）.assets/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211a2Vz,size_16,color_FFFFFF,t_70-1681102199860-67.png)</p><p>可以通过它快速<code>创建新仓库（项目），克隆存在的仓库（项目），打开存在的仓库（仓库）。这个我用的很少，建议还是用命令行学习Git</code>。</p><h4 id="Git-Release-Note"><a href="#Git-Release-Note" class="headerlink" title="Git Release Note"></a>Git Release Note</h4><p><code>Git Release Note</code> 就是版本说明，增加了什么功能，修复了什么 bug 之类的。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Description </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何书写和上传文章</title>
      <link href="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/"/>
      <url>/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h2 id="在创建完博客之后"><a href="#在创建完博客之后" class="headerlink" title="在创建完博客之后"></a>在创建完博客之后</h2><ol><li>在<img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523203205922.png" alt="image-20230523203205922" style="zoom:50%;">选中进去后右键<img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523203259322.png" alt="image-20230523203259322" style="zoom:30%;">选择<code>Git Bash Here</code></li><li>打开之后输入命令<code>hexo new "书写文章(文件)名字"</code></li><li>使用markdown工具打开<code>md</code>文件一般会得到<img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523203719552.png" alt="image-20230523203719552" style="zoom:33%;">这种源代码格式</li><li>然后即可在下方输入您要上传的文章内容,<code>md</code>格式和语法可参考<a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法 | Markdown 官方教程</a></li><li>文章写好以后在打开的<code>Git Bash Here</code>中输入<code>hexo clean</code>回车之后清除<code>public、db.json</code>文件夹和文件<br><img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523205328874.png" alt="image-20230523205328874"></li><li>之后输入<code>hexo g</code> <img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523205430235.png" alt="image-20230523205430235" style="zoom:33%;"></li><li>之后输入<code>hexo s</code> 预览,此处注意可能出现错误,插件安装,安装可能不兼容等<img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523205510593.png" alt="image-20230523205510593" style="zoom:50%;"></li><li>打开浏览器输入<code>http://localhost:4000</code>进行预览<img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523210340914.png" alt="image-20230523210340914" style="zoom:30%;"></li><li>确认之后 <code>Ctrl + C</code> 退出,之后输入<code>hexo d</code>进行上传部署<img src="/2023/05/23/ru-he-shu-xie-he-shang-chuan-wen-zhang/image-20230523210232147.png" alt="image-20230523210232147" style="zoom:33%;"></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Description </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery主题自定义(一)黑夜模式</title>
      <link href="/2022/07/01/shen-se-mo-shi/"/>
      <url>/2022/07/01/shen-se-mo-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="黑夜模式"><a href="#黑夜模式" class="headerlink" title="黑夜模式"></a>黑夜模式</h2><blockquote><p>作为一个前端学习者，自然懂得黑夜模式的重要性，可惜主题原生未提供，那就自己弄吧</p></blockquote><p>个人博客作为效果参考：<a href="https://jieniyou.github.io/">https://jieniyou.github.io/</a></p><h3 id="设置基础样式"><a href="#设置基础样式" class="headerlink" title="设置基础样式"></a>设置基础样式</h3><p>参考其他优秀产品的黑夜模式，得出共性：</p><ul><li>那就是黑夜模式的背景一般不会是纯黑（#000）；而是淡黑色，字体也不是纯白（#fff）而浅白色</li><li>图片亮度降低</li></ul><p>下面就开始贴代码了</p><p>在 <code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code> 中加上下面的代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 字体颜色变灰白色 */</span><span class="token selector">body.DarkMode .fas,body.DarkMode .title,body.DarkMode .row .text,body.DarkMode article .article-content .summary,body.DarkMode .card .card-image .card-title,body.DarkMode .fa-moon-o:before,body.DarkMode .fa-lightbulb-o:before,body.DarkMode article .article-tags .chip,body.DarkMode .chip-container .tag-title,body.DarkMode div.jqcloud a,body.DarkMode .friends-container .tag-title,body.DarkMode .frind-ship .title h1,body.DarkMode .card .card-content p,body.DarkMode .card .card-content .dss,body.DarkMode .v[data-class='v'] .vcount,body.DarkMode .v[data-class='v'] .vcount .vnum,body.DarkMode pre code,body.DarkMode h1,body.DarkMode h2,body.DarkMode h3,body.DarkMode h4,body.DarkMode h5,body.DarkMode h6,body.DarkMode li,body.DarkMode p,body.DarkMode header .side-nav .mobile-head .logo-name,body.DarkMode header .side-nav .mobile-head .logo-desc,body.DarkMode header .side-nav .menu-list a,body.DarkMode .bg-cover .post-title,body.DarkMode.read .bg-cover .description</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 背景颜色变灰色 */</span><span class="token selector">body.DarkMode .card,body.DarkMode .block-with-text:after</span> <span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #282c34<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 背景颜色变黑色 */</span><span class="token selector">body.DarkMode,body.DarkMode .v[data-class='v'] .vcount,body.DarkMode #rewardModal .modal-content,body.DarkMode .modal,body.DarkMode header .side-nav,body.DarkMode header .side-nav .menu-list .m-nav-show</span> <span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #12121c<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 改变透明度 */</span><span class="token selector">body.DarkMode .aplayer</span> <span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> #2f3742 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode img,body.DarkMode strong</span> <span class="token punctuation">{</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">brightness</span><span class="token punctuation">(</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*toc目录滤镜*/</span><span class="token selector">body.DarkMode .toc-widget</span> <span class="token punctuation">{</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">invert</span><span class="token punctuation">(</span>0.8<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode .toc-widget .toc-list-item</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">}</span><span class="token comment">/* Skill bar text color */</span><span class="token selector">body.DarkMode .skillbar .skill-bar-percent</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="切换按钮"><a href="#切换按钮" class="headerlink" title="切换按钮"></a>切换按钮</h3><p>完成了背景、字体、图片的样式，就需要黑夜白天切换按钮了</p><p>在 <code>themes&gt;hexo-theme-matery&gt;layout&gt;_widget</code> 中创建一个新的文件 <strong>day-night.ejs</strong>，在新建的文件中加入下面的代码</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">&lt;!-- 白天和黑夜主题 --&gt;&lt;div class="sum-moon-box"&gt;  &lt;a class="btn-floating btn-large waves-effect waves-light" onclick="switchNightMode()" title="切换主题" &gt;    &lt;i id="sum-moon-icon" class="fas fa-sun" style="width:48px; height:48px; font-size: 28px;"&gt;&lt;/i&gt;  &lt;/a&gt;&lt;/div&gt;&lt;script&gt;  function switchNightMode() {    $('&lt;div class="Cuteen_DarkSky"&gt;&lt;div class="Cuteen_DarkPlanet"&gt;&lt;/div&gt;&lt;/div&gt;').appendTo($('body')),      setTimeout(function () {        $('body').hasClass('DarkMode')         ? ($('body').removeClass('DarkMode'), localStorage.setItem('isDark', '0'), $('#sum-moon-icon').removeClass("fa-sun").addClass('fa-moon'))         : ($('body').addClass('DarkMode'), localStorage.setItem('isDark', '1'), $('#sum-moon-icon').addClass("fa-sun").removeClass('fa-moon')),                  setTimeout(function () {          $('.Cuteen_DarkSky').fadeOut(1e3, function () {            $(this).remove()          })        }, 2e3)      })  }&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再在 <code>themes&gt;hexo-theme-matery&gt;layout&gt;layout.ejs</code> 文件中引用一下</p><blockquote><p>需要在 body 标签内部插入下面代码</p></blockquote><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">&lt;%- partial('_widget/day-night.ejs') %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="按钮样式"><a href="#按钮样式" class="headerlink" title="按钮样式"></a>按钮样式</h3><p>完成上面操作以后，就需要添加按钮样式和切换动画了，同样是在 <code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code> 中</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 黑夜模式动画 */</span><span class="token selector">.Cuteen_DarkSky,.Cuteen_DarkSky:before</span> <span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 8888<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.Cuteen_DarkSky</span> <span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#feb8b0<span class="token punctuation">,</span> #fef9db<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.Cuteen_DarkSky:before</span> <span class="token punctuation">{</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 2s ease all<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#4c3f6d<span class="token punctuation">,</span> #6c62bb<span class="token punctuation">,</span> #93b1ed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.DarkMode .Cuteen_DarkSky:before</span> <span class="token punctuation">{</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.Cuteen_DarkPlanet</span> <span class="token punctuation">{</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 9999<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -50%<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -50%<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 200%<span class="token punctuation">;</span>    <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> CuteenPlanetMove 2s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.7<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> CuteenPlanetMove 2s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.7<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transform-origin</span><span class="token punctuation">:</span> center bottom<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> CuteenPlanetMove</span> <span class="token punctuation">{</span>    <span class="token selector">0%</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">to</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> CuteenPlanetMove</span> <span class="token punctuation">{</span>    <span class="token selector">0%</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">to</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">.Cuteen_DarkPlanet:after</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 35%<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 9.375rem<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 9.375rem<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#fefefe<span class="token punctuation">,</span> #fffbe8<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/*黑夜模式按钮*/</span><span class="token selector">.sum-moon-box</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 195px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 900<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.sum-moon-box .btn-floating</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.sum-moon-box i</span> <span class="token punctuation">{</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 48px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="定时提示切换黑夜模式"><a href="#定时提示切换黑夜模式" class="headerlink" title="定时提示切换黑夜模式"></a>定时提示切换黑夜模式</h3><blockquote><p>在 <code>themes&gt;hexo-theme-matery&gt;source&gt;js&gt;matery.js</code> 中添加下列代码</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">//黑夜模式提醒开启功能</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">19</span> <span class="token operator">||</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> toastHTML <span class="token operator">=</span> <span class="token string">'&lt;span style="color:#97b8b2;border-radius: 10px;&gt;'</span> <span class="token operator">+</span> <span class="token string">'&lt;i class="fa fa-bellaria-hidden="true"&gt;&lt;/i&gt;晚上使用黑夜模式阅读能够减轻视觉疲劳。&lt;/span&gt;'</span>        <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">html</span><span class="token operator">:</span> toastHTML <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="黑夜模式持久化"><a href="#黑夜模式持久化" class="headerlink" title="黑夜模式持久化"></a>黑夜模式持久化</h3><blockquote><p>在 <code>themes&gt;hexo-theme-matery&gt;layout&gt;layout.ejs</code> 中添加下列代码（最好插入在 <code>&lt;%- partial('_partial/day-night.ejs') %&gt;</code> 下面）</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/* 模式判断 */</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    <span class="token comment">/* 模式判断 */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'isDark'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'DarkMode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#sum-moon-icon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeleClass</span><span class="token punctuation">(</span><span class="token string">"fa-sun"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'fa-moon'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完成以上操作就完成了基本的黑夜模式了。</p><h3 id="黑夜白天切换的动态背景"><a href="#黑夜白天切换的动态背景" class="headerlink" title="黑夜白天切换的动态背景"></a>黑夜白天切换的动态背景</h3><p>下面这是黑夜白天切换的动态背景，在你新建的 <strong>day-night.ejs</strong> 文件中加入下列代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stars-con<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stars<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stars2<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stars3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>themes&gt;hexo-theme-matery&gt;source&gt;css&gt;matery.css</code> 中加上下面的代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*黑夜模式背景*/</span><span class="token selector">body.DarkMode</span> <span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#15151b<span class="token punctuation">,</span> #1b1b2e<span class="token punctuation">,</span> #231832<span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> animStar</span> <span class="token punctuation">{</span>    <span class="token selector">from</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token selector">to</span> <span class="token punctuation">{</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-2000px<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode .stars-con</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> -111<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#15151b<span class="token punctuation">,</span> #1b1b2e<span class="token punctuation">,</span> #231832<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode #stars</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 1804px 1265px #fff<span class="token punctuation">,</span> 365px 332px #fff<span class="token punctuation">,</span> 86px 1888px #fff<span class="token punctuation">,</span> 1888px 484px #fff<span class="token punctuation">,</span> 199px 1489px #fff<span class="token punctuation">,</span> 1459px 1010px #fff<span class="token punctuation">,</span> 807px 388px #fff<span class="token punctuation">,</span> 855px 558px #fff<span class="token punctuation">,</span> 83px 1095px #fff<span class="token punctuation">,</span> 1418px 377px #fff<span class="token punctuation">,</span> 677px 886px #fff<span class="token punctuation">,</span> 862px 1709px #fff<span class="token punctuation">,</span> 1058px 1085px #fff<span class="token punctuation">,</span> 50px 1772px #fff<span class="token punctuation">,</span> 1941px 1544px #fff<span class="token punctuation">,</span> 377px 900px #fff<span class="token punctuation">,</span> 184px 712px #fff<span class="token punctuation">,</span> 1797px 1928px #fff<span class="token punctuation">,</span> 507px 1861px #fff<span class="token punctuation">,</span> 1849px 19px #fff<span class="token punctuation">,</span> 1399px 200px #fff<span class="token punctuation">,</span> 972px 497px #fff<span class="token punctuation">,</span> 795px 1109px #fff<span class="token punctuation">,</span> 746px 970px #fff<span class="token punctuation">,</span> 1524px 972px #fff<span class="token punctuation">,</span> 1631px 389px #fff<span class="token punctuation">,</span> 1026px 1016px #fff<span class="token punctuation">,</span> 1295px 862px #fff<span class="token punctuation">,</span> 1258px 1876px #fff<span class="token punctuation">,</span> 791px 189px #fff<span class="token punctuation">,</span> 1519px 45px #fff<span class="token punctuation">,</span> 592px 1405px #fff<span class="token punctuation">,</span> 620px 130px #fff<span class="token punctuation">,</span> 1044px 1171px #fff<span class="token punctuation">,</span> 37px 1578px #fff<span class="token punctuation">,</span> 1589px 86px #fff<span class="token punctuation">,</span> 1024px 528px #fff<span class="token punctuation">,</span> 1613px 568px #fff<span class="token punctuation">,</span> 912px 1175px #fff<span class="token punctuation">,</span> 1177px 133px #fff<span class="token punctuation">,</span> 67px 1641px #fff<span class="token punctuation">,</span> 1168px 357px #fff<span class="token punctuation">,</span> 310px 1873px #fff<span class="token punctuation">,</span> 1187px 573px #fff<span class="token punctuation">,</span> 308px 1839px #fff<span class="token punctuation">,</span> 565px 24px #fff<span class="token punctuation">,</span> 1691px 1555px #fff<span class="token punctuation">,</span> 1384px 1551px #fff<span class="token punctuation">,</span> 179px 861px #fff<span class="token punctuation">,</span> 1850px 1966px #fff<span class="token punctuation">,</span> 1169px 1979px #fff<span class="token punctuation">,</span> 1182px 1522px #fff<span class="token punctuation">,</span> 616px 751px #fff<span class="token punctuation">,</span> 1083px 908px #fff<span class="token punctuation">,</span> 684px 766px #fff<span class="token punctuation">,</span> 67px 955px #fff<span class="token punctuation">,</span> 1813px 1714px #fff<span class="token punctuation">,</span> 1256px 1413px #fff<span class="token punctuation">,</span> 332px 803px #fff<span class="token punctuation">,</span> 1670px 1921px #fff<span class="token punctuation">,</span> 362px 211px #fff<span class="token punctuation">,</span> 1513px 423px #fff<span class="token punctuation">,</span> 1304px 1145px #fff<span class="token punctuation">,</span> 1292px 1168px #fff<span class="token punctuation">,</span> 611px 802px #fff<span class="token punctuation">,</span> 1297px 575px #fff<span class="token punctuation">,</span> 540px 1289px #fff<span class="token punctuation">,</span> 1551px 1678px #fff<span class="token punctuation">,</span> 1545px 237px #fff<span class="token punctuation">,</span> 423px 138px #fff<span class="token punctuation">,</span> 1088px 28px #fff<span class="token punctuation">,</span> 642px 1637px #fff<span class="token punctuation">,</span> 429px 1293px #fff<span class="token punctuation">,</span> 1276px 1900px #fff<span class="token punctuation">,</span> 1168px 1696px #fff<span class="token punctuation">,</span> 847px 837px #fff<span class="token punctuation">,</span> 151px 1395px #fff<span class="token punctuation">,</span> 1490px 75px #fff<span class="token punctuation">,</span> 1588px 131px #fff<span class="token punctuation">,</span> 1739px 1358px #fff<span class="token punctuation">,</span> 709px 624px #fff<span class="token punctuation">,</span> 343px 502px #fff<span class="token punctuation">,</span> 1342px 1690px #fff<span class="token punctuation">,</span> 175px 1722px #fff<span class="token punctuation">,</span> 964px 1299px #fff<span class="token punctuation">,</span> 892px 1326px #fff<span class="token punctuation">,</span> 519px 1142px #fff<span class="token punctuation">,</span> 1014px 193px #fff<span class="token punctuation">,</span> 1181px 360px #fff<span class="token punctuation">,</span> 325px 139px #fff<span class="token punctuation">,</span> 482px 1199px #fff<span class="token punctuation">,</span> 613px 8px #fff<span class="token punctuation">,</span> 1976px 1125px #fff<span class="token punctuation">,</span> 346px 60px #fff<span class="token punctuation">,</span> 1565px 818px #fff<span class="token punctuation">,</span> 268px 1590px #fff<span class="token punctuation">,</span> 213px 1666px #fff<span class="token punctuation">,</span> 800px 464px #fff<span class="token punctuation">,</span> 974px 1825px #fff<span class="token punctuation">,</span> 1066px 23px #fff<span class="token punctuation">,</span> 1995px 1499px #fff<span class="token punctuation">,</span> 666px 1130px #fff<span class="token punctuation">,</span> 1074px 1710px #fff<span class="token punctuation">,</span> 1636px 1483px #fff<span class="token punctuation">,</span> 1379px 1509px #fff<span class="token punctuation">,</span> 1221px 887px #fff<span class="token punctuation">,</span> 1857px 964px #fff<span class="token punctuation">,</span> 1046px 993px #fff<span class="token punctuation">,</span> 1875px 643px #fff<span class="token punctuation">,</span> 1504px 1607px #fff<span class="token punctuation">,</span> 1065px 641px #fff<span class="token punctuation">,</span> 1095px 752px #fff<span class="token punctuation">,</span> 566px 1737px #fff<span class="token punctuation">,</span> 1972px 1778px #fff<span class="token punctuation">,</span> 146px 1517px #fff<span class="token punctuation">,</span> 1923px 588px #fff<span class="token punctuation">,</span> 557px 881px #fff<span class="token punctuation">,</span> 1885px 1950px #fff<span class="token punctuation">,</span> 1739px 1598px #fff<span class="token punctuation">,</span> 1048px 501px #fff<span class="token punctuation">,</span> 1316px 705px #fff<span class="token punctuation">,</span> 1900px 1697px #fff<span class="token punctuation">,</span> 1187px 917px #fff<span class="token punctuation">,</span> 1688px 1025px #fff<span class="token punctuation">,</span> 648px 1634px #fff<span class="token punctuation">,</span> 1002px 572px #fff<span class="token punctuation">,</span> 603px 1995px #fff<span class="token punctuation">,</span> 215px 693px #fff<span class="token punctuation">,</span> 688px 1374px #fff<span class="token punctuation">,</span> 1389px 1166px #fff<span class="token punctuation">,</span> 1310px 1140px #fff<span class="token punctuation">,</span> 245px 587px #fff<span class="token punctuation">,</span> 845px 63px #fff<span class="token punctuation">,</span> 296px 1646px #fff<span class="token punctuation">,</span> 792px 350px #fff<span class="token punctuation">,</span> 756px 1493px #fff<span class="token punctuation">,</span> 1553px 1079px #fff<span class="token punctuation">,</span> 850px 66px #fff<span class="token punctuation">,</span> 963px 1904px #fff<span class="token punctuation">,</span> 81px 207px #fff<span class="token punctuation">,</span> 1776px 1634px #fff<span class="token punctuation">,</span> 1759px 521px #fff<span class="token punctuation">,</span> 1761px 1536px #fff<span class="token punctuation">,</span> 601px 1485px #fff<span class="token punctuation">,</span> 898px 153px #fff<span class="token punctuation">,</span> 48px 648px #fff<span class="token punctuation">,</span> 1644px 1109px #fff<span class="token punctuation">,</span> 1974px 60px #fff<span class="token punctuation">,</span> 1278px 653px #fff<span class="token punctuation">,</span> 616px 432px #fff<span class="token punctuation">,</span> 1179px 1849px #fff<span class="token punctuation">,</span> 739px 677px #fff<span class="token punctuation">,</span> 808px 1850px #fff<span class="token punctuation">,</span> 1104px 827px #fff<span class="token punctuation">,</span> 984px 888px #fff<span class="token punctuation">,</span> 1027px 44px #fff<span class="token punctuation">,</span> 1462px 1105px #fff<span class="token punctuation">,</span> 902px 1486px #fff<span class="token punctuation">,</span> 769px 441px #fff<span class="token punctuation">,</span> 431px 1195px #fff<span class="token punctuation">,</span> 4px 764px #fff<span class="token punctuation">,</span> 562px 7px #fff<span class="token punctuation">,</span> 952px 1744px #fff<span class="token punctuation">,</span> 822px 971px #fff<span class="token punctuation">,</span> 1016px 1804px #fff<span class="token punctuation">,</span> 1429px 1161px #fff<span class="token punctuation">,</span> 328px 1568px #fff<span class="token punctuation">,</span> 101px 746px #fff<span class="token punctuation">,</span> 649px 1484px #fff<span class="token punctuation">,</span> 1903px 569px #fff<span class="token punctuation">,</span> 733px 871px #fff<span class="token punctuation">,</span> 1554px 505px #fff<span class="token punctuation">,</span> 1076px 642px #fff<span class="token punctuation">,</span> 609px 641px #fff<span class="token punctuation">,</span> 996px 149px #fff<span class="token punctuation">,</span> 1595px 758px #fff<span class="token punctuation">,</span> 14px 1083px #fff<span class="token punctuation">,</span> 261px 767px #fff<span class="token punctuation">,</span> 1274px 1517px #fff<span class="token punctuation">,</span> 1412px 215px #fff<span class="token punctuation">,</span> 1651px 879px #fff<span class="token punctuation">,</span> 284px 1633px #fff<span class="token punctuation">,</span> 1439px 287px #fff<span class="token punctuation">,</span> 1717px 270px #fff<span class="token punctuation">,</span> 1107px 1063px #fff<span class="token punctuation">,</span> 1521px 1831px #fff<span class="token punctuation">,</span> 656px 1702px #fff<span class="token punctuation">,</span> 25px 230px #fff<span class="token punctuation">,</span> 1958px 1615px #fff<span class="token punctuation">,</span> 646px 675px #fff<span class="token punctuation">,</span> 1201px 343px #fff<span class="token punctuation">,</span> 1918px 1064px #fff<span class="token punctuation">,</span> 1932px 609px #fff<span class="token punctuation">,</span> 1203px 900px #fff<span class="token punctuation">,</span> 10px 575px #fff<span class="token punctuation">,</span> 1582px 1828px #fff<span class="token punctuation">,</span> 1184px 462px #fff<span class="token punctuation">,</span> 1px 1619px #fff<span class="token punctuation">,</span> 1440px 1071px #fff<span class="token punctuation">,</span> 1844px 1913px #fff<span class="token punctuation">,</span> 376px 1054px #fff<span class="token punctuation">,</span> 1883px 1236px #fff<span class="token punctuation">,</span> 571px 493px #fff<span class="token punctuation">,</span> 354px 1701px #fff<span class="token punctuation">,</span> 747px 60px #fff<span class="token punctuation">,</span> 11px 1142px #fff<span class="token punctuation">,</span> 1136px 1891px #fff<span class="token punctuation">,</span> 1682px 473px #fff<span class="token punctuation">,</span> 1537px 1520px #fff<span class="token punctuation">,</span> 902px 836px #fff<span class="token punctuation">,</span> 1313px 395px #fff<span class="token punctuation">,</span> 534px 341px #fff<span class="token punctuation">,</span> 230px 1614px #fff<span class="token punctuation">,</span> 14px 1387px #fff<span class="token punctuation">,</span> 1296px 1765px #fff<span class="token punctuation">,</span> 1064px 1270px #fff<span class="token punctuation">,</span> 761px 975px #fff<span class="token punctuation">,</span> 1855px 335px #fff<span class="token punctuation">,</span> 198px 110px #fff<span class="token punctuation">,</span> 1660px 598px #fff<span class="token punctuation">,</span> 1022px 933px #fff<span class="token punctuation">,</span> 518px 356px #fff<span class="token punctuation">,</span> 19px 865px #fff<span class="token punctuation">,</span> 471px 830px #fff<span class="token punctuation">,</span> 758px 358px #fff<span class="token punctuation">,</span> 541px 1652px #fff<span class="token punctuation">,</span> 320px 926px #fff<span class="token punctuation">,</span> 425px 1826px #fff<span class="token punctuation">,</span> 659px 353px #fff<span class="token punctuation">,</span> 708px 778px #fff<span class="token punctuation">,</span> 862px 641px #fff<span class="token punctuation">,</span> 475px 1362px #fff<span class="token punctuation">,</span> 1326px 1449px #fff<span class="token punctuation">,</span> 446px 802px #fff<span class="token punctuation">,</span> 391px 1169px #fff<span class="token punctuation">,</span> 496px 39px #fff<span class="token punctuation">,</span> 1534px 934px #fff<span class="token punctuation">,</span> 1822px 1809px #fff<span class="token punctuation">,</span> 1454px 237px #fff<span class="token punctuation">,</span> 187px 1555px #fff<span class="token punctuation">,</span> 1069px 1977px #fff<span class="token punctuation">,</span> 1880px 1508px #fff<span class="token punctuation">,</span> 279px 418px #fff<span class="token punctuation">,</span> 1938px 1980px #fff<span class="token punctuation">,</span> 1304px 530px #fff<span class="token punctuation">,</span> 1763px 187px #fff<span class="token punctuation">,</span> 1945px 1642px #fff<span class="token punctuation">,</span> 311px 1490px #fff<span class="token punctuation">,</span> 770px 1598px #fff<span class="token punctuation">,</span> 263px 330px #fff<span class="token punctuation">,</span> 1733px 1771px #fff<span class="token punctuation">,</span> 978px 34px #fff<span class="token punctuation">,</span> 325px 1776px #fff<span class="token punctuation">,</span> 873px 1460px #fff<span class="token punctuation">,</span> 365px 33px #fff<span class="token punctuation">,</span> 913px 1999px #fff<span class="token punctuation">,</span> 667px 1021px #fff<span class="token punctuation">,</span> 27px 572px #fff<span class="token punctuation">,</span> 950px 1858px #fff<span class="token punctuation">,</span> 448px 1205px #fff<span class="token punctuation">,</span> 1302px 1138px #fff<span class="token punctuation">,</span> 1269px 932px #fff<span class="token punctuation">,</span> 480px 132px #fff<span class="token punctuation">,</span> 770px 1871px #fff<span class="token punctuation">,</span> 952px 654px #fff<span class="token punctuation">,</span> 623px 90px #fff<span class="token punctuation">,</span> 419px 1683px #fff<span class="token punctuation">,</span> 930px 794px #fff<span class="token punctuation">,</span> 1327px 1651px #fff<span class="token punctuation">,</span> 769px 1536px #fff<span class="token punctuation">,</span> 895px 90px #fff<span class="token punctuation">,</span> 599px 1268px #fff<span class="token punctuation">,</span> 1645px 919px #fff<span class="token punctuation">,</span> 1672px 1080px #fff<span class="token punctuation">,</span> 1637px 1259px #fff<span class="token punctuation">,</span> 243px 1182px #fff<span class="token punctuation">,</span> 1509px 457px #fff<span class="token punctuation">,</span> 1374px 1469px #fff<span class="token punctuation">,</span> 751px 137px #fff<span class="token punctuation">,</span> 1097px 1008px #fff<span class="token punctuation">,</span> 1979px 1381px #fff<span class="token punctuation">,</span> 981px 1825px #fff<span class="token punctuation">,</span> 928px 1930px #fff<span class="token punctuation">,</span> 632px 422px #fff<span class="token punctuation">,</span> 812px 341px #fff<span class="token punctuation">,</span> 1077px 1832px #fff<span class="token punctuation">,</span> 203px 1452px #fff<span class="token punctuation">,</span> 664px 1531px #fff<span class="token punctuation">,</span> 1203px 57px #fff<span class="token punctuation">,</span> 1654px 1203px #fff<span class="token punctuation">,</span> 491px 174px #fff<span class="token punctuation">,</span> 1507px 735px #fff<span class="token punctuation">,</span> 964px 896px #fff<span class="token punctuation">,</span> 52px 1718px #fff<span class="token punctuation">,</span> 1435px 26px #fff<span class="token punctuation">,</span> 753px 635px #fff<span class="token punctuation">,</span> 890px 1847px #fff<span class="token punctuation">,</span> 42px 1353px #fff<span class="token punctuation">,</span> 717px 72px #fff<span class="token punctuation">,</span> 1845px 1212px #fff<span class="token punctuation">,</span> 344px 867px #fff<span class="token punctuation">,</span> 418px 855px #fff<span class="token punctuation">,</span> 899px 1124px #fff<span class="token punctuation">,</span> 1798px 1582px #fff<span class="token punctuation">,</span> 1774px 760px #fff<span class="token punctuation">,</span> 908px 1567px #fff<span class="token punctuation">,</span> 1647px 1210px #fff<span class="token punctuation">,</span> 299px 82px #fff<span class="token punctuation">,</span> 1179px 1317px #fff<span class="token punctuation">,</span> 938px 1580px #fff<span class="token punctuation">,</span> 82px 921px #fff<span class="token punctuation">,</span> 657px 1596px #fff<span class="token punctuation">,</span> 892px 1264px #fff<span class="token punctuation">,</span> 1161px 819px #fff<span class="token punctuation">,</span> 607px 1447px #fff<span class="token punctuation">,</span> 605px 679px #fff<span class="token punctuation">,</span> 1642px 595px #fff<span class="token punctuation">,</span> 1963px 525px #fff<span class="token punctuation">,</span> 1656px 1591px #fff<span class="token punctuation">,</span> 1467px 1743px #fff<span class="token punctuation">,</span> 167px 1420px #fff<span class="token punctuation">,</span> 471px 492px #fff<span class="token punctuation">,</span> 1077px 932px #fff<span class="token punctuation">,</span> 774px 1282px #fff<span class="token punctuation">,</span> 799px 701px #fff<span class="token punctuation">,</span> 400px 258px #fff<span class="token punctuation">,</span> 235px 1937px #fff<span class="token punctuation">,</span> 894px 562px #fff<span class="token punctuation">,</span> 1277px 907px #fff<span class="token punctuation">,</span> 435px 1360px #fff<span class="token punctuation">,</span> 507px 1253px #fff<span class="token punctuation">,</span> 1022px 833px #fff<span class="token punctuation">,</span> 351px 773px #fff<span class="token punctuation">,</span> 1126px 1969px #fff<span class="token punctuation">,</span> 1382px 1620px #fff<span class="token punctuation">,</span> 411px 59px #fff<span class="token punctuation">,</span> 187px 906px #fff<span class="token punctuation">,</span> 644px 1364px #fff<span class="token punctuation">,</span> 1721px 1451px #fff<span class="token punctuation">,</span> 1879px 1390px #fff<span class="token punctuation">,</span> 1396px 318px #fff<span class="token punctuation">,</span> 1002px 891px #fff<span class="token punctuation">,</span> 1930px 1454px #fff<span class="token punctuation">,</span> 1952px 496px #fff<span class="token punctuation">,</span> 1308px 1325px #fff<span class="token punctuation">,</span> 343px 475px #fff<span class="token punctuation">,</span> 285px 373px #fff<span class="token punctuation">,</span> 1329px 1591px #fff<span class="token punctuation">,</span> 901px 1875px #fff<span class="token punctuation">,</span> 966px 254px #fff<span class="token punctuation">,</span> 1624px 1577px #fff<span class="token punctuation">,</span> 371px 589px #fff<span class="token punctuation">,</span> 1918px 1494px #fff<span class="token punctuation">,</span> 841px 589px #fff<span class="token punctuation">,</span> 873px 1657px #fff<span class="token punctuation">,</span> 970px 1697px #fff<span class="token punctuation">,</span> 1354px 975px #fff<span class="token punctuation">,</span> 807px 1099px #fff<span class="token punctuation">,</span> 384px 1608px #fff<span class="token punctuation">,</span> 1600px 1739px #fff<span class="token punctuation">,</span> 110px 1310px #fff<span class="token punctuation">,</span> 687px 1611px #fff<span class="token punctuation">,</span> 324px 394px #fff<span class="token punctuation">,</span> 1267px 224px #fff<span class="token punctuation">,</span> 1122px 1919px #fff<span class="token punctuation">,</span> 1753px 578px #fff<span class="token punctuation">,</span> 611px 479px #fff<span class="token punctuation">,</span> 1494px 475px #fff<span class="token punctuation">,</span> 1595px 368px #fff<span class="token punctuation">,</span> 304px 1379px #fff<span class="token punctuation">,</span> 1663px 87px #fff<span class="token punctuation">,</span> 1789px 1471px #fff<span class="token punctuation">,</span> 941px 1861px #fff<span class="token punctuation">,</span> 287px 657px #fff<span class="token punctuation">,</span> 1882px 217px #fff<span class="token punctuation">,</span> 1766px 1960px #fff<span class="token punctuation">,</span> 144px 966px #fff<span class="token punctuation">,</span> 872px 943px #fff<span class="token punctuation">,</span> 1705px 1909px #fff<span class="token punctuation">,</span> 1318px 1173px #fff<span class="token punctuation">,</span> 1856px 1549px #fff<span class="token punctuation">,</span> 1722px 1482px #fff<span class="token punctuation">,</span> 196px 594px #fff<span class="token punctuation">,</span> 355px 1182px #fff<span class="token punctuation">,</span> 1242px 112px #fff<span class="token punctuation">,</span> 226px 344px #fff<span class="token punctuation">,</span> 674px 895px #fff<span class="token punctuation">,</span> 210px 2px #fff<span class="token punctuation">,</span> 1224px 488px #fff<span class="token punctuation">,</span> 220px 617px #fff<span class="token punctuation">,</span> 1857px 1348px #fff<span class="token punctuation">,</span> 426px 1026px #fff<span class="token punctuation">,</span> 1370px 720px #fff<span class="token punctuation">,</span> 109px 440px #fff<span class="token punctuation">,</span> 1940px 1575px #fff<span class="token punctuation">,</span> 978px 1443px #fff<span class="token punctuation">,</span> 308px 614px #fff<span class="token punctuation">,</span> 1392px 1351px #fff<span class="token punctuation">,</span> 635px 1231px #fff<span class="token punctuation">,</span> 1132px 616px #fff<span class="token punctuation">,</span> 756px 342px #fff<span class="token punctuation">,</span> 1968px 765px #fff<span class="token punctuation">,</span> 1020px 1877px #fff<span class="token punctuation">,</span> 1998px 1325px #fff<span class="token punctuation">,</span> 1296px 1303px #fff<span class="token punctuation">,</span> 1817px 223px #fff<span class="token punctuation">,</span> 1184px 907px #fff<span class="token punctuation">,</span> 546px 845px #fff<span class="token punctuation">,</span> 51px 705px #fff<span class="token punctuation">,</span> 1421px 735px #fff<span class="token punctuation">,</span> 1255px 700px #fff<span class="token punctuation">,</span> 249px 1908px #fff<span class="token punctuation">,</span> 1701px 351px #fff<span class="token punctuation">,</span> 173px 1658px #fff<span class="token punctuation">,</span> 1088px 1476px #fff<span class="token punctuation">,</span> 1930px 1787px #fff<span class="token punctuation">,</span> 689px 1312px #fff<span class="token punctuation">,</span> 615px 1006px #fff<span class="token punctuation">,</span> 1870px 1229px #fff<span class="token punctuation">,</span> 1900px 546px #fff<span class="token punctuation">,</span> 1416px 141px #fff<span class="token punctuation">,</span> 1983px 945px #fff<span class="token punctuation">,</span> 1104px 1351px #fff<span class="token punctuation">,</span> 426px 701px #fff<span class="token punctuation">,</span> 431px 1597px #fff<span class="token punctuation">,</span> 893px 456px #fff<span class="token punctuation">,</span> 1976px 1914px #fff<span class="token punctuation">,</span> 1538px 673px #fff<span class="token punctuation">,</span> 916px 1386px #fff<span class="token punctuation">,</span> 304px 138px #fff<span class="token punctuation">,</span> 1038px 681px #fff<span class="token punctuation">,</span> 1349px 1740px #fff<span class="token punctuation">,</span> 1231px 552px #fff<span class="token punctuation">,</span> 35px 1435px #fff<span class="token punctuation">,</span> 588px 652px #fff<span class="token punctuation">,</span> 793px 575px #fff<span class="token punctuation">,</span> 542px 926px #fff<span class="token punctuation">,</span> 1252px 25px #fff<span class="token punctuation">,</span> 831px 332px #fff<span class="token punctuation">,</span> 718px 283px #fff<span class="token punctuation">,</span> 1327px 1952px #fff<span class="token punctuation">,</span> 1019px 704px #fff<span class="token punctuation">,</span> 888px 1117px #fff<span class="token punctuation">,</span> 1107px 1378px #fff<span class="token punctuation">,</span> 532px 505px #fff<span class="token punctuation">,</span> 1070px 552px #fff<span class="token punctuation">,</span> 346px 645px #fff<span class="token punctuation">,</span> 63px 1783px #fff<span class="token punctuation">,</span> 775px 879px #fff<span class="token punctuation">,</span> 165px 160px #fff<span class="token punctuation">,</span> 788px 1225px #fff<span class="token punctuation">,</span> 1562px 1520px #fff<span class="token punctuation">,</span> 56px 1522px #fff<span class="token punctuation">,</span> 439px 498px #fff<span class="token punctuation">,</span> 1988px 1521px #fff<span class="token punctuation">,</span> 254px 1363px #fff<span class="token punctuation">,</span> 1162px 816px #fff<span class="token punctuation">,</span> 219px 386px #fff<span class="token punctuation">,</span> 1789px 1315px #fff<span class="token punctuation">,</span> 1090px 1415px #fff<span class="token punctuation">,</span> 1361px 315px #fff<span class="token punctuation">,</span> 825px 1306px #fff<span class="token punctuation">,</span> 92px 548px #fff<span class="token punctuation">,</span> 1501px 1946px #fff<span class="token punctuation">,</span> 350px 1735px #fff<span class="token punctuation">,</span> 459px 1533px #fff<span class="token punctuation">,</span> 1417px 931px #fff<span class="token punctuation">,</span> 1849px 174px #fff<span class="token punctuation">,</span> 220px 1084px #fff<span class="token punctuation">,</span> 1357px 209px #fff<span class="token punctuation">,</span> 1974px 358px #fff<span class="token punctuation">,</span> 90px 808px #fff<span class="token punctuation">,</span> 1247px 765px #fff<span class="token punctuation">,</span> 1878px 725px #fff<span class="token punctuation">,</span> 1415px 87px #fff<span class="token punctuation">,</span> 1253px 943px #fff<span class="token punctuation">,</span> 1455px 1919px #fff<span class="token punctuation">,</span> 1321px 337px #fff<span class="token punctuation">,</span> 1210px 1600px #fff<span class="token punctuation">,</span> 1855px 1575px #fff<span class="token punctuation">,</span> 325px 936px #fff<span class="token punctuation">,</span> 1118px 892px #fff<span class="token punctuation">,</span> 703px 294px #fff<span class="token punctuation">,</span> 89px 891px #fff<span class="token punctuation">,</span> 239px 1548px #fff<span class="token punctuation">,</span> 280px 262px #fff<span class="token punctuation">,</span> 1401px 555px #fff<span class="token punctuation">,</span> 1092px 1638px #fff<span class="token punctuation">,</span> 673px 1207px #fff<span class="token punctuation">,</span> 1469px 1358px #fff<span class="token punctuation">,</span> 1253px 1986px #fff<span class="token punctuation">,</span> 1249px 1040px #fff<span class="token punctuation">,</span> 253px 484px #fff<span class="token punctuation">,</span> 1163px 775px #fff<span class="token punctuation">,</span> 426px 162px #fff<span class="token punctuation">,</span> 721px 1761px #fff<span class="token punctuation">,</span> 369px 510px #fff<span class="token punctuation">,</span> 702px 1599px #fff<span class="token punctuation">,</span> 1883px 483px #fff<span class="token punctuation">,</span> 680px 1604px #fff<span class="token punctuation">,</span> 870px 1599px #fff<span class="token punctuation">,</span> 976px 1808px #fff<span class="token punctuation">,</span> 916px 477px #fff<span class="token punctuation">,</span> 1223px 1636px #fff<span class="token punctuation">,</span> 506px 993px #fff<span class="token punctuation">,</span> 898px 1284px #fff<span class="token punctuation">,</span> 1013px 290px #fff<span class="token punctuation">,</span> 1189px 78px #fff<span class="token punctuation">,</span> 25px 588px #fff<span class="token punctuation">,</span> 960px 861px #fff<span class="token punctuation">,</span> 28px 526px #fff<span class="token punctuation">,</span> 959px 681px #fff<span class="token punctuation">,</span> 1426px 1329px #fff<span class="token punctuation">,</span> 294px 557px #fff<span class="token punctuation">,</span> 1907px 1320px #fff<span class="token punctuation">,</span> 1289px 1627px #fff<span class="token punctuation">,</span> 124px 451px #fff<span class="token punctuation">,</span> 967px 653px #fff<span class="token punctuation">,</span> 892px 1460px #fff<span class="token punctuation">,</span> 537px 1385px #fff<span class="token punctuation">,</span> 197px 1954px #fff<span class="token punctuation">,</span> 1543px 302px #fff<span class="token punctuation">,</span> 747px 1953px #fff<span class="token punctuation">,</span> 995px 1630px #fff<span class="token punctuation">,</span> 1423px 1221px #fff<span class="token punctuation">,</span> 1075px 983px #fff<span class="token punctuation">,</span> 1556px 1739px #fff<span class="token punctuation">,</span> 1068px 1425px #fff<span class="token punctuation">,</span> 81px 550px #fff<span class="token punctuation">,</span> 1668px 523px #fff<span class="token punctuation">,</span> 1158px 438px #fff<span class="token punctuation">,</span> 401px 1795px #fff<span class="token punctuation">,</span> 537px 1072px #fff<span class="token punctuation">,</span> 1px 326px #fff<span class="token punctuation">,</span> 249px 118px #fff<span class="token punctuation">,</span> 832px 1544px #fff<span class="token punctuation">,</span> 240px 153px #fff<span class="token punctuation">,</span> 651px 1077px #fff<span class="token punctuation">,</span> 1656px 542px #fff<span class="token punctuation">,</span> 1102px 606px #fff<span class="token punctuation">,</span> 1583px 788px #fff<span class="token punctuation">,</span> 1205px 1842px #fff<span class="token punctuation">,</span> 1657px 1793px #fff<span class="token punctuation">,</span> 1848px 1464px #fff<span class="token punctuation">,</span> 1285px 1395px #fff<span class="token punctuation">,</span> 662px 1227px #fff<span class="token punctuation">,</span> 1790px 134px #fff<span class="token punctuation">,</span> 577px 263px #fff<span class="token punctuation">,</span> 383px 702px #fff<span class="token punctuation">,</span> 1728px 1953px #fff<span class="token punctuation">,</span> 417px 57px #fff<span class="token punctuation">,</span> 1390px 574px #fff<span class="token punctuation">,</span> 1024px 287px #fff<span class="token punctuation">,</span> 1969px 753px #fff<span class="token punctuation">,</span> 1239px 1036px #fff<span class="token punctuation">,</span> 1063px 1313px #fff<span class="token punctuation">,</span> 1784px 1519px #fff<span class="token punctuation">,</span> 1665px 682px #fff<span class="token punctuation">,</span> 806px 1437px #fff<span class="token punctuation">,</span> 394px 917px #fff<span class="token punctuation">,</span> 904px 666px #fff<span class="token punctuation">,</span> 801px 1280px #fff<span class="token punctuation">,</span> 1392px 1930px #fff<span class="token punctuation">,</span> 1611px 1386px #fff<span class="token punctuation">,</span> 1809px 1507px #fff<span class="token punctuation">,</span> 1720px 1300px #fff<span class="token punctuation">,</span> 1721px 1287px #fff<span class="token punctuation">,</span> 969px 240px #fff<span class="token punctuation">,</span> 3px 1070px #fff<span class="token punctuation">,</span> 1198px 538px #fff<span class="token punctuation">,</span> 1416px 1001px #fff<span class="token punctuation">,</span> 1665px 1265px #fff<span class="token punctuation">,</span> 1010px 1275px #fff<span class="token punctuation">,</span> 772px 978px #fff<span class="token punctuation">,</span> 1980px 980px #fff<span class="token punctuation">,</span> 1283px 1573px #fff<span class="token punctuation">,</span> 444px 516px #fff<span class="token punctuation">,</span> 875px 737px #fff<span class="token punctuation">,</span> 258px 716px #fff<span class="token punctuation">,</span> 1698px 758px #fff<span class="token punctuation">,</span> 644px 238px #fff<span class="token punctuation">,</span> 19px 876px #fff<span class="token punctuation">,</span> 355px 1327px #fff<span class="token punctuation">,</span> 1602px 1846px #fff<span class="token punctuation">,</span> 548px 534px #fff<span class="token punctuation">,</span> 1498px 1473px #fff<span class="token punctuation">,</span> 1389px 1136px #fff<span class="token punctuation">,</span> 174px 771px #fff<span class="token punctuation">,</span> 955px 1931px #fff<span class="token punctuation">,</span> 403px 371px #fff<span class="token punctuation">,</span> 1502px 794px #fff<span class="token punctuation">,</span> 117px 876px #fff<span class="token punctuation">,</span> 536px 778px #fff<span class="token punctuation">,</span> 67px 393px #fff<span class="token punctuation">,</span> 119px 1918px #fff<span class="token punctuation">,</span> 1912px 1663px #fff<span class="token punctuation">,</span> 1141px 245px #fff<span class="token punctuation">,</span> 1105px 130px #fff<span class="token punctuation">,</span> 1218px 1608px #fff<span class="token punctuation">,</span> 662px 1502px #fff<span class="token punctuation">,</span> 1907px 927px #fff<span class="token punctuation">,</span> 521px 109px #fff<span class="token punctuation">,</span> 1885px 362px #fff<span class="token punctuation">,</span> 1785px 1935px #fff<span class="token punctuation">,</span> 781px 427px #fff<span class="token punctuation">,</span> 1446px 1991px #fff<span class="token punctuation">,</span> 164px 1539px #fff<span class="token punctuation">,</span> 1807px 1795px #fff<span class="token punctuation">,</span> 1922px 890px #fff<span class="token punctuation">,</span> 1245px 933px #fff<span class="token punctuation">,</span> 446px 450px #fff<span class="token punctuation">,</span> 1743px 79px #fff<span class="token punctuation">,</span> 1959px 310px #fff<span class="token punctuation">,</span> 1348px 749px #fff<span class="token punctuation">,</span> 1954px 128px #fff<span class="token punctuation">,</span> 1980px 1030px #fff<span class="token punctuation">,</span> 1850px 302px #fff<span class="token punctuation">,</span> 1074px 922px #fff<span class="token punctuation">,</span> 174px 403px #fff<span class="token punctuation">,</span> 1579px 733px #fff<span class="token punctuation">,</span> 653px 1958px #fff<span class="token punctuation">,</span> 1511px 1943px #fff<span class="token punctuation">,</span> 1037px 741px #fff<span class="token punctuation">,</span> 602px 1384px #fff<span class="token punctuation">,</span> 103px 402px #fff<span class="token punctuation">,</span> 1722px 1417px #fff<span class="token punctuation">,</span> 1732px 1916px #fff<span class="token punctuation">,</span> 1743px 1803px #fff<span class="token punctuation">,</span> 381px 721px #fff<span class="token punctuation">,</span> 964px 1700px #fff<span class="token punctuation">,</span> 1070px 341px #fff<span class="token punctuation">,</span> 1376px 1258px #fff<span class="token punctuation">,</span> 1884px 570px #fff<span class="token punctuation">,</span> 940px 280px #fff<span class="token punctuation">,</span> 1484px 1658px #fff<span class="token punctuation">,</span> 1806px 1875px #fff<span class="token punctuation">,</span> 1054px 917px #fff<span class="token punctuation">,</span> 1672px 103px #fff<span class="token punctuation">,</span> 783px 574px #fff<span class="token punctuation">,</span> 98px 347px #fff<span class="token punctuation">,</span> 555px 1136px #fff<span class="token punctuation">,</span> 1403px 1237px #fff<span class="token punctuation">,</span> 1203px 339px #fff<span class="token punctuation">,</span> 572px 35px #fff<span class="token punctuation">,</span> 932px 1783px #fff<span class="token punctuation">,</span> 1527px 1850px #fff<span class="token punctuation">,</span> 1959px 1109px #fff<span class="token punctuation">,</span> 892px 623px #fff<span class="token punctuation">,</span> 211px 1388px #fff<span class="token punctuation">,</span> 1581px 1806px #fff<span class="token punctuation">,</span> 868px 1053px #fff<span class="token punctuation">,</span> 1243px 1997px #fff<span class="token punctuation">,</span> 1004px 522px #fff<span class="token punctuation">,</span> 1241px 1707px #fff<span class="token punctuation">,</span> 376px 282px #fff<span class="token punctuation">,</span> 537px 878px #fff<span class="token punctuation">,</span> 1948px 979px #fff<span class="token punctuation">,</span> 532px 688px #fff<span class="token punctuation">,</span> 273px 958px #fff<span class="token punctuation">,</span> 581px 927px #fff<span class="token punctuation">,</span> 1060px 887px #fff<span class="token punctuation">,</span> 486px 1467px #fff<span class="token punctuation">,</span> 1122px 1834px #fff<span class="token punctuation">,</span> 1650px 1763px #fff<span class="token punctuation">,</span> 532px 302px #fff<span class="token punctuation">,</span> 314px 1111px #fff<span class="token punctuation">,</span> 1888px 683px #fff<span class="token punctuation">,</span> 1856px 1040px #fff<span class="token punctuation">,</span> 1780px 1338px #fff<span class="token punctuation">,</span> 24px 1564px #fff<span class="token punctuation">,</span> 1096px 1808px #fff<span class="token punctuation">,</span> 1202px 1968px #fff<span class="token punctuation">,</span> 214px 992px #fff<span class="token punctuation">,</span> 728px 515px #fff<span class="token punctuation">,</span> 247px 278px #fff<span class="token punctuation">,</span> 1670px 45px #fff<span class="token punctuation">,</span> 442px 1579px #fff<span class="token punctuation">,</span> 1143px 30px #fff<span class="token punctuation">,</span> 612px 72px #fff<span class="token punctuation">,</span> 1177px 1303px #fff<span class="token punctuation">,</span> 1898px 1255px #fff<span class="token punctuation">,</span> 378px 1667px #fff<span class="token punctuation">,</span> 326px 1929px #fff<span class="token punctuation">,</span> 1257px 766px #fff<span class="token punctuation">,</span> 1363px 1170px #fff<span class="token punctuation">,</span> 1090px 1667px #fff<span class="token punctuation">,</span> 711px 293px #fff<span class="token punctuation">,</span> 249px 1406px #fff<span class="token punctuation">,</span> 1589px 565px #fff<span class="token punctuation">,</span> 1451px 29px #fff<span class="token punctuation">,</span> 1171px 1459px #fff<span class="token punctuation">,</span> 1294px 1214px #fff<span class="token punctuation">,</span> 342px 942px #fff<span class="token punctuation">,</span> 1945px 353px #fff<span class="token punctuation">,</span> 741px 1185px #fff<span class="token punctuation">,</span> 894px 1453px #fff<span class="token punctuation">,</span> 593px 1584px #fff<span class="token punctuation">,</span> 518px 630px #fff<span class="token punctuation">,</span> 393px 756px #fff<span class="token punctuation">,</span> 34px 608px #fff<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> animStar 50s linear infinite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode #stars:after</span> <span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 2000px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 1804px 1265px #fff<span class="token punctuation">,</span> 365px 332px #fff<span class="token punctuation">,</span> 86px 1888px #fff<span class="token punctuation">,</span> 1888px 484px #fff<span class="token punctuation">,</span> 199px 1489px #fff<span class="token punctuation">,</span> 1459px 1010px #fff<span class="token punctuation">,</span> 807px 388px #fff<span class="token punctuation">,</span> 855px 558px #fff<span class="token punctuation">,</span> 83px 1095px #fff<span class="token punctuation">,</span> 1418px 377px #fff<span class="token punctuation">,</span> 677px 886px #fff<span class="token punctuation">,</span> 862px 1709px #fff<span class="token punctuation">,</span> 1058px 1085px #fff<span class="token punctuation">,</span> 50px 1772px #fff<span class="token punctuation">,</span> 1941px 1544px #fff<span class="token punctuation">,</span> 377px 900px #fff<span class="token punctuation">,</span> 184px 712px #fff<span class="token punctuation">,</span> 1797px 1928px #fff<span class="token punctuation">,</span> 507px 1861px #fff<span class="token punctuation">,</span> 1849px 19px #fff<span class="token punctuation">,</span> 1399px 200px #fff<span class="token punctuation">,</span> 972px 497px #fff<span class="token punctuation">,</span> 795px 1109px #fff<span class="token punctuation">,</span> 746px 970px #fff<span class="token punctuation">,</span> 1524px 972px #fff<span class="token punctuation">,</span> 1631px 389px #fff<span class="token punctuation">,</span> 1026px 1016px #fff<span class="token punctuation">,</span> 1295px 862px #fff<span class="token punctuation">,</span> 1258px 1876px #fff<span class="token punctuation">,</span> 791px 189px #fff<span class="token punctuation">,</span> 1519px 45px #fff<span class="token punctuation">,</span> 592px 1405px #fff<span class="token punctuation">,</span> 620px 130px #fff<span class="token punctuation">,</span> 1044px 1171px #fff<span class="token punctuation">,</span> 37px 1578px #fff<span class="token punctuation">,</span> 1589px 86px #fff<span class="token punctuation">,</span> 1024px 528px #fff<span class="token punctuation">,</span> 1613px 568px #fff<span class="token punctuation">,</span> 912px 1175px #fff<span class="token punctuation">,</span> 1177px 133px #fff<span class="token punctuation">,</span> 67px 1641px #fff<span class="token punctuation">,</span> 1168px 357px #fff<span class="token punctuation">,</span> 310px 1873px #fff<span class="token punctuation">,</span> 1187px 573px #fff<span class="token punctuation">,</span> 308px 1839px #fff<span class="token punctuation">,</span> 565px 24px #fff<span class="token punctuation">,</span> 1691px 1555px #fff<span class="token punctuation">,</span> 1384px 1551px #fff<span class="token punctuation">,</span> 179px 861px #fff<span class="token punctuation">,</span> 1850px 1966px #fff<span class="token punctuation">,</span> 1169px 1979px #fff<span class="token punctuation">,</span> 1182px 1522px #fff<span class="token punctuation">,</span> 616px 751px #fff<span class="token punctuation">,</span> 1083px 908px #fff<span class="token punctuation">,</span> 684px 766px #fff<span class="token punctuation">,</span> 67px 955px #fff<span class="token punctuation">,</span> 1813px 1714px #fff<span class="token punctuation">,</span> 1256px 1413px #fff<span class="token punctuation">,</span> 332px 803px #fff<span class="token punctuation">,</span> 1670px 1921px #fff<span class="token punctuation">,</span> 362px 211px #fff<span class="token punctuation">,</span> 1513px 423px #fff<span class="token punctuation">,</span> 1304px 1145px #fff<span class="token punctuation">,</span> 1292px 1168px #fff<span class="token punctuation">,</span> 611px 802px #fff<span class="token punctuation">,</span> 1297px 575px #fff<span class="token punctuation">,</span> 540px 1289px #fff<span class="token punctuation">,</span> 1551px 1678px #fff<span class="token punctuation">,</span> 1545px 237px #fff<span class="token punctuation">,</span> 423px 138px #fff<span class="token punctuation">,</span> 1088px 28px #fff<span class="token punctuation">,</span> 642px 1637px #fff<span class="token punctuation">,</span> 429px 1293px #fff<span class="token punctuation">,</span> 1276px 1900px #fff<span class="token punctuation">,</span> 1168px 1696px #fff<span class="token punctuation">,</span> 847px 837px #fff<span class="token punctuation">,</span> 151px 1395px #fff<span class="token punctuation">,</span> 1490px 75px #fff<span class="token punctuation">,</span> 1588px 131px #fff<span class="token punctuation">,</span> 1739px 1358px #fff<span class="token punctuation">,</span> 709px 624px #fff<span class="token punctuation">,</span> 343px 502px #fff<span class="token punctuation">,</span> 1342px 1690px #fff<span class="token punctuation">,</span> 175px 1722px #fff<span class="token punctuation">,</span> 964px 1299px #fff<span class="token punctuation">,</span> 892px 1326px #fff<span class="token punctuation">,</span> 519px 1142px #fff<span class="token punctuation">,</span> 1014px 193px #fff<span class="token punctuation">,</span> 1181px 360px #fff<span class="token punctuation">,</span> 325px 139px #fff<span class="token punctuation">,</span> 482px 1199px #fff<span class="token punctuation">,</span> 613px 8px #fff<span class="token punctuation">,</span> 1976px 1125px #fff<span class="token punctuation">,</span> 346px 60px #fff<span class="token punctuation">,</span> 1565px 818px #fff<span class="token punctuation">,</span> 268px 1590px #fff<span class="token punctuation">,</span> 213px 1666px #fff<span class="token punctuation">,</span> 800px 464px #fff<span class="token punctuation">,</span> 974px 1825px #fff<span class="token punctuation">,</span> 1066px 23px #fff<span class="token punctuation">,</span> 1995px 1499px #fff<span class="token punctuation">,</span> 666px 1130px #fff<span class="token punctuation">,</span> 1074px 1710px #fff<span class="token punctuation">,</span> 1636px 1483px #fff<span class="token punctuation">,</span> 1379px 1509px #fff<span class="token punctuation">,</span> 1221px 887px #fff<span class="token punctuation">,</span> 1857px 964px #fff<span class="token punctuation">,</span> 1046px 993px #fff<span class="token punctuation">,</span> 1875px 643px #fff<span class="token punctuation">,</span> 1504px 1607px #fff<span class="token punctuation">,</span> 1065px 641px #fff<span class="token punctuation">,</span> 1095px 752px #fff<span class="token punctuation">,</span> 566px 1737px #fff<span class="token punctuation">,</span> 1972px 1778px #fff<span class="token punctuation">,</span> 146px 1517px #fff<span class="token punctuation">,</span> 1923px 588px #fff<span class="token punctuation">,</span> 557px 881px #fff<span class="token punctuation">,</span> 1885px 1950px #fff<span class="token punctuation">,</span> 1739px 1598px #fff<span class="token punctuation">,</span> 1048px 501px #fff<span class="token punctuation">,</span> 1316px 705px #fff<span class="token punctuation">,</span> 1900px 1697px #fff<span class="token punctuation">,</span> 1187px 917px #fff<span class="token punctuation">,</span> 1688px 1025px #fff<span class="token punctuation">,</span> 648px 1634px #fff<span class="token punctuation">,</span> 1002px 572px #fff<span class="token punctuation">,</span> 603px 1995px #fff<span class="token punctuation">,</span> 215px 693px #fff<span class="token punctuation">,</span> 688px 1374px #fff<span class="token punctuation">,</span> 1389px 1166px #fff<span class="token punctuation">,</span> 1310px 1140px #fff<span class="token punctuation">,</span> 245px 587px #fff<span class="token punctuation">,</span> 845px 63px #fff<span class="token punctuation">,</span> 296px 1646px #fff<span class="token punctuation">,</span> 792px 350px #fff<span class="token punctuation">,</span> 756px 1493px #fff<span class="token punctuation">,</span> 1553px 1079px #fff<span class="token punctuation">,</span> 850px 66px #fff<span class="token punctuation">,</span> 963px 1904px #fff<span class="token punctuation">,</span> 81px 207px #fff<span class="token punctuation">,</span> 1776px 1634px #fff<span class="token punctuation">,</span> 1759px 521px #fff<span class="token punctuation">,</span> 1761px 1536px #fff<span class="token punctuation">,</span> 601px 1485px #fff<span class="token punctuation">,</span> 898px 153px #fff<span class="token punctuation">,</span> 48px 648px #fff<span class="token punctuation">,</span> 1644px 1109px #fff<span class="token punctuation">,</span> 1974px 60px #fff<span class="token punctuation">,</span> 1278px 653px #fff<span class="token punctuation">,</span> 616px 432px #fff<span class="token punctuation">,</span> 1179px 1849px #fff<span class="token punctuation">,</span> 739px 677px #fff<span class="token punctuation">,</span> 808px 1850px #fff<span class="token punctuation">,</span> 1104px 827px #fff<span class="token punctuation">,</span> 984px 888px #fff<span class="token punctuation">,</span> 1027px 44px #fff<span class="token punctuation">,</span> 1462px 1105px #fff<span class="token punctuation">,</span> 902px 1486px #fff<span class="token punctuation">,</span> 769px 441px #fff<span class="token punctuation">,</span> 431px 1195px #fff<span class="token punctuation">,</span> 4px 764px #fff<span class="token punctuation">,</span> 562px 7px #fff<span class="token punctuation">,</span> 952px 1744px #fff<span class="token punctuation">,</span> 822px 971px #fff<span class="token punctuation">,</span> 1016px 1804px #fff<span class="token punctuation">,</span> 1429px 1161px #fff<span class="token punctuation">,</span> 328px 1568px #fff<span class="token punctuation">,</span> 101px 746px #fff<span class="token punctuation">,</span> 649px 1484px #fff<span class="token punctuation">,</span> 1903px 569px #fff<span class="token punctuation">,</span> 733px 871px #fff<span class="token punctuation">,</span> 1554px 505px #fff<span class="token punctuation">,</span> 1076px 642px #fff<span class="token punctuation">,</span> 609px 641px #fff<span class="token punctuation">,</span> 996px 149px #fff<span class="token punctuation">,</span> 1595px 758px #fff<span class="token punctuation">,</span> 14px 1083px #fff<span class="token punctuation">,</span> 261px 767px #fff<span class="token punctuation">,</span> 1274px 1517px #fff<span class="token punctuation">,</span> 1412px 215px #fff<span class="token punctuation">,</span> 1651px 879px #fff<span class="token punctuation">,</span> 284px 1633px #fff<span class="token punctuation">,</span> 1439px 287px #fff<span class="token punctuation">,</span> 1717px 270px #fff<span class="token punctuation">,</span> 1107px 1063px #fff<span class="token punctuation">,</span> 1521px 1831px #fff<span class="token punctuation">,</span> 656px 1702px #fff<span class="token punctuation">,</span> 25px 230px #fff<span class="token punctuation">,</span> 1958px 1615px #fff<span class="token punctuation">,</span> 646px 675px #fff<span class="token punctuation">,</span> 1201px 343px #fff<span class="token punctuation">,</span> 1918px 1064px #fff<span class="token punctuation">,</span> 1932px 609px #fff<span class="token punctuation">,</span> 1203px 900px #fff<span class="token punctuation">,</span> 10px 575px #fff<span class="token punctuation">,</span> 1582px 1828px #fff<span class="token punctuation">,</span> 1184px 462px #fff<span class="token punctuation">,</span> 1px 1619px #fff<span class="token punctuation">,</span> 1440px 1071px #fff<span class="token punctuation">,</span> 1844px 1913px #fff<span class="token punctuation">,</span> 376px 1054px #fff<span class="token punctuation">,</span> 1883px 1236px #fff<span class="token punctuation">,</span> 571px 493px #fff<span class="token punctuation">,</span> 354px 1701px #fff<span class="token punctuation">,</span> 747px 60px #fff<span class="token punctuation">,</span> 11px 1142px #fff<span class="token punctuation">,</span> 1136px 1891px #fff<span class="token punctuation">,</span> 1682px 473px #fff<span class="token punctuation">,</span> 1537px 1520px #fff<span class="token punctuation">,</span> 902px 836px #fff<span class="token punctuation">,</span> 1313px 395px #fff<span class="token punctuation">,</span> 534px 341px #fff<span class="token punctuation">,</span> 230px 1614px #fff<span class="token punctuation">,</span> 14px 1387px #fff<span class="token punctuation">,</span> 1296px 1765px #fff<span class="token punctuation">,</span> 1064px 1270px #fff<span class="token punctuation">,</span> 761px 975px #fff<span class="token punctuation">,</span> 1855px 335px #fff<span class="token punctuation">,</span> 198px 110px #fff<span class="token punctuation">,</span> 1660px 598px #fff<span class="token punctuation">,</span> 1022px 933px #fff<span class="token punctuation">,</span> 518px 356px #fff<span class="token punctuation">,</span> 19px 865px #fff<span class="token punctuation">,</span> 471px 830px #fff<span class="token punctuation">,</span> 758px 358px #fff<span class="token punctuation">,</span> 541px 1652px #fff<span class="token punctuation">,</span> 320px 926px #fff<span class="token punctuation">,</span> 425px 1826px #fff<span class="token punctuation">,</span> 659px 353px #fff<span class="token punctuation">,</span> 708px 778px #fff<span class="token punctuation">,</span> 862px 641px #fff<span class="token punctuation">,</span> 475px 1362px #fff<span class="token punctuation">,</span> 1326px 1449px #fff<span class="token punctuation">,</span> 446px 802px #fff<span class="token punctuation">,</span> 391px 1169px #fff<span class="token punctuation">,</span> 496px 39px #fff<span class="token punctuation">,</span> 1534px 934px #fff<span class="token punctuation">,</span> 1822px 1809px #fff<span class="token punctuation">,</span> 1454px 237px #fff<span class="token punctuation">,</span> 187px 1555px #fff<span class="token punctuation">,</span> 1069px 1977px #fff<span class="token punctuation">,</span> 1880px 1508px #fff<span class="token punctuation">,</span> 279px 418px #fff<span class="token punctuation">,</span> 1938px 1980px #fff<span class="token punctuation">,</span> 1304px 530px #fff<span class="token punctuation">,</span> 1763px 187px #fff<span class="token punctuation">,</span> 1945px 1642px #fff<span class="token punctuation">,</span> 311px 1490px #fff<span class="token punctuation">,</span> 770px 1598px #fff<span class="token punctuation">,</span> 263px 330px #fff<span class="token punctuation">,</span> 1733px 1771px #fff<span class="token punctuation">,</span> 978px 34px #fff<span class="token punctuation">,</span> 325px 1776px #fff<span class="token punctuation">,</span> 873px 1460px #fff<span class="token punctuation">,</span> 365px 33px #fff<span class="token punctuation">,</span> 913px 1999px #fff<span class="token punctuation">,</span> 667px 1021px #fff<span class="token punctuation">,</span> 27px 572px #fff<span class="token punctuation">,</span> 950px 1858px #fff<span class="token punctuation">,</span> 448px 1205px #fff<span class="token punctuation">,</span> 1302px 1138px #fff<span class="token punctuation">,</span> 1269px 932px #fff<span class="token punctuation">,</span> 480px 132px #fff<span class="token punctuation">,</span> 770px 1871px #fff<span class="token punctuation">,</span> 952px 654px #fff<span class="token punctuation">,</span> 623px 90px #fff<span class="token punctuation">,</span> 419px 1683px #fff<span class="token punctuation">,</span> 930px 794px #fff<span class="token punctuation">,</span> 1327px 1651px #fff<span class="token punctuation">,</span> 769px 1536px #fff<span class="token punctuation">,</span> 895px 90px #fff<span class="token punctuation">,</span> 599px 1268px #fff<span class="token punctuation">,</span> 1645px 919px #fff<span class="token punctuation">,</span> 1672px 1080px #fff<span class="token punctuation">,</span> 1637px 1259px #fff<span class="token punctuation">,</span> 243px 1182px #fff<span class="token punctuation">,</span> 1509px 457px #fff<span class="token punctuation">,</span> 1374px 1469px #fff<span class="token punctuation">,</span> 751px 137px #fff<span class="token punctuation">,</span> 1097px 1008px #fff<span class="token punctuation">,</span> 1979px 1381px #fff<span class="token punctuation">,</span> 981px 1825px #fff<span class="token punctuation">,</span> 928px 1930px #fff<span class="token punctuation">,</span> 632px 422px #fff<span class="token punctuation">,</span> 812px 341px #fff<span class="token punctuation">,</span> 1077px 1832px #fff<span class="token punctuation">,</span> 203px 1452px #fff<span class="token punctuation">,</span> 664px 1531px #fff<span class="token punctuation">,</span> 1203px 57px #fff<span class="token punctuation">,</span> 1654px 1203px #fff<span class="token punctuation">,</span> 491px 174px #fff<span class="token punctuation">,</span> 1507px 735px #fff<span class="token punctuation">,</span> 964px 896px #fff<span class="token punctuation">,</span> 52px 1718px #fff<span class="token punctuation">,</span> 1435px 26px #fff<span class="token punctuation">,</span> 753px 635px #fff<span class="token punctuation">,</span> 890px 1847px #fff<span class="token punctuation">,</span> 42px 1353px #fff<span class="token punctuation">,</span> 717px 72px #fff<span class="token punctuation">,</span> 1845px 1212px #fff<span class="token punctuation">,</span> 344px 867px #fff<span class="token punctuation">,</span> 418px 855px #fff<span class="token punctuation">,</span> 899px 1124px #fff<span class="token punctuation">,</span> 1798px 1582px #fff<span class="token punctuation">,</span> 1774px 760px #fff<span class="token punctuation">,</span> 908px 1567px #fff<span class="token punctuation">,</span> 1647px 1210px #fff<span class="token punctuation">,</span> 299px 82px #fff<span class="token punctuation">,</span> 1179px 1317px #fff<span class="token punctuation">,</span> 938px 1580px #fff<span class="token punctuation">,</span> 82px 921px #fff<span class="token punctuation">,</span> 657px 1596px #fff<span class="token punctuation">,</span> 892px 1264px #fff<span class="token punctuation">,</span> 1161px 819px #fff<span class="token punctuation">,</span> 607px 1447px #fff<span class="token punctuation">,</span> 605px 679px #fff<span class="token punctuation">,</span> 1642px 595px #fff<span class="token punctuation">,</span> 1963px 525px #fff<span class="token punctuation">,</span> 1656px 1591px #fff<span class="token punctuation">,</span> 1467px 1743px #fff<span class="token punctuation">,</span> 167px 1420px #fff<span class="token punctuation">,</span> 471px 492px #fff<span class="token punctuation">,</span> 1077px 932px #fff<span class="token punctuation">,</span> 774px 1282px #fff<span class="token punctuation">,</span> 799px 701px #fff<span class="token punctuation">,</span> 400px 258px #fff<span class="token punctuation">,</span> 235px 1937px #fff<span class="token punctuation">,</span> 894px 562px #fff<span class="token punctuation">,</span> 1277px 907px #fff<span class="token punctuation">,</span> 435px 1360px #fff<span class="token punctuation">,</span> 507px 1253px #fff<span class="token punctuation">,</span> 1022px 833px #fff<span class="token punctuation">,</span> 351px 773px #fff<span class="token punctuation">,</span> 1126px 1969px #fff<span class="token punctuation">,</span> 1382px 1620px #fff<span class="token punctuation">,</span> 411px 59px #fff<span class="token punctuation">,</span> 187px 906px #fff<span class="token punctuation">,</span> 644px 1364px #fff<span class="token punctuation">,</span> 1721px 1451px #fff<span class="token punctuation">,</span> 1879px 1390px #fff<span class="token punctuation">,</span> 1396px 318px #fff<span class="token punctuation">,</span> 1002px 891px #fff<span class="token punctuation">,</span> 1930px 1454px #fff<span class="token punctuation">,</span> 1952px 496px #fff<span class="token punctuation">,</span> 1308px 1325px #fff<span class="token punctuation">,</span> 343px 475px #fff<span class="token punctuation">,</span> 285px 373px #fff<span class="token punctuation">,</span> 1329px 1591px #fff<span class="token punctuation">,</span> 901px 1875px #fff<span class="token punctuation">,</span> 966px 254px #fff<span class="token punctuation">,</span> 1624px 1577px #fff<span class="token punctuation">,</span> 371px 589px #fff<span class="token punctuation">,</span> 1918px 1494px #fff<span class="token punctuation">,</span> 841px 589px #fff<span class="token punctuation">,</span> 873px 1657px #fff<span class="token punctuation">,</span> 970px 1697px #fff<span class="token punctuation">,</span> 1354px 975px #fff<span class="token punctuation">,</span> 807px 1099px #fff<span class="token punctuation">,</span> 384px 1608px #fff<span class="token punctuation">,</span> 1600px 1739px #fff<span class="token punctuation">,</span> 110px 1310px #fff<span class="token punctuation">,</span> 687px 1611px #fff<span class="token punctuation">,</span> 324px 394px #fff<span class="token punctuation">,</span> 1267px 224px #fff<span class="token punctuation">,</span> 1122px 1919px #fff<span class="token punctuation">,</span> 1753px 578px #fff<span class="token punctuation">,</span> 611px 479px #fff<span class="token punctuation">,</span> 1494px 475px #fff<span class="token punctuation">,</span> 1595px 368px #fff<span class="token punctuation">,</span> 304px 1379px #fff<span class="token punctuation">,</span> 1663px 87px #fff<span class="token punctuation">,</span> 1789px 1471px #fff<span class="token punctuation">,</span> 941px 1861px #fff<span class="token punctuation">,</span> 287px 657px #fff<span class="token punctuation">,</span> 1882px 217px #fff<span class="token punctuation">,</span> 1766px 1960px #fff<span class="token punctuation">,</span> 144px 966px #fff<span class="token punctuation">,</span> 872px 943px #fff<span class="token punctuation">,</span> 1705px 1909px #fff<span class="token punctuation">,</span> 1318px 1173px #fff<span class="token punctuation">,</span> 1856px 1549px #fff<span class="token punctuation">,</span> 1722px 1482px #fff<span class="token punctuation">,</span> 196px 594px #fff<span class="token punctuation">,</span> 355px 1182px #fff<span class="token punctuation">,</span> 1242px 112px #fff<span class="token punctuation">,</span> 226px 344px #fff<span class="token punctuation">,</span> 674px 895px #fff<span class="token punctuation">,</span> 210px 2px #fff<span class="token punctuation">,</span> 1224px 488px #fff<span class="token punctuation">,</span> 220px 617px #fff<span class="token punctuation">,</span> 1857px 1348px #fff<span class="token punctuation">,</span> 426px 1026px #fff<span class="token punctuation">,</span> 1370px 720px #fff<span class="token punctuation">,</span> 109px 440px #fff<span class="token punctuation">,</span> 1940px 1575px #fff<span class="token punctuation">,</span> 978px 1443px #fff<span class="token punctuation">,</span> 308px 614px #fff<span class="token punctuation">,</span> 1392px 1351px #fff<span class="token punctuation">,</span> 635px 1231px #fff<span class="token punctuation">,</span> 1132px 616px #fff<span class="token punctuation">,</span> 756px 342px #fff<span class="token punctuation">,</span> 1968px 765px #fff<span class="token punctuation">,</span> 1020px 1877px #fff<span class="token punctuation">,</span> 1998px 1325px #fff<span class="token punctuation">,</span> 1296px 1303px #fff<span class="token punctuation">,</span> 1817px 223px #fff<span class="token punctuation">,</span> 1184px 907px #fff<span class="token punctuation">,</span> 546px 845px #fff<span class="token punctuation">,</span> 51px 705px #fff<span class="token punctuation">,</span> 1421px 735px #fff<span class="token punctuation">,</span> 1255px 700px #fff<span class="token punctuation">,</span> 249px 1908px #fff<span class="token punctuation">,</span> 1701px 351px #fff<span class="token punctuation">,</span> 173px 1658px #fff<span class="token punctuation">,</span> 1088px 1476px #fff<span class="token punctuation">,</span> 1930px 1787px #fff<span class="token punctuation">,</span> 689px 1312px #fff<span class="token punctuation">,</span> 615px 1006px #fff<span class="token punctuation">,</span> 1870px 1229px #fff<span class="token punctuation">,</span> 1900px 546px #fff<span class="token punctuation">,</span> 1416px 141px #fff<span class="token punctuation">,</span> 1983px 945px #fff<span class="token punctuation">,</span> 1104px 1351px #fff<span class="token punctuation">,</span> 426px 701px #fff<span class="token punctuation">,</span> 431px 1597px #fff<span class="token punctuation">,</span> 893px 456px #fff<span class="token punctuation">,</span> 1976px 1914px #fff<span class="token punctuation">,</span> 1538px 673px #fff<span class="token punctuation">,</span> 916px 1386px #fff<span class="token punctuation">,</span> 304px 138px #fff<span class="token punctuation">,</span> 1038px 681px #fff<span class="token punctuation">,</span> 1349px 1740px #fff<span class="token punctuation">,</span> 1231px 552px #fff<span class="token punctuation">,</span> 35px 1435px #fff<span class="token punctuation">,</span> 588px 652px #fff<span class="token punctuation">,</span> 793px 575px #fff<span class="token punctuation">,</span> 542px 926px #fff<span class="token punctuation">,</span> 1252px 25px #fff<span class="token punctuation">,</span> 831px 332px #fff<span class="token punctuation">,</span> 718px 283px #fff<span class="token punctuation">,</span> 1327px 1952px #fff<span class="token punctuation">,</span> 1019px 704px #fff<span class="token punctuation">,</span> 888px 1117px #fff<span class="token punctuation">,</span> 1107px 1378px #fff<span class="token punctuation">,</span> 532px 505px #fff<span class="token punctuation">,</span> 1070px 552px #fff<span class="token punctuation">,</span> 346px 645px #fff<span class="token punctuation">,</span> 63px 1783px #fff<span class="token punctuation">,</span> 775px 879px #fff<span class="token punctuation">,</span> 165px 160px #fff<span class="token punctuation">,</span> 788px 1225px #fff<span class="token punctuation">,</span> 1562px 1520px #fff<span class="token punctuation">,</span> 56px 1522px #fff<span class="token punctuation">,</span> 439px 498px #fff<span class="token punctuation">,</span> 1988px 1521px #fff<span class="token punctuation">,</span> 254px 1363px #fff<span class="token punctuation">,</span> 1162px 816px #fff<span class="token punctuation">,</span> 219px 386px #fff<span class="token punctuation">,</span> 1789px 1315px #fff<span class="token punctuation">,</span> 1090px 1415px #fff<span class="token punctuation">,</span> 1361px 315px #fff<span class="token punctuation">,</span> 825px 1306px #fff<span class="token punctuation">,</span> 92px 548px #fff<span class="token punctuation">,</span> 1501px 1946px #fff<span class="token punctuation">,</span> 350px 1735px #fff<span class="token punctuation">,</span> 459px 1533px #fff<span class="token punctuation">,</span> 1417px 931px #fff<span class="token punctuation">,</span> 1849px 174px #fff<span class="token punctuation">,</span> 220px 1084px #fff<span class="token punctuation">,</span> 1357px 209px #fff<span class="token punctuation">,</span> 1974px 358px #fff<span class="token punctuation">,</span> 90px 808px #fff<span class="token punctuation">,</span> 1247px 765px #fff<span class="token punctuation">,</span> 1878px 725px #fff<span class="token punctuation">,</span> 1415px 87px #fff<span class="token punctuation">,</span> 1253px 943px #fff<span class="token punctuation">,</span> 1455px 1919px #fff<span class="token punctuation">,</span> 1321px 337px #fff<span class="token punctuation">,</span> 1210px 1600px #fff<span class="token punctuation">,</span> 1855px 1575px #fff<span class="token punctuation">,</span> 325px 936px #fff<span class="token punctuation">,</span> 1118px 892px #fff<span class="token punctuation">,</span> 703px 294px #fff<span class="token punctuation">,</span> 89px 891px #fff<span class="token punctuation">,</span> 239px 1548px #fff<span class="token punctuation">,</span> 280px 262px #fff<span class="token punctuation">,</span> 1401px 555px #fff<span class="token punctuation">,</span> 1092px 1638px #fff<span class="token punctuation">,</span> 673px 1207px #fff<span class="token punctuation">,</span> 1469px 1358px #fff<span class="token punctuation">,</span> 1253px 1986px #fff<span class="token punctuation">,</span> 1249px 1040px #fff<span class="token punctuation">,</span> 253px 484px #fff<span class="token punctuation">,</span> 1163px 775px #fff<span class="token punctuation">,</span> 426px 162px #fff<span class="token punctuation">,</span> 721px 1761px #fff<span class="token punctuation">,</span> 369px 510px #fff<span class="token punctuation">,</span> 702px 1599px #fff<span class="token punctuation">,</span> 1883px 483px #fff<span class="token punctuation">,</span> 680px 1604px #fff<span class="token punctuation">,</span> 870px 1599px #fff<span class="token punctuation">,</span> 976px 1808px #fff<span class="token punctuation">,</span> 916px 477px #fff<span class="token punctuation">,</span> 1223px 1636px #fff<span class="token punctuation">,</span> 506px 993px #fff<span class="token punctuation">,</span> 898px 1284px #fff<span class="token punctuation">,</span> 1013px 290px #fff<span class="token punctuation">,</span> 1189px 78px #fff<span class="token punctuation">,</span> 25px 588px #fff<span class="token punctuation">,</span> 960px 861px #fff<span class="token punctuation">,</span> 28px 526px #fff<span class="token punctuation">,</span> 959px 681px #fff<span class="token punctuation">,</span> 1426px 1329px #fff<span class="token punctuation">,</span> 294px 557px #fff<span class="token punctuation">,</span> 1907px 1320px #fff<span class="token punctuation">,</span> 1289px 1627px #fff<span class="token punctuation">,</span> 124px 451px #fff<span class="token punctuation">,</span> 967px 653px #fff<span class="token punctuation">,</span> 892px 1460px #fff<span class="token punctuation">,</span> 537px 1385px #fff<span class="token punctuation">,</span> 197px 1954px #fff<span class="token punctuation">,</span> 1543px 302px #fff<span class="token punctuation">,</span> 747px 1953px #fff<span class="token punctuation">,</span> 995px 1630px #fff<span class="token punctuation">,</span> 1423px 1221px #fff<span class="token punctuation">,</span> 1075px 983px #fff<span class="token punctuation">,</span> 1556px 1739px #fff<span class="token punctuation">,</span> 1068px 1425px #fff<span class="token punctuation">,</span> 81px 550px #fff<span class="token punctuation">,</span> 1668px 523px #fff<span class="token punctuation">,</span> 1158px 438px #fff<span class="token punctuation">,</span> 401px 1795px #fff<span class="token punctuation">,</span> 537px 1072px #fff<span class="token punctuation">,</span> 1px 326px #fff<span class="token punctuation">,</span> 249px 118px #fff<span class="token punctuation">,</span> 832px 1544px #fff<span class="token punctuation">,</span> 240px 153px #fff<span class="token punctuation">,</span> 651px 1077px #fff<span class="token punctuation">,</span> 1656px 542px #fff<span class="token punctuation">,</span> 1102px 606px #fff<span class="token punctuation">,</span> 1583px 788px #fff<span class="token punctuation">,</span> 1205px 1842px #fff<span class="token punctuation">,</span> 1657px 1793px #fff<span class="token punctuation">,</span> 1848px 1464px #fff<span class="token punctuation">,</span> 1285px 1395px #fff<span class="token punctuation">,</span> 662px 1227px #fff<span class="token punctuation">,</span> 1790px 134px #fff<span class="token punctuation">,</span> 577px 263px #fff<span class="token punctuation">,</span> 383px 702px #fff<span class="token punctuation">,</span> 1728px 1953px #fff<span class="token punctuation">,</span> 417px 57px #fff<span class="token punctuation">,</span> 1390px 574px #fff<span class="token punctuation">,</span> 1024px 287px #fff<span class="token punctuation">,</span> 1969px 753px #fff<span class="token punctuation">,</span> 1239px 1036px #fff<span class="token punctuation">,</span> 1063px 1313px #fff<span class="token punctuation">,</span> 1784px 1519px #fff<span class="token punctuation">,</span> 1665px 682px #fff<span class="token punctuation">,</span> 806px 1437px #fff<span class="token punctuation">,</span> 394px 917px #fff<span class="token punctuation">,</span> 904px 666px #fff<span class="token punctuation">,</span> 801px 1280px #fff<span class="token punctuation">,</span> 1392px 1930px #fff<span class="token punctuation">,</span> 1611px 1386px #fff<span class="token punctuation">,</span> 1809px 1507px #fff<span class="token punctuation">,</span> 1720px 1300px #fff<span class="token punctuation">,</span> 1721px 1287px #fff<span class="token punctuation">,</span> 969px 240px #fff<span class="token punctuation">,</span> 3px 1070px #fff<span class="token punctuation">,</span> 1198px 538px #fff<span class="token punctuation">,</span> 1416px 1001px #fff<span class="token punctuation">,</span> 1665px 1265px #fff<span class="token punctuation">,</span> 1010px 1275px #fff<span class="token punctuation">,</span> 772px 978px #fff<span class="token punctuation">,</span> 1980px 980px #fff<span class="token punctuation">,</span> 1283px 1573px #fff<span class="token punctuation">,</span> 444px 516px #fff<span class="token punctuation">,</span> 875px 737px #fff<span class="token punctuation">,</span> 258px 716px #fff<span class="token punctuation">,</span> 1698px 758px #fff<span class="token punctuation">,</span> 644px 238px #fff<span class="token punctuation">,</span> 19px 876px #fff<span class="token punctuation">,</span> 355px 1327px #fff<span class="token punctuation">,</span> 1602px 1846px #fff<span class="token punctuation">,</span> 548px 534px #fff<span class="token punctuation">,</span> 1498px 1473px #fff<span class="token punctuation">,</span> 1389px 1136px #fff<span class="token punctuation">,</span> 174px 771px #fff<span class="token punctuation">,</span> 955px 1931px #fff<span class="token punctuation">,</span> 403px 371px #fff<span class="token punctuation">,</span> 1502px 794px #fff<span class="token punctuation">,</span> 117px 876px #fff<span class="token punctuation">,</span> 536px 778px #fff<span class="token punctuation">,</span> 67px 393px #fff<span class="token punctuation">,</span> 119px 1918px #fff<span class="token punctuation">,</span> 1912px 1663px #fff<span class="token punctuation">,</span> 1141px 245px #fff<span class="token punctuation">,</span> 1105px 130px #fff<span class="token punctuation">,</span> 1218px 1608px #fff<span class="token punctuation">,</span> 662px 1502px #fff<span class="token punctuation">,</span> 1907px 927px #fff<span class="token punctuation">,</span> 521px 109px #fff<span class="token punctuation">,</span> 1885px 362px #fff<span class="token punctuation">,</span> 1785px 1935px #fff<span class="token punctuation">,</span> 781px 427px #fff<span class="token punctuation">,</span> 1446px 1991px #fff<span class="token punctuation">,</span> 164px 1539px #fff<span class="token punctuation">,</span> 1807px 1795px #fff<span class="token punctuation">,</span> 1922px 890px #fff<span class="token punctuation">,</span> 1245px 933px #fff<span class="token punctuation">,</span> 446px 450px #fff<span class="token punctuation">,</span> 1743px 79px #fff<span class="token punctuation">,</span> 1959px 310px #fff<span class="token punctuation">,</span> 1348px 749px #fff<span class="token punctuation">,</span> 1954px 128px #fff<span class="token punctuation">,</span> 1980px 1030px #fff<span class="token punctuation">,</span> 1850px 302px #fff<span class="token punctuation">,</span> 1074px 922px #fff<span class="token punctuation">,</span> 174px 403px #fff<span class="token punctuation">,</span> 1579px 733px #fff<span class="token punctuation">,</span> 653px 1958px #fff<span class="token punctuation">,</span> 1511px 1943px #fff<span class="token punctuation">,</span> 1037px 741px #fff<span class="token punctuation">,</span> 602px 1384px #fff<span class="token punctuation">,</span> 103px 402px #fff<span class="token punctuation">,</span> 1722px 1417px #fff<span class="token punctuation">,</span> 1732px 1916px #fff<span class="token punctuation">,</span> 1743px 1803px #fff<span class="token punctuation">,</span> 381px 721px #fff<span class="token punctuation">,</span> 964px 1700px #fff<span class="token punctuation">,</span> 1070px 341px #fff<span class="token punctuation">,</span> 1376px 1258px #fff<span class="token punctuation">,</span> 1884px 570px #fff<span class="token punctuation">,</span> 940px 280px #fff<span class="token punctuation">,</span> 1484px 1658px #fff<span class="token punctuation">,</span> 1806px 1875px #fff<span class="token punctuation">,</span> 1054px 917px #fff<span class="token punctuation">,</span> 1672px 103px #fff<span class="token punctuation">,</span> 783px 574px #fff<span class="token punctuation">,</span> 98px 347px #fff<span class="token punctuation">,</span> 555px 1136px #fff<span class="token punctuation">,</span> 1403px 1237px #fff<span class="token punctuation">,</span> 1203px 339px #fff<span class="token punctuation">,</span> 572px 35px #fff<span class="token punctuation">,</span> 932px 1783px #fff<span class="token punctuation">,</span> 1527px 1850px #fff<span class="token punctuation">,</span> 1959px 1109px #fff<span class="token punctuation">,</span> 892px 623px #fff<span class="token punctuation">,</span> 211px 1388px #fff<span class="token punctuation">,</span> 1581px 1806px #fff<span class="token punctuation">,</span> 868px 1053px #fff<span class="token punctuation">,</span> 1243px 1997px #fff<span class="token punctuation">,</span> 1004px 522px #fff<span class="token punctuation">,</span> 1241px 1707px #fff<span class="token punctuation">,</span> 376px 282px #fff<span class="token punctuation">,</span> 537px 878px #fff<span class="token punctuation">,</span> 1948px 979px #fff<span class="token punctuation">,</span> 532px 688px #fff<span class="token punctuation">,</span> 273px 958px #fff<span class="token punctuation">,</span> 581px 927px #fff<span class="token punctuation">,</span> 1060px 887px #fff<span class="token punctuation">,</span> 486px 1467px #fff<span class="token punctuation">,</span> 1122px 1834px #fff<span class="token punctuation">,</span> 1650px 1763px #fff<span class="token punctuation">,</span> 532px 302px #fff<span class="token punctuation">,</span> 314px 1111px #fff<span class="token punctuation">,</span> 1888px 683px #fff<span class="token punctuation">,</span> 1856px 1040px #fff<span class="token punctuation">,</span> 1780px 1338px #fff<span class="token punctuation">,</span> 24px 1564px #fff<span class="token punctuation">,</span> 1096px 1808px #fff<span class="token punctuation">,</span> 1202px 1968px #fff<span class="token punctuation">,</span> 214px 992px #fff<span class="token punctuation">,</span> 728px 515px #fff<span class="token punctuation">,</span> 247px 278px #fff<span class="token punctuation">,</span> 1670px 45px #fff<span class="token punctuation">,</span> 442px 1579px #fff<span class="token punctuation">,</span> 1143px 30px #fff<span class="token punctuation">,</span> 612px 72px #fff<span class="token punctuation">,</span> 1177px 1303px #fff<span class="token punctuation">,</span> 1898px 1255px #fff<span class="token punctuation">,</span> 378px 1667px #fff<span class="token punctuation">,</span> 326px 1929px #fff<span class="token punctuation">,</span> 1257px 766px #fff<span class="token punctuation">,</span> 1363px 1170px #fff<span class="token punctuation">,</span> 1090px 1667px #fff<span class="token punctuation">,</span> 711px 293px #fff<span class="token punctuation">,</span> 249px 1406px #fff<span class="token punctuation">,</span> 1589px 565px #fff<span class="token punctuation">,</span> 1451px 29px #fff<span class="token punctuation">,</span> 1171px 1459px #fff<span class="token punctuation">,</span> 1294px 1214px #fff<span class="token punctuation">,</span> 342px 942px #fff<span class="token punctuation">,</span> 1945px 353px #fff<span class="token punctuation">,</span> 741px 1185px #fff<span class="token punctuation">,</span> 894px 1453px #fff<span class="token punctuation">,</span> 593px 1584px #fff<span class="token punctuation">,</span> 518px 630px #fff<span class="token punctuation">,</span> 393px 756px #fff<span class="token punctuation">,</span> 34px 608px #fff<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode #stars2</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 114px 658px #fff<span class="token punctuation">,</span> 236px 768px #fff<span class="token punctuation">,</span> 1130px 1503px #fff<span class="token punctuation">,</span> 486px 592px #fff<span class="token punctuation">,</span> 1353px 1407px #fff<span class="token punctuation">,</span> 1583px 1741px #fff<span class="token punctuation">,</span> 450px 1479px #fff<span class="token punctuation">,</span> 1845px 327px #fff<span class="token punctuation">,</span> 1520px 361px #fff<span class="token punctuation">,</span> 580px 1699px #fff<span class="token punctuation">,</span> 1277px 1233px #fff<span class="token punctuation">,</span> 1697px 943px #fff<span class="token punctuation">,</span> 568px 1135px #fff<span class="token punctuation">,</span> 1273px 263px #fff<span class="token punctuation">,</span> 788px 126px #fff<span class="token punctuation">,</span> 1834px 1911px #fff<span class="token punctuation">,</span> 1147px 1652px #fff<span class="token punctuation">,</span> 651px 567px #fff<span class="token punctuation">,</span> 79px 1897px #fff<span class="token punctuation">,</span> 1590px 666px #fff<span class="token punctuation">,</span> 1362px 566px #fff<span class="token punctuation">,</span> 275px 367px #fff<span class="token punctuation">,</span> 556px 479px #fff<span class="token punctuation">,</span> 1063px 476px #fff<span class="token punctuation">,</span> 1337px 1119px #fff<span class="token punctuation">,</span> 1780px 1109px #fff<span class="token punctuation">,</span> 1323px 1655px #fff<span class="token punctuation">,</span> 1740px 1165px #fff<span class="token punctuation">,</span> 525px 60px #fff<span class="token punctuation">,</span> 1513px 1484px #fff<span class="token punctuation">,</span> 708px 280px #fff<span class="token punctuation">,</span> 429px 475px #fff<span class="token punctuation">,</span> 563px 1360px #fff<span class="token punctuation">,</span> 1580px 697px #fff<span class="token punctuation">,</span> 1702px 1164px #fff<span class="token punctuation">,</span> 1649px 1952px #fff<span class="token punctuation">,</span> 1580px 1812px #fff<span class="token punctuation">,</span> 70px 1190px #fff<span class="token punctuation">,</span> 1100px 98px #fff<span class="token punctuation">,</span> 1232px 1896px #fff<span class="token punctuation">,</span> 851px 1047px #fff<span class="token punctuation">,</span> 851px 30px #fff<span class="token punctuation">,</span> 596px 1486px #fff<span class="token punctuation">,</span> 666px 526px #fff<span class="token punctuation">,</span> 1855px 1342px #fff<span class="token punctuation">,</span> 80px 531px #fff<span class="token punctuation">,</span> 248px 1804px #fff<span class="token punctuation">,</span> 1990px 263px #fff<span class="token punctuation">,</span> 1796px 1640px #fff<span class="token punctuation">,</span> 1502px 862px #fff<span class="token punctuation">,</span> 1780px 488px #fff<span class="token punctuation">,</span> 1881px 1191px #fff<span class="token punctuation">,</span> 1063px 876px #fff<span class="token punctuation">,</span> 1614px 1073px #fff<span class="token punctuation">,</span> 1414px 666px #fff<span class="token punctuation">,</span> 1865px 289px #fff<span class="token punctuation">,</span> 687px 352px #fff<span class="token punctuation">,</span> 1329px 1312px #fff<span class="token punctuation">,</span> 279px 136px #fff<span class="token punctuation">,</span> 475px 756px #fff<span class="token punctuation">,</span> 1177px 435px #fff<span class="token punctuation">,</span> 1264px 921px #fff<span class="token punctuation">,</span> 467px 1496px #fff<span class="token punctuation">,</span> 391px 1359px #fff<span class="token punctuation">,</span> 666px 1083px #fff<span class="token punctuation">,</span> 1526px 1251px #fff<span class="token punctuation">,</span> 594px 564px #fff<span class="token punctuation">,</span> 991px 525px #fff<span class="token punctuation">,</span> 1511px 875px #fff<span class="token punctuation">,</span> 1935px 1049px #fff<span class="token punctuation">,</span> 1471px 1430px #fff<span class="token punctuation">,</span> 959px 604px #fff<span class="token punctuation">,</span> 1685px 72px #fff<span class="token punctuation">,</span> 1505px 1876px #fff<span class="token punctuation">,</span> 509px 1627px #fff<span class="token punctuation">,</span> 1065px 978px #fff<span class="token punctuation">,</span> 1860px 884px #fff<span class="token punctuation">,</span> 1038px 464px #fff<span class="token punctuation">,</span> 1051px 106px #fff<span class="token punctuation">,</span> 1056px 728px #fff<span class="token punctuation">,</span> 1953px 45px #fff<span class="token punctuation">,</span> 1483px 638px #fff<span class="token punctuation">,</span> 559px 845px #fff<span class="token punctuation">,</span> 1184px 922px #fff<span class="token punctuation">,</span> 1320px 1117px #fff<span class="token punctuation">,</span> 1572px 747px #fff<span class="token punctuation">,</span> 1971px 43px #fff<span class="token punctuation">,</span> 665px 13px #fff<span class="token punctuation">,</span> 1457px 1153px #fff<span class="token punctuation">,</span> 848px 154px #fff<span class="token punctuation">,</span> 1039px 1837px #fff<span class="token punctuation">,</span> 878px 795px #fff<span class="token punctuation">,</span> 1286px 1705px #fff<span class="token punctuation">,</span> 1946px 1143px #fff<span class="token punctuation">,</span> 1114px 1166px #fff<span class="token punctuation">,</span> 1747px 874px #fff<span class="token punctuation">,</span> 1894px 636px #fff<span class="token punctuation">,</span> 1316px 541px #fff<span class="token punctuation">,</span> 1953px 1620px #fff<span class="token punctuation">,</span> 1446px 1773px #fff<span class="token punctuation">,</span> 974px 833px #fff<span class="token punctuation">,</span> 1814px 1211px #fff<span class="token punctuation">,</span> 102px 335px #fff<span class="token punctuation">,</span> 327px 1868px #fff<span class="token punctuation">,</span> 348px 548px #fff<span class="token punctuation">,</span> 353px 1540px #fff<span class="token punctuation">,</span> 1212px 1872px #fff<span class="token punctuation">,</span> 1968px 129px #fff<span class="token punctuation">,</span> 1531px 644px #fff<span class="token punctuation">,</span> 1939px 559px #fff<span class="token punctuation">,</span> 1397px 1876px #fff<span class="token punctuation">,</span> 1446px 1446px #fff<span class="token punctuation">,</span> 1721px 603px #fff<span class="token punctuation">,</span> 924px 1171px #fff<span class="token punctuation">,</span> 1086px 1954px #fff<span class="token punctuation">,</span> 1798px 310px #fff<span class="token punctuation">,</span> 21px 1595px #fff<span class="token punctuation">,</span> 1462px 1948px #fff<span class="token punctuation">,</span> 149px 1752px #fff<span class="token punctuation">,</span> 804px 318px #fff<span class="token punctuation">,</span> 1262px 636px #fff<span class="token punctuation">,</span> 1051px 100px #fff<span class="token punctuation">,</span> 392px 560px #fff<span class="token punctuation">,</span> 654px 1236px #fff<span class="token punctuation">,</span> 1889px 1159px #fff<span class="token punctuation">,</span> 498px 394px #fff<span class="token punctuation">,</span> 522px 1889px #fff<span class="token punctuation">,</span> 1198px 579px #fff<span class="token punctuation">,</span> 1437px 1866px #fff<span class="token punctuation">,</span> 1049px 1064px #fff<span class="token punctuation">,</span> 286px 921px #fff<span class="token punctuation">,</span> 993px 1790px #fff<span class="token punctuation">,</span> 1557px 1997px #fff<span class="token punctuation">,</span> 1525px 532px #fff<span class="token punctuation">,</span> 481px 1561px #fff<span class="token punctuation">,</span> 790px 683px #fff<span class="token punctuation">,</span> 141px 17px #fff<span class="token punctuation">,</span> 1202px 28px #fff<span class="token punctuation">,</span> 518px 1927px #fff<span class="token punctuation">,</span> 90px 1677px #fff<span class="token punctuation">,</span> 1258px 370px #fff<span class="token punctuation">,</span> 1379px 1536px #fff<span class="token punctuation">,</span> 607px 474px #fff<span class="token punctuation">,</span> 163px 139px #fff<span class="token punctuation">,</span> 1025px 1359px #fff<span class="token punctuation">,</span> 815px 845px #fff<span class="token punctuation">,</span> 231px 1212px #fff<span class="token punctuation">,</span> 192px 806px #fff<span class="token punctuation">,</span> 313px 1946px #fff<span class="token punctuation">,</span> 1132px 1808px #fff<span class="token punctuation">,</span> 624px 767px #fff<span class="token punctuation">,</span> 379px 722px #fff<span class="token punctuation">,</span> 733px 1847px #fff<span class="token punctuation">,</span> 628px 1517px #fff<span class="token punctuation">,</span> 1559px 929px #fff<span class="token punctuation">,</span> 234px 397px #fff<span class="token punctuation">,</span> 1230px 1231px #fff<span class="token punctuation">,</span> 849px 726px #fff<span class="token punctuation">,</span> 1148px 786px #fff<span class="token punctuation">,</span> 546px 1533px #fff<span class="token punctuation">,</span> 477px 822px #fff<span class="token punctuation">,</span> 1325px 480px #fff<span class="token punctuation">,</span> 972px 383px #fff<span class="token punctuation">,</span> 334px 958px #fff<span class="token punctuation">,</span> 1032px 664px #fff<span class="token punctuation">,</span> 1781px 40px #fff<span class="token punctuation">,</span> 38px 1335px #fff<span class="token punctuation">,</span> 1634px 1691px #fff<span class="token punctuation">,</span> 1061px 680px #fff<span class="token punctuation">,</span> 1319px 304px #fff<span class="token punctuation">,</span> 82px 1776px #fff<span class="token punctuation">,</span> 1302px 509px #fff<span class="token punctuation">,</span> 1231px 746px #fff<span class="token punctuation">,</span> 1264px 1509px #fff<span class="token punctuation">,</span> 980px 495px #fff<span class="token punctuation">,</span> 1153px 1381px #fff<span class="token punctuation">,</span> 1981px 1918px #fff<span class="token punctuation">,</span> 70px 113px #fff<span class="token punctuation">,</span> 390px 736px #fff<span class="token punctuation">,</span> 1882px 1925px #fff<span class="token punctuation">,</span> 1380px 1326px #fff<span class="token punctuation">,</span> 257px 1681px #fff<span class="token punctuation">,</span> 860px 998px #fff<span class="token punctuation">,</span> 518px 1136px #fff<span class="token punctuation">,</span> 168px 905px #fff<span class="token punctuation">,</span> 500px 1882px #fff<span class="token punctuation">,</span> 1012px 1572px #fff<span class="token punctuation">,</span> 349px 1916px #fff<span class="token punctuation">,</span> 905px 1339px #fff<span class="token punctuation">,</span> 1940px 1803px #fff<span class="token punctuation">,</span> 23px 1159px #fff<span class="token punctuation">,</span> 9px 1559px #fff<span class="token punctuation">,</span> 1658px 776px #fff<span class="token punctuation">,</span> 820px 1361px #fff<span class="token punctuation">,</span> 171px 983px #fff<span class="token punctuation">,</span> 580px 1902px #fff<span class="token punctuation">,</span> 1268px 263px #fff<span class="token punctuation">,</span> 1734px 994px #fff<span class="token punctuation">,</span> 1872px 29px #fff<span class="token punctuation">,</span> 1475px 435px #fff<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> animStar 100s linear infinite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode #stars2:after</span> <span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 2000px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 114px 658px #fff<span class="token punctuation">,</span> 236px 768px #fff<span class="token punctuation">,</span> 1130px 1503px #fff<span class="token punctuation">,</span> 486px 592px #fff<span class="token punctuation">,</span> 1353px 1407px #fff<span class="token punctuation">,</span> 1583px 1741px #fff<span class="token punctuation">,</span> 450px 1479px #fff<span class="token punctuation">,</span> 1845px 327px #fff<span class="token punctuation">,</span> 1520px 361px #fff<span class="token punctuation">,</span> 580px 1699px #fff<span class="token punctuation">,</span> 1277px 1233px #fff<span class="token punctuation">,</span> 1697px 943px #fff<span class="token punctuation">,</span> 568px 1135px #fff<span class="token punctuation">,</span> 1273px 263px #fff<span class="token punctuation">,</span> 788px 126px #fff<span class="token punctuation">,</span> 1834px 1911px #fff<span class="token punctuation">,</span> 1147px 1652px #fff<span class="token punctuation">,</span> 651px 567px #fff<span class="token punctuation">,</span> 79px 1897px #fff<span class="token punctuation">,</span> 1590px 666px #fff<span class="token punctuation">,</span> 1362px 566px #fff<span class="token punctuation">,</span> 275px 367px #fff<span class="token punctuation">,</span> 556px 479px #fff<span class="token punctuation">,</span> 1063px 476px #fff<span class="token punctuation">,</span> 1337px 1119px #fff<span class="token punctuation">,</span> 1780px 1109px #fff<span class="token punctuation">,</span> 1323px 1655px #fff<span class="token punctuation">,</span> 1740px 1165px #fff<span class="token punctuation">,</span> 525px 60px #fff<span class="token punctuation">,</span> 1513px 1484px #fff<span class="token punctuation">,</span> 708px 280px #fff<span class="token punctuation">,</span> 429px 475px #fff<span class="token punctuation">,</span> 563px 1360px #fff<span class="token punctuation">,</span> 1580px 697px #fff<span class="token punctuation">,</span> 1702px 1164px #fff<span class="token punctuation">,</span> 1649px 1952px #fff<span class="token punctuation">,</span> 1580px 1812px #fff<span class="token punctuation">,</span> 70px 1190px #fff<span class="token punctuation">,</span> 1100px 98px #fff<span class="token punctuation">,</span> 1232px 1896px #fff<span class="token punctuation">,</span> 851px 1047px #fff<span class="token punctuation">,</span> 851px 30px #fff<span class="token punctuation">,</span> 596px 1486px #fff<span class="token punctuation">,</span> 666px 526px #fff<span class="token punctuation">,</span> 1855px 1342px #fff<span class="token punctuation">,</span> 80px 531px #fff<span class="token punctuation">,</span> 248px 1804px #fff<span class="token punctuation">,</span> 1990px 263px #fff<span class="token punctuation">,</span> 1796px 1640px #fff<span class="token punctuation">,</span> 1502px 862px #fff<span class="token punctuation">,</span> 1780px 488px #fff<span class="token punctuation">,</span> 1881px 1191px #fff<span class="token punctuation">,</span> 1063px 876px #fff<span class="token punctuation">,</span> 1614px 1073px #fff<span class="token punctuation">,</span> 1414px 666px #fff<span class="token punctuation">,</span> 1865px 289px #fff<span class="token punctuation">,</span> 687px 352px #fff<span class="token punctuation">,</span> 1329px 1312px #fff<span class="token punctuation">,</span> 279px 136px #fff<span class="token punctuation">,</span> 475px 756px #fff<span class="token punctuation">,</span> 1177px 435px #fff<span class="token punctuation">,</span> 1264px 921px #fff<span class="token punctuation">,</span> 467px 1496px #fff<span class="token punctuation">,</span> 391px 1359px #fff<span class="token punctuation">,</span> 666px 1083px #fff<span class="token punctuation">,</span> 1526px 1251px #fff<span class="token punctuation">,</span> 594px 564px #fff<span class="token punctuation">,</span> 991px 525px #fff<span class="token punctuation">,</span> 1511px 875px #fff<span class="token punctuation">,</span> 1935px 1049px #fff<span class="token punctuation">,</span> 1471px 1430px #fff<span class="token punctuation">,</span> 959px 604px #fff<span class="token punctuation">,</span> 1685px 72px #fff<span class="token punctuation">,</span> 1505px 1876px #fff<span class="token punctuation">,</span> 509px 1627px #fff<span class="token punctuation">,</span> 1065px 978px #fff<span class="token punctuation">,</span> 1860px 884px #fff<span class="token punctuation">,</span> 1038px 464px #fff<span class="token punctuation">,</span> 1051px 106px #fff<span class="token punctuation">,</span> 1056px 728px #fff<span class="token punctuation">,</span> 1953px 45px #fff<span class="token punctuation">,</span> 1483px 638px #fff<span class="token punctuation">,</span> 559px 845px #fff<span class="token punctuation">,</span> 1184px 922px #fff<span class="token punctuation">,</span> 1320px 1117px #fff<span class="token punctuation">,</span> 1572px 747px #fff<span class="token punctuation">,</span> 1971px 43px #fff<span class="token punctuation">,</span> 665px 13px #fff<span class="token punctuation">,</span> 1457px 1153px #fff<span class="token punctuation">,</span> 848px 154px #fff<span class="token punctuation">,</span> 1039px 1837px #fff<span class="token punctuation">,</span> 878px 795px #fff<span class="token punctuation">,</span> 1286px 1705px #fff<span class="token punctuation">,</span> 1946px 1143px #fff<span class="token punctuation">,</span> 1114px 1166px #fff<span class="token punctuation">,</span> 1747px 874px #fff<span class="token punctuation">,</span> 1894px 636px #fff<span class="token punctuation">,</span> 1316px 541px #fff<span class="token punctuation">,</span> 1953px 1620px #fff<span class="token punctuation">,</span> 1446px 1773px #fff<span class="token punctuation">,</span> 974px 833px #fff<span class="token punctuation">,</span> 1814px 1211px #fff<span class="token punctuation">,</span> 102px 335px #fff<span class="token punctuation">,</span> 327px 1868px #fff<span class="token punctuation">,</span> 348px 548px #fff<span class="token punctuation">,</span> 353px 1540px #fff<span class="token punctuation">,</span> 1212px 1872px #fff<span class="token punctuation">,</span> 1968px 129px #fff<span class="token punctuation">,</span> 1531px 644px #fff<span class="token punctuation">,</span> 1939px 559px #fff<span class="token punctuation">,</span> 1397px 1876px #fff<span class="token punctuation">,</span> 1446px 1446px #fff<span class="token punctuation">,</span> 1721px 603px #fff<span class="token punctuation">,</span> 924px 1171px #fff<span class="token punctuation">,</span> 1086px 1954px #fff<span class="token punctuation">,</span> 1798px 310px #fff<span class="token punctuation">,</span> 21px 1595px #fff<span class="token punctuation">,</span> 1462px 1948px #fff<span class="token punctuation">,</span> 149px 1752px #fff<span class="token punctuation">,</span> 804px 318px #fff<span class="token punctuation">,</span> 1262px 636px #fff<span class="token punctuation">,</span> 1051px 100px #fff<span class="token punctuation">,</span> 392px 560px #fff<span class="token punctuation">,</span> 654px 1236px #fff<span class="token punctuation">,</span> 1889px 1159px #fff<span class="token punctuation">,</span> 498px 394px #fff<span class="token punctuation">,</span> 522px 1889px #fff<span class="token punctuation">,</span> 1198px 579px #fff<span class="token punctuation">,</span> 1437px 1866px #fff<span class="token punctuation">,</span> 1049px 1064px #fff<span class="token punctuation">,</span> 286px 921px #fff<span class="token punctuation">,</span> 993px 1790px #fff<span class="token punctuation">,</span> 1557px 1997px #fff<span class="token punctuation">,</span> 1525px 532px #fff<span class="token punctuation">,</span> 481px 1561px #fff<span class="token punctuation">,</span> 790px 683px #fff<span class="token punctuation">,</span> 141px 17px #fff<span class="token punctuation">,</span> 1202px 28px #fff<span class="token punctuation">,</span> 518px 1927px #fff<span class="token punctuation">,</span> 90px 1677px #fff<span class="token punctuation">,</span> 1258px 370px #fff<span class="token punctuation">,</span> 1379px 1536px #fff<span class="token punctuation">,</span> 607px 474px #fff<span class="token punctuation">,</span> 163px 139px #fff<span class="token punctuation">,</span> 1025px 1359px #fff<span class="token punctuation">,</span> 815px 845px #fff<span class="token punctuation">,</span> 231px 1212px #fff<span class="token punctuation">,</span> 192px 806px #fff<span class="token punctuation">,</span> 313px 1946px #fff<span class="token punctuation">,</span> 1132px 1808px #fff<span class="token punctuation">,</span> 624px 767px #fff<span class="token punctuation">,</span> 379px 722px #fff<span class="token punctuation">,</span> 733px 1847px #fff<span class="token punctuation">,</span> 628px 1517px #fff<span class="token punctuation">,</span> 1559px 929px #fff<span class="token punctuation">,</span> 234px 397px #fff<span class="token punctuation">,</span> 1230px 1231px #fff<span class="token punctuation">,</span> 849px 726px #fff<span class="token punctuation">,</span> 1148px 786px #fff<span class="token punctuation">,</span> 546px 1533px #fff<span class="token punctuation">,</span> 477px 822px #fff<span class="token punctuation">,</span> 1325px 480px #fff<span class="token punctuation">,</span> 972px 383px #fff<span class="token punctuation">,</span> 334px 958px #fff<span class="token punctuation">,</span> 1032px 664px #fff<span class="token punctuation">,</span> 1781px 40px #fff<span class="token punctuation">,</span> 38px 1335px #fff<span class="token punctuation">,</span> 1634px 1691px #fff<span class="token punctuation">,</span> 1061px 680px #fff<span class="token punctuation">,</span> 1319px 304px #fff<span class="token punctuation">,</span> 82px 1776px #fff<span class="token punctuation">,</span> 1302px 509px #fff<span class="token punctuation">,</span> 1231px 746px #fff<span class="token punctuation">,</span> 1264px 1509px #fff<span class="token punctuation">,</span> 980px 495px #fff<span class="token punctuation">,</span> 1153px 1381px #fff<span class="token punctuation">,</span> 1981px 1918px #fff<span class="token punctuation">,</span> 70px 113px #fff<span class="token punctuation">,</span> 390px 736px #fff<span class="token punctuation">,</span> 1882px 1925px #fff<span class="token punctuation">,</span> 1380px 1326px #fff<span class="token punctuation">,</span> 257px 1681px #fff<span class="token punctuation">,</span> 860px 998px #fff<span class="token punctuation">,</span> 518px 1136px #fff<span class="token punctuation">,</span> 168px 905px #fff<span class="token punctuation">,</span> 500px 1882px #fff<span class="token punctuation">,</span> 1012px 1572px #fff<span class="token punctuation">,</span> 349px 1916px #fff<span class="token punctuation">,</span> 905px 1339px #fff<span class="token punctuation">,</span> 1940px 1803px #fff<span class="token punctuation">,</span> 23px 1159px #fff<span class="token punctuation">,</span> 9px 1559px #fff<span class="token punctuation">,</span> 1658px 776px #fff<span class="token punctuation">,</span> 820px 1361px #fff<span class="token punctuation">,</span> 171px 983px #fff<span class="token punctuation">,</span> 580px 1902px #fff<span class="token punctuation">,</span> 1268px 263px #fff<span class="token punctuation">,</span> 1734px 994px #fff<span class="token punctuation">,</span> 1872px 29px #fff<span class="token punctuation">,</span> 1475px 435px #fff<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode #stars3</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 519px 875px #fff<span class="token punctuation">,</span> 1497px 751px #fff<span class="token punctuation">,</span> 1256px 88px #fff<span class="token punctuation">,</span> 1168px 1791px #fff<span class="token punctuation">,</span> 1884px 109px #fff<span class="token punctuation">,</span> 1465px 451px #fff<span class="token punctuation">,</span> 450px 370px #fff<span class="token punctuation">,</span> 1560px 703px #fff<span class="token punctuation">,</span> 1788px 1997px #fff<span class="token punctuation">,</span> 1047px 963px #fff<span class="token punctuation">,</span> 1281px 119px #fff<span class="token punctuation">,</span> 439px 96px #fff<span class="token punctuation">,</span> 164px 1956px #fff<span class="token punctuation">,</span> 1360px 930px #fff<span class="token punctuation">,</span> 1387px 347px #fff<span class="token punctuation">,</span> 1073px 1970px #fff<span class="token punctuation">,</span> 1296px 284px #fff<span class="token punctuation">,</span> 25px 1602px #fff<span class="token punctuation">,</span> 455px 944px #fff<span class="token punctuation">,</span> 1177px 738px #fff<span class="token punctuation">,</span> 633px 1142px #fff<span class="token punctuation">,</span> 1730px 1079px #fff<span class="token punctuation">,</span> 1283px 1606px #fff<span class="token punctuation">,</span> 674px 1186px #fff<span class="token punctuation">,</span> 513px 166px #fff<span class="token punctuation">,</span> 1077px 636px #fff<span class="token punctuation">,</span> 1811px 580px #fff<span class="token punctuation">,</span> 971px 1789px #fff<span class="token punctuation">,</span> 694px 1756px #fff<span class="token punctuation">,</span> 703px 1138px #fff<span class="token punctuation">,</span> 1290px 942px #fff<span class="token punctuation">,</span> 351px 1509px #fff<span class="token punctuation">,</span> 1904px 790px #fff<span class="token punctuation">,</span> 68px 819px #fff<span class="token punctuation">,</span> 1097px 362px #fff<span class="token punctuation">,</span> 1035px 331px #fff<span class="token punctuation">,</span> 180px 940px #fff<span class="token punctuation">,</span> 1776px 1229px #fff<span class="token punctuation">,</span> 1487px 781px #fff<span class="token punctuation">,</span> 1131px 1765px #fff<span class="token punctuation">,</span> 1684px 536px #fff<span class="token punctuation">,</span> 939px 367px #fff<span class="token punctuation">,</span> 1102px 1481px #fff<span class="token punctuation">,</span> 741px 887px #fff<span class="token punctuation">,</span> 167px 1132px #fff<span class="token punctuation">,</span> 1756px 529px #fff<span class="token punctuation">,</span> 608px 758px #fff<span class="token punctuation">,</span> 541px 1025px #fff<span class="token punctuation">,</span> 1976px 505px #fff<span class="token punctuation">,</span> 1349px 1257px #fff<span class="token punctuation">,</span> 815px 1388px #fff<span class="token punctuation">,</span> 505px 1351px #fff<span class="token punctuation">,</span> 33px 1945px #fff<span class="token punctuation">,</span> 861px 1695px #fff<span class="token punctuation">,</span> 678px 1360px #fff<span class="token punctuation">,</span> 1615px 727px #fff<span class="token punctuation">,</span> 1138px 726px #fff<span class="token punctuation">,</span> 30px 293px #fff<span class="token punctuation">,</span> 1624px 1044px #fff<span class="token punctuation">,</span> 683px 1242px #fff<span class="token punctuation">,</span> 1781px 1758px #fff<span class="token punctuation">,</span> 906px 1328px #fff<span class="token punctuation">,</span> 1066px 1764px #fff<span class="token punctuation">,</span> 1568px 664px #fff<span class="token punctuation">,</span> 1027px 1876px #fff<span class="token punctuation">,</span> 775px 1099px #fff<span class="token punctuation">,</span> 1605px 208px #fff<span class="token punctuation">,</span> 730px 837px #fff<span class="token punctuation">,</span> 1475px 1482px #fff<span class="token punctuation">,</span> 871px 1759px #fff<span class="token punctuation">,</span> 1240px 15px #fff<span class="token punctuation">,</span> 1987px 705px #fff<span class="token punctuation">,</span> 302px 1049px #fff<span class="token punctuation">,</span> 475px 1015px #fff<span class="token punctuation">,</span> 1843px 1296px #fff<span class="token punctuation">,</span> 493px 631px #fff<span class="token punctuation">,</span> 1613px 164px #fff<span class="token punctuation">,</span> 1863px 156px #fff<span class="token punctuation">,</span> 1479px 423px #fff<span class="token punctuation">,</span> 202px 1499px #fff<span class="token punctuation">,</span> 886px 969px #fff<span class="token punctuation">,</span> 904px 930px #fff<span class="token punctuation">,</span> 1853px 535px #fff<span class="token punctuation">,</span> 726px 914px #fff<span class="token punctuation">,</span> 435px 1205px #fff<span class="token punctuation">,</span> 1732px 1824px #fff<span class="token punctuation">,</span> 1212px 667px #fff<span class="token punctuation">,</span> 499px 31px #fff<span class="token punctuation">,</span> 552px 594px #fff<span class="token punctuation">,</span> 1715px 1814px #fff<span class="token punctuation">,</span> 775px 908px #fff<span class="token punctuation">,</span> 1949px 921px #fff<span class="token punctuation">,</span> 1267px 718px #fff<span class="token punctuation">,</span> 1830px 1960px #fff<span class="token punctuation">,</span> 338px 1325px #fff<span class="token punctuation">,</span> 466px 1120px #fff<span class="token punctuation">,</span> 140px 1675px #fff<span class="token punctuation">,</span> 1919px 664px #fff<span class="token punctuation">,</span> 1136px 771px #fff<span class="token punctuation">,</span> 1888px 1302px #fff<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> animStar 150s linear infinite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body.DarkMode #stars3:after</span> <span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 2000px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 519px 875px #fff<span class="token punctuation">,</span> 1497px 751px #fff<span class="token punctuation">,</span> 1256px 88px #fff<span class="token punctuation">,</span> 1168px 1791px #fff<span class="token punctuation">,</span> 1884px 109px #fff<span class="token punctuation">,</span> 1465px 451px #fff<span class="token punctuation">,</span> 450px 370px #fff<span class="token punctuation">,</span> 1560px 703px #fff<span class="token punctuation">,</span> 1788px 1997px #fff<span class="token punctuation">,</span> 1047px 963px #fff<span class="token punctuation">,</span> 1281px 119px #fff<span class="token punctuation">,</span> 439px 96px #fff<span class="token punctuation">,</span> 164px 1956px #fff<span class="token punctuation">,</span> 1360px 930px #fff<span class="token punctuation">,</span> 1387px 347px #fff<span class="token punctuation">,</span> 1073px 1970px #fff<span class="token punctuation">,</span> 1296px 284px #fff<span class="token punctuation">,</span> 25px 1602px #fff<span class="token punctuation">,</span> 455px 944px #fff<span class="token punctuation">,</span> 1177px 738px #fff<span class="token punctuation">,</span> 633px 1142px #fff<span class="token punctuation">,</span> 1730px 1079px #fff<span class="token punctuation">,</span> 1283px 1606px #fff<span class="token punctuation">,</span> 674px 1186px #fff<span class="token punctuation">,</span> 513px 166px #fff<span class="token punctuation">,</span> 1077px 636px #fff<span class="token punctuation">,</span> 1811px 580px #fff<span class="token punctuation">,</span> 971px 1789px #fff<span class="token punctuation">,</span> 694px 1756px #fff<span class="token punctuation">,</span> 703px 1138px #fff<span class="token punctuation">,</span> 1290px 942px #fff<span class="token punctuation">,</span> 351px 1509px #fff<span class="token punctuation">,</span> 1904px 790px #fff<span class="token punctuation">,</span> 68px 819px #fff<span class="token punctuation">,</span> 1097px 362px #fff<span class="token punctuation">,</span> 1035px 331px #fff<span class="token punctuation">,</span> 180px 940px #fff<span class="token punctuation">,</span> 1776px 1229px #fff<span class="token punctuation">,</span> 1487px 781px #fff<span class="token punctuation">,</span> 1131px 1765px #fff<span class="token punctuation">,</span> 1684px 536px #fff<span class="token punctuation">,</span> 939px 367px #fff<span class="token punctuation">,</span> 1102px 1481px #fff<span class="token punctuation">,</span> 741px 887px #fff<span class="token punctuation">,</span> 167px 1132px #fff<span class="token punctuation">,</span> 1756px 529px #fff<span class="token punctuation">,</span> 608px 758px #fff<span class="token punctuation">,</span> 541px 1025px #fff<span class="token punctuation">,</span> 1976px 505px #fff<span class="token punctuation">,</span> 1349px 1257px #fff<span class="token punctuation">,</span> 815px 1388px #fff<span class="token punctuation">,</span> 505px 1351px #fff<span class="token punctuation">,</span> 33px 1945px #fff<span class="token punctuation">,</span> 861px 1695px #fff<span class="token punctuation">,</span> 678px 1360px #fff<span class="token punctuation">,</span> 1615px 727px #fff<span class="token punctuation">,</span> 1138px 726px #fff<span class="token punctuation">,</span> 30px 293px #fff<span class="token punctuation">,</span> 1624px 1044px #fff<span class="token punctuation">,</span> 683px 1242px #fff<span class="token punctuation">,</span> 1781px 1758px #fff<span class="token punctuation">,</span> 906px 1328px #fff<span class="token punctuation">,</span> 1066px 1764px #fff<span class="token punctuation">,</span> 1568px 664px #fff<span class="token punctuation">,</span> 1027px 1876px #fff<span class="token punctuation">,</span> 775px 1099px #fff<span class="token punctuation">,</span> 1605px 208px #fff<span class="token punctuation">,</span> 730px 837px #fff<span class="token punctuation">,</span> 1475px 1482px #fff<span class="token punctuation">,</span> 871px 1759px #fff<span class="token punctuation">,</span> 1240px 15px #fff<span class="token punctuation">,</span> 1987px 705px #fff<span class="token punctuation">,</span> 302px 1049px #fff<span class="token punctuation">,</span> 475px 1015px #fff<span class="token punctuation">,</span> 1843px 1296px #fff<span class="token punctuation">,</span> 493px 631px #fff<span class="token punctuation">,</span> 1613px 164px #fff<span class="token punctuation">,</span> 1863px 156px #fff<span class="token punctuation">,</span> 1479px 423px #fff<span class="token punctuation">,</span> 202px 1499px #fff<span class="token punctuation">,</span> 886px 969px #fff<span class="token punctuation">,</span> 904px 930px #fff<span class="token punctuation">,</span> 1853px 535px #fff<span class="token punctuation">,</span> 726px 914px #fff<span class="token punctuation">,</span> 435px 1205px #fff<span class="token punctuation">,</span> 1732px 1824px #fff<span class="token punctuation">,</span> 1212px 667px #fff<span class="token punctuation">,</span> 499px 31px #fff<span class="token punctuation">,</span> 552px 594px #fff<span class="token punctuation">,</span> 1715px 1814px #fff<span class="token punctuation">,</span> 775px 908px #fff<span class="token punctuation">,</span> 1949px 921px #fff<span class="token punctuation">,</span> 1267px 718px #fff<span class="token punctuation">,</span> 1830px 1960px #fff<span class="token punctuation">,</span> 338px 1325px #fff<span class="token punctuation">,</span> 466px 1120px #fff<span class="token punctuation">,</span> 140px 1675px #fff<span class="token punctuation">,</span> 1919px 664px #fff<span class="token punctuation">,</span> 1136px 771px #fff<span class="token punctuation">,</span> 1888px 1302px #fff<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样黑夜模式算是真正完成了</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Matery 主题预加载</title>
      <link href="/2022/07/01/matery-zhu-ti-yu-jia-zai/"/>
      <url>/2022/07/01/matery-zhu-ti-yu-jia-zai/</url>
      
        <content type="html"><![CDATA[<p>在 Matery 主题配置文件 <code>_config.yml</code> 中新增配置属性 <code>preloader</code>。</p><pre class="line-numbers language-none"><code class="language-none"># 是否开启页面加载动画 true 开启，false 关闭preloader:  enable: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在 Matery 主题目录 <code>/layout/_widget</code> 下新增文件 <code>loading.ejs</code>，将以下内容写入 <code>loading.ejs</code>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>preloader<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"loading-box"</span><span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-left-bg"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-right-bg"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"spinner-box"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"configure-border-1"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"configure-core"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"configure-border-2"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"configure-core"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"loading-word"</span><span class="token operator">&gt;</span>加载中<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'auto'</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'loading-box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"loaded"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接着在 Matery 主题目录 <code>/css</code> 下新增 <code>loading.css</code> ，并将以下内容写入 <code>loading.css</code>。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#loading-box .loading-left-bg,#loading-box .loading-right-bg</span> <span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 1000<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #37474f<span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all 0.5s<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#loading-box .loading-right-bg</span> <span class="token punctuation">{</span>  <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#loading-box &gt; .spinner-box</span> <span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>  <span class="token property">z-index</span><span class="token punctuation">:</span> 1001<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#loading-box .spinner-box .configure-border-1</span> <span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 115px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 115px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ffab91<span class="token punctuation">;</span>  <span class="token property">animation</span><span class="token punctuation">:</span> configure-clockwise 3s ease-in-out 0s infinite alternate<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#loading-box .spinner-box .configure-border-2</span> <span class="token punctuation">{</span>  <span class="token property">left</span><span class="token punctuation">:</span> -115px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 115px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 115px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>63<span class="token punctuation">,</span> 249<span class="token punctuation">,</span> 220<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">animation</span><span class="token punctuation">:</span> configure-xclockwise 3s ease-in-out 0s infinite alternate<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#loading-box .spinner-box .loading-word</span> <span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 0.8rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#loading-box .spinner-box .configure-core</span> <span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #37474f<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div.loaded div.loading-left-bg</span> <span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-100%<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div.loaded div.loading-right-bg</span> <span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div.loaded div.spinner-box</span> <span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> configure-clockwise</span> <span class="token punctuation">{</span>  <span class="token selector">0%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">25%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">50%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">75%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>270deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">100%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> configure-xclockwise</span> <span class="token punctuation">{</span>  <span class="token selector">0%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">25%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-45deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">50%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-135deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">75%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-225deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">100%</span> <span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-315deg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后找到 Matery 主题目录 <code>/layout/_partial</code> 下找到 <code>head.ejs</code>，并在 <code>&lt;head&gt;</code> 标签中添加以下内容引入 <code>loading.css</code> 文件。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(<span class="token punctuation">'</span>/css/loading.css<span class="token punctuation">'</span>) %&gt;<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再找到 Matery 主题目录 <code>/layout</code> 下找到 <code>layout.ejs</code>，然后在 <code>&lt;body&gt;</code> 标签下引入 <code>loading.ejs</code>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_widget/loading'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里建议直接添加在 <code>&lt;body&gt;</code> 标签所有内容的最前面。</p><p>至此， Butterfly 的加载动画就移植到 Matery 主题完成了，只要主题配置文件的 <code>preloader</code> 的 <code>enable</code> 属性为 <code>true</code> 那么每个页面加载的时候，都会展示加载动画，如果将 <code>preloader</code> 的 <code>enable</code> 设置为 <code>false</code> 那么就可以关闭加载动画了。</p><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p> 如果用的是其他主题也可以参考这个思路，将加载动画代码块放到 <code>&lt;body&gt;</code> 标签中，将加载动画的 css 文件引入到页面的 <code>&lt;head&gt;</code> 中，然后再监听页面加载完成事件，页面加载完成后将加载动画隐藏就行了。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>雨、落在夏季</title>
      <link href="/2022/06/30/yu-luo-zai-xia-ji/"/>
      <url>/2022/06/30/yu-luo-zai-xia-ji/</url>
      
        <content type="html"><![CDATA[<p>重庆的雨不像苏北（南通）的雨那般轻柔，苏北的雨大多雷声大雨点小，我在苏北待两年，未曾见过像样的大雨，那雨跟个小姑凉似的，有时真如语文书里描写的细如牛毛，重庆的雨不然，特别是夏季，来的快去的也快，豆大的雨噼里啪啦打在青瓦上，顺着屋檐、沟渠溜到另外一个世界玩耍，人站在窗前，脑子里除了四面八方雨声，再无其他，心就不一样；六月天里一场雨再凉爽不过，无论肌肤感受如何，心就不一样；想罢这雨终究是落在夏季，没落在某些人的心里。<br>想来，苏北的雨跟浙江的雨倒是差不多，难怪称为江浙一带，重庆夏天的雨虽勇猛，但还是比不上首都的雨，还记得去北京遇到的那场雨，打着伞衣服裤子还是湿了一大半，被淋成落汤鸡后灰溜溜的的回到宾馆。<br>　　 那个时候还是高二，她还在我的世界，我们还一起去爬了长城。<br>　　昨天在家收拾东西，关于她的东西装两三个箱子，记起以前她说不知道怎么处理关于我的东西，我觉得大可不必烦恼，等到我自己时，既苦恼也难受，心想，这样一个女孩子就怎么退出我的世界呢？<br>　　 想不出结果，看了看窗外的雨，我对雨的理解还是不如她，她说“随风潜入夜，润物细无声”，所以她一直自称落雨，我呢，大多觉得雨来既愁来，阴郁便是属于雨天，正因如此，我才跑的远远的去上学，不过有得必有失，失去她不知是对还是错。<br>她的走，对我打击还没有到难以继续生活下去，因为我觉得对她有亏欠，直到我认识的一个自认为是知心朋友，也算是朋友之上，恋人未满的状态的好朋友退出我的世界时，对我打击挺大的，那天晚上很自然的熬夜，我1300多条说说那一晚就删完了，我找不到人倾诉，只有两个认得表姐，浅浅的说了一些，她一走，我就觉得我的世界得很空旷，遇见好玩的事、有想去的地方也没人想让我去去分享，随即发了最后一条，也是唯一一条说说，不过现在没了，圆润的0挺好，以前真爱发说说，天天发，有时两条、三条，现在不爱发也不想发，他们大多不爱文字，这一点从点赞的数量明显能明白，虽然这都是世俗之物，不该在意，但坚持这么些年也不曾觉得他们有多大变化，我也就放弃了，何必要让本不是一路的人看同一片大海呢。<br>　　唯有这雨，倒是很公平，但雨都分地域，何况其他呢，不过有规律可寻，雨是没有脚的，但人有，思想是无边无际、超越时空的，所以没啥事是不能释然的，人嘛，总要懂一点哲学和佛学，不然一辈子可就太难过了。<br>　　这雨，落在夏季，终有停的一刻；这人，活这一生，总有会去的一刻；是凉爽还是燥热，我看不关乎雨的事，也不关乎人，一切的一切，都是上天决定的，要骂，就骂玉皇大帝他老人家去吧，迟早要释然，迟早要往前走下去。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>我宁愿为你伤感</title>
      <link href="/2022/06/30/wo-ning-yuan-wei-ni-shang-gan/"/>
      <url>/2022/06/30/wo-ning-yuan-wei-ni-shang-gan/</url>
      
        <content type="html"><![CDATA[<p>想起你时不自觉地上扬了嘴角<br>        听到你的名字时忽然变得沉默<br>        独自一人时想你想到哭泣，却在看见你时故作无所谓地笑<br>        生命中有太多的美好与感动<br>        我宁愿为了你而失落伤感，甚至濒临崩溃<br>        我会在日记上写下大段大段曾经不属于我的失落伤感<br>        会在听到某句歌词那么贴切地唱出我的心声时失声痛哭<br>        会在看见电视剧某个片段而泪流不止<br>        会在夜里梦到你冷漠的表情，从夜里哭醒过来<br>        ……甚至更多更多<br>        感谢上天让我遇见了你，我觉得只要看见你就是一种幸福<br>        无数次说着要放弃，但终究还是舍不得<br>        浪费了青春错过了爱情，却依旧傻傻地守候，即使我知道不管等多久也不一定有结果</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>npm配置下载路径</title>
      <link href="/2022/06/30/npm-pei-zhi-xia-zai-lu-jing/"/>
      <url>/2022/06/30/npm-pei-zhi-xia-zai-lu-jing/</url>
      
        <content type="html"><![CDATA[<p>Nodejs 内置的npm默认会把模块安装在c盘的用户AppData目录下，下面操作如何更改npm 安装目录</p><p>使用cmd命令进行查看当前电脑的npm 安装路径。<br>输入 npm config ls</p><p>下面我们就开始配置自定义路径<br>首先在要保存的路径下创建两个文件夹：node_global_modules和node_cache</p><p>添加好目录后 执行以下代码：</p><p>npm config set prefix D:\developer_tools\nodejs\node_global_modules<br>npm config set cache D:\developer_tools\nodejs\node_cache<br>1<br>2<br>3.修改环境变量</p><p>新增环境变量 NODE_HOME，改成自己node.js的位置</p><p>我安装在：</p><p>D:\developer_tools\nodejs<br>1<br>在path上编辑文本，加入以下内容</p><p>;%NODE_HOME%;%NODE_HOME%\node_modules;%NODE_HOME%\node_global_modules;<br>1<br>或者path中追加</p><p>%NODE_HOME%;<br>%NODE_HOME%\node_modules;<br>%NODE_HOME%\node_global_modules;<br>1<br>2<br>3<br>4.测试，重新打开一个cmd命令行，安装一个插件试试，执行</p><p>npm install jquery -g // -g意思是安装到全局目录下<br>1<br>安装完毕后打开设置的安装路径看下是否成功<br>在你设置的目录node_global_modules 中出现<br>文件则表示设置成功：</p><p>原文链接：<a href="https://blog.csdn.net/Dreamboy_w/article/details/103492302">https://blog.csdn.net/Dreamboy_w/article/details/103492302</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="/2022/06/30/spring/"/>
      <url>/2022/06/30/spring/</url>
      
        <content type="html"><![CDATA[<h1 id="1、Spring"><a href="#1、Spring" class="headerlink" title="1、Spring"></a>1、Spring</h1><h2 id="1-1、简介"><a href="#1-1、简介" class="headerlink" title="1.1、简介"></a>1.1、简介</h2><ul><li>Spring：春天——&gt;给软件行业带来了春天！</li><li>2002,首次推出了Spring框架的雏形：interface21框架！</li><li>Spring框架即以interface21框架为基础,经过重新设计.并不断丰富其内涵,于2004年3月24日,发布了1.0正式版。</li><li>Rod Johnson，<a href="https://www.baike.com/wikiid/1833531085319913468?from=wiki_content&amp;prd=innerlink">Spring Framework</a>创始人，著名作者。很难想象Rod Johnson的学历，真的让好多人大吃一惊，他是悉尼大学的博士，然而他的专业不是计算机，而是音乐学。</li><li>spring理念：使现有的技术更加容易使用，本实施一个大杂烩，整合了现有的技术框架！</li><li>SSH：Struct2+Spring+Hibernate</li><li>SSM：SpringMvc+Spring+Mybatis</li></ul><p>官网：<a href="https://spring.io/projects/spring-framework#overview">https://spring.io/projects/spring-framework#overview</a></p><p>官网下载地址：<a href="https://repo.spring.io/release/org/springframework/spring">https://repo.spring.io/release/org/springframework/spring</a></p><p>GitHub:<a href="https://github.com/spring-projects/spring-framework">https://github.com/spring-projects/spring-framework</a></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--https://mvnrepository.com/artifact/org.springframework/spring-webmvc--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2、优点"><a href="#1-2、优点" class="headerlink" title="1.2、优点"></a>1.2、优点</h2><ul><li>Spring是一个开源的免费的框架（容器）！</li><li>Spring是一个轻量级的，非入侵式的框架！</li><li>控制反转（IOC），面向切面编程（AOP）！</li><li>支持事务的处理，对框架整合的支持！</li></ul><p>==总结一句话：Spring就是一个轻量级的控制反转（IOC）和面向切面编程（AOP）的框架！==</p><h2 id="1-3、组成"><a href="#1-3、组成" class="headerlink" title="1.3、组成"></a>1.3、组成</h2><p><img src="/images/1219227-20170930225010356-45057485.gif" alt="小敏"></p><h2 id="1-4、拓展"><a href="#1-4、拓展" class="headerlink" title="1.4、拓展"></a>1.4、拓展</h2><p>在Spring的官网有这个介绍：现代化的java开发！说白就是基于Spring开发！</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vd29fYmVsbC9QaWN0dXJlQmVkL3Jhdy9tYXN0ZXIvaW1hZ2UvMjAyMDA4MDEwMzA4MjAucG5n?x-oss-process=image/format,png" alt="小敏"></p><ul><li>Spring Boot<ul><li>一个快速开发的脚手架</li><li>基于SpringBoot可以快速的开发单个微服务</li><li>约定大于配置！</li></ul></li><li>Spring Cloud<ul><li>SpringCloud是基于SpringBoot实现的</li></ul></li></ul><p>因为现在大多数公司都在使用SpringBoot进行快速开发，学习SpringBoot的前提，需要完全掌握Spring及SpringMVC！承上启下的作用！</p><p><strong>弊端：发展了太久之后，违背了原来的历练理念！配置十分繁琐。人称：“配置地狱！”</strong></p><h1 id="2、IOC理论推导"><a href="#2、IOC理论推导" class="headerlink" title="2、IOC理论推导"></a>2、IOC理论推导</h1><p>1、userDao 接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.xiaomin.dao;/** * @author 解你忧 * @date 2022/04/03 9:57 * @product_namae spring * @product_namae IntelliJ IDEA */public interface userDao {  void getUser();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、userDaoImpl 实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.xiaomin.dao;/** * @author 解你忧 * @date 2022/04/03 9:58 * @product_namae spring * @product_namae IntelliJ IDEA */public class userDaoImpl implements userDao{  @Override  public void getUser() {    System.out.println("获取用户数据！");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、userService 业务接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.xiaomin.service;/** * @author 解你忧 * @date 2022/04/03 9:58 * @product_namae spring * @product_namae IntelliJ IDEA */public interface userService {  void getUser();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、userServiceImpl 业务实现类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.xiaomin.service;import com.xiaomin.dao.userDao;/** * @author 解你忧 * @date 2022/04/03 10:04 * @product_namae spring * @product_namae IntelliJ IDEA */public class userServiceImpl implements userService{  private userDao userDao;  //利用set进行动态实现值得注入！  public void setUserDao(userDao userDao) {    this.userDao = userDao;  }  @Override  public void getUser() {    userDao.getUser();  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在我们之前的业务中，用户的需求可能会影响我们原来的代码，我们需要根据用户的需求去修改源代码！如果代码量十分大，修改一次的成本代价十分昂贵！</p><p>我们使用一个Set接口实现，已经发生了革命性的变化！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">private userDao userDao;//利用set进行动态实现值得注入！public void setUserDao(userDao userDao) {  this.userDao = userDao;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>之前，程序员主动创建对象！控制权在程序员手上！</li><li>使用了set注入后，程序员不在具有主动性，而是变成了被动的接受对象！</li></ul><p>这种思想，从本质上解决了问题，我们程序员不用再去管理对象的创建了。系统的耦合性大大降低，可以更加专注的在业务的实现上！这是IOC的原型！<img src="/images/123.png" alt="小敏"></p><h2 id="IOC本质"><a href="#IOC本质" class="headerlink" title="IOC本质"></a>IOC本质</h2><p><strong>控制反转IoC(Inversion of Control)，是一种设计思想，DI(依赖注入)是实现IoC的一种方法</strong>，也有人认为DI只是IoC的另一种说法。没有IoC的程序中 , 我们使用面向对象编程 , 对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方，个人认为所谓控制反转就是：获得依赖对象的方式反转了。</p><p>采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</p><p><strong>控制反转是一种通过描述（XML或注解）并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器，其实现方法是依赖注入（Dependency Injection,DI）。</strong></p><h1 id="3、HelloSpring"><a href="#3、HelloSpring" class="headerlink" title="3、HelloSpring"></a>3、HelloSpring</h1><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Testpublic void test01() {  //获取Spring的上下文对象！  ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");  //我们的对象现在都在Spring中管理了，我们要使用，直接去里面取出来就可以！  hello hello =(hello) context.getBean("hello");  System.out.println(hello.toString());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到了现在，我们彻底不用再程序中去改动了，要实现不同操作，只需要在xml配置文件中进行修改，所谓的IoC，一句话搞定：对象由Spring来创建，管理，装配！</p><h1 id="4、IOC创建对象的方式"><a href="#4、IOC创建对象的方式" class="headerlink" title="4、IOC创建对象的方式"></a>4、IOC创建对象的方式</h1><p>1、使用无参构造创建对象，默认！</p><p>2、假设我们要使用有参构造创建对象。</p><pre><code>1、下标赋值</code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--第一种，下标赋值！--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>2、类型</code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--第二种方式：通过类型创建，不建议使用！--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>java.lang.String<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre><code>3、参数名</code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--第三种，直接通过参数名来设置--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏520<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>总结：在配置文件加载的时候，容器中管理的对象就已经初始化了！</p><h1 id="5、Spring配置"><a href="#5、Spring配置" class="headerlink" title="5、Spring配置"></a>5、Spring配置</h1><h2 id="5-1、别名"><a href="#5-1、别名" class="headerlink" title="5.1、别名"></a>5.1、别名</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--别名，如果添加了别名，我们也可以使用别名获取到这个对象--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alias</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xiaomin<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="5-2、Bean的配置"><a href="#5-2、Bean的配置" class="headerlink" title="5.2、Bean的配置"></a>5.2、Bean的配置</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--id：bean的唯一标识符,也就是相当于我们学过的对象名class：bean对象所对应的全限定名：包名+类名name：也是别名,而且name可以去多个别名，并且可以使用空格，逗号，分号进行分割--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userT<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.userT<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user2 u2,u3;u4<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-3、import"><a href="#5-3、import" class="headerlink" title="5.3、import"></a>5.3、import</h2><p>这个import，一般用于团队开发使用，它可以将多个配置文件，导入合并为一个</p><p>假设，现在项目中有多个人开发。这三个人复制不同的类开发，不同的类需要注册在不同的bean中，我们可以利用import将所有人的beans.xml合并为一个总的！</p><ul><li><p>张三</p></li><li><p>李四</p></li><li><p>王五</p></li><li><p>applicationContext.xml</p></li><li><p>```xml</p><import resource="beans.xml"><import resource="beans2.xml"><import resource="beans3.xml"><pre class="line-numbers language-none"><code class="language-none">    使用的时候，直接用总的配置就可以了# 6、依赖注入## 6.1、构造器注入第四点有提到## 6.2、set方式注入【重点】依赖注入：set注入！- 依赖：bean对象的创建依赖于容器- 注入：bean对象中的所有属性，由容器来注入【环境搭建】1. 复杂类型   Address类2. 真实测试对象   Student类3. beans.xml4. 测试   MyTest3student类```javapackage com.xiaomin.pojo;import java.util.*;/** * @author 解你忧 * @date 2022/04/05 19:59 * @product_namae spring * @product_namae IntelliJ IDEA */public class student {  private String name;  private address address;  private String[] books;  private List&lt;String&gt; hobbys;  private Map&lt;String,String&gt; card;  private Set&lt;String&gt; games;  private String wife;  private Properties info;  public String getName() {    return name;  }  public void setName(String name) {    this.name = name;  }  public com.xiaomin.pojo.address getAddress() {    return address;  }  public void setAddress(com.xiaomin.pojo.address address) {    this.address = address;  }  public String[] getBooks() {    return books;  }  public void setBooks(String[] books) {    this.books = books;  }  public List&lt;String&gt; getHobbys() {    return hobbys;  }  public void setHobbys(List&lt;String&gt; hobbys) {    this.hobbys = hobbys;  }  public Map&lt;String, String&gt; getCard() {    return card;  }  public void setCard(Map&lt;String, String&gt; card) {    this.card = card;  }  public Set&lt;String&gt; getGames() {    return games;  }  public void setGames(Set&lt;String&gt; games) {    this.games = games;  }  public String getWife() {    return wife;  }  public void setWife(String wife) {    this.wife = wife;  }  public Properties getInfo() {    return info;  }  public void setInfo(Properties info) {    this.info = info;  }  @Override  public String toString() {    return "student{" +      "name='" + name + '\'' +      ", address=" + address.toString() +      ", books=" + Arrays.toString(books) +      ", hobbys=" + hobbys +      ", card=" + card +      ", games=" + games +      ", wife='" + wife + '\'' +      ", info=" + info +      '}';  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></import></import></import></li></ul><p>address</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.xiaomin.pojo;/** * @author 解你忧 * @date 2022/04/05 19:59 * @product_namae spring * @product_namae IntelliJ IDEA */public class address {  private String address;  public String getAddress() {    return address;  }  public void setAddress(String address) {    this.address = address;  }  @Override  public String toString() {    return "address{" +      "address='" + address + '\'' +      '}';  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>beans.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                           https://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.address<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>四川<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>student<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.student<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--第一种，普通注入，value--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--第二种，Bean注入，ref--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--数组--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>books<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>array</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>《红楼梦》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>《西游记》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>《水浒传》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>《三国演义》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>array</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--List--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobbys<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>听歌<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>敲代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>看电影<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--Map--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>身份证<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>111111222222223333<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entry</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>银行卡<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6222561616516656165<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>entry</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--Set--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>games<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>LOL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>COC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>BOB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--null--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wife<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>null</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--Properties--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>props</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>学号<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>2005021215<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>性别<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prop</span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>姓名<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>小敏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prop</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>props</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>test</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Testpublic void test(){  ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");  student student =(student) context.getBean("student");  System.out.println(student.toString());}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-3、拓展注入"><a href="#6-3、拓展注入" class="headerlink" title="6.3、拓展注入"></a>6.3、拓展注入</h2><p>我们可以使用p命名空间和c命名空间进行注入<br>官方解释：<br><img src="/2022/06/30/spring/..%5Cimages%5Cimage-20220419205631532.png" alt="小敏"></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>p</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/p<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>c</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/c<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                           https://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--p命名空间注入，可以直接注入属性的值：property--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">p:</span>age</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!--p命名空间注入，可以通过构造器注入：constructs-args--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">c:</span>_0</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小艳<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">c:</span>_1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Testpublic void test2(){  ApplicationContext context = new ClassPathXmlApplicationContext("userbeans.xml");  user user = context.getBean("user", user.class);  System.out.println(user);  user user2 = context.getBean("user2", user.class);  System.out.println(user2);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意点：p命名和c命名空间不能直接使用，需要导入xml约束</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">xmlns:p="http://www.springframework.org/schema/p"xmlns:c="http://www.springframework.org/schema/c"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="6-4、bean的作用域"><a href="#6-4、bean的作用域" class="headerlink" title="6.4、bean的作用域"></a>6.4、bean的作用域<img src="/2022/06/30/spring/..%5Cimages%5Cimage-20220419214712904.png" alt="小敏"></h2><p>1.单例模式（Spring默认机制）</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">c:</span>_0</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小艳<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">c:</span>_1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>singleton<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.原型模式：每次从容器中get的时候，都会产生一个新的对象！</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user2<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.user<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">c:</span>_0</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小艳<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">c:</span>_1</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prototype<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.其余的request、session、application这些只能在web开发中使用到！</p><h1 id="7、Bean的自动装配"><a href="#7、Bean的自动装配" class="headerlink" title="7、Bean的自动装配"></a>7、Bean的自动装配</h1><ul><li>自动装配是Spring满足bean依赖一种方式</li><li>Spring会在上下文中自动寻找，并自动给bean装配属性！</li></ul><p>在Spring中有三种装配的方式</p><ol><li>在xml中显示的配置</li><li>在Java中显示的配置</li><li>隐式的自动装配bean【重要】</li></ol><h2 id="7-1、测试"><a href="#7-1、测试" class="headerlink" title="7.1、测试"></a>7.1、测试</h2><p>环境搭建：一个人有两个宠物</p><h2 id="7-2、ByName自动装配"><a href="#7-2、ByName自动装配" class="headerlink" title="7.2、ByName自动装配"></a>7.2、ByName自动装配</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--    byName：会自动在容器上下文中查找，和自己对象set方法后面的值对应的beanid！--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>people<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.People<span class="token punctuation">"</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>byName<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-3、ByType自动装配"><a href="#7-3、ByType自动装配" class="headerlink" title="7.3、ByType自动装配"></a>7.3、ByType自动装配</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.Cat<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.Dog<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--byName：会自动在容器上下文中查找，和自己对象set方法后面的值对应的beanid！byType：会自动在容器上下文中查找，和自己对象属性类型相同的beanid！注意：byType 所需类型必须全局唯一，可以连id都不需要--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>people<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo.People<span class="token punctuation">"</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>byType<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小敏<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>小结：</p><ul><li>byname的时候，需要保证所有的bean的id唯一，并且这个bean需要和自动注入属性的set方法的值一致！</li><li>bytype的时候，需要保证所有有的bean的class唯一，并且这个bean需要和自动注入的属性的类型一致！</li></ul><h2 id="7-4、使用注解实现自动装配"><a href="#7-4、使用注解实现自动装配" class="headerlink" title="7.4、使用注解实现自动装配"></a>7.4、使用注解实现自动装配</h2><p>jdk1.5支持的注解，Spring2.5就支持注解了！</p><p>The introduction of annotation-based configuration raised the question of whether this approach is “better” than XML.<br>要使用注解须知：</p><ol><li><p>导入约束。context约束</p></li><li><p>==配置注解的支持：context:annotation-config/==</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                           https://www.springframework.org/schema/beans/spring-beans.xsd                           http://www.springframework.org/schema/context                           https://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>annotation-config</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>@Autowired</strong></p><p>直接在属性上使用即可！也可以在set方法上使用！</p><p>使用Autowired 我们可以不用编写Set方法了，前提是你这个自动装配的属性在IOC（Spring）容器中存在，且符合名字byname！</p><p>科普：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">@Nullable字段标记了这个注解，说明这个字段可以为null；<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">public @interface Autowired {  boolean required() default true;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>测试代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">//如果显示定义了Autowired的required属性为false，说明这个对象可以为null，否则不允许为空@Autowired(required = false)private Cat cat;@Autowiredprivate Dog dog;private String name;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>如果@Autowired自动装配的环境比较复杂，自动装配无法通过一个注解【@Autowired】完成的时候、我们可以使用@Qualifier(value=“xxx”)去配合@Autowired的使用，指定一个唯一的bean对象注入！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class People {  @Autowired  private Cat cat;  @Autowired  @Qualifier(value = "dog22")  private Dog dog;  private String name;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>@Resource注解</strong>  （我的jdk没有@Resource）</p><p><img src="/2022/06/30/spring/..%5Cimages%5Cimage-20220423124359687.png" alt="小敏"></p><p>小结：</p><p>@Resource和@Autowired的区别：</p><ul><li>都是用来自动装配的，都可以放在属性字段上</li><li>@Autowired 通过byType的方式实现，而且必须要求这个对象存在！【常用】</li><li>@Resource默认通过byname的方式实现，如果找不到名字，则通过byType实现！如果两个都找不到的情况下，就报错！【常用】</li><li>执行顺序不同：@Autowired 通过byType的方式实现。@Resource默认通过byname的方式实现。</li></ul><h1 id="8、使用注解开发"><a href="#8、使用注解开发" class="headerlink" title="8、使用注解开发"></a>8、使用注解开发</h1><p>在Spring4之后，要使用注解开发，必须要保证aop的包导入了<img src="/2022/06/30/spring/..%5Cimages%5Cimage-20220423140236926.png" alt="小敏"></p><p>使用注解需要导入context约束，增加注解的支持！</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                           https://www.springframework.org/schema/beans/spring-beans.xsd                           http://www.springframework.org/schema/context                           https://www.springframework.org/schema/context/spring-context.xsd<span class="token punctuation">"</span></span>       <span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>annotation-config</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>bean</p></li><li><p>属性如何注入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Componentpublic class User {  //相当于&lt;property name="name" value="小敏"/&gt;  @Value("小敏")  public String name;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>衍生的注解</p><p>@Component有几个衍生注解，我们在web开发中，会按照mvc三层架构分层！</p><ul><li><p>dao【@Repository】</p></li><li><p>service【@Service】</p></li><li><p>controller【@Controller】</p><p>这四个注解功能都是一样的。都是代表将某个类注册到Spring中，装配Bean</p></li></ul></li><li><p>自动装配</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Autowired：自动装配通过类型，名字  如果Autowired不能唯一自动装配上属性，则需要通过@Qualifier("xxx")  @Nullable字段标记了这个注解，说明这个字段可以为null；  @Resource：自动装配通过名字，类型。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>作用域</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Component@Scope("prototype")public class User {  //相当于&lt;property name="name" value="小敏"/&gt;  @Value("小敏")  public String name;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>小结</p><p>xml与注解：</p><ul><li>xml更加万能，适用于任何场合！维护简单方便</li><li>注解不是自己类使用不了，维护相对复杂！</li></ul><p>xml与注解最佳实践</p><ul><li><p>xml用来管理bean；</p></li><li><p>注解只负责完成属性的注入；</p></li><li><p>我们在使用的过程中，只需要注意一个问题：必须让注解生效，就需要开启注解的支持</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">&lt;!--指定要扫描的包，这个包下的注解就会生效--&gt;  &lt;context:component-scan base-package="com.xiaomin"/&gt;    &lt;context:annotation-config/&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h1 id="9、使用java的方式配置Spring"><a href="#9、使用java的方式配置Spring" class="headerlink" title="9、使用java的方式配置Spring"></a>9、使用java的方式配置Spring</h1><p>我们现在要完全不使用Spring的xml配置了，全权交给Java来做！</p><p>JavaConfig是Spring的一个子项目，在Spring4之后，它成为了一个核心功能！</p><p><img src="/2022/06/30/spring/..%5Cimages%5Cformat,png.png" alt="小敏"></p><p>实体类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">//这里这个注解的意思，就是说明这个类被Spring接管了，注册到了容器中@Componentpublic class User {  @Value("小敏")//属性注入值  private String name;  public String getName() {    return name;  }  public void setName(String name) {    this.name = name;  }  @Override  public String toString() {    return "User{" +      "name='" + name + '\'' +      '}';  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置文件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">package com.xiaomin.config;import com.xiaomin.pojo.User;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.Import;// 这个也会被Spring容器托管，注册到容器中，因为他本来就是一个@Component// @Configuration代表这是一个配置类，就和我们之前看的beans.xml是一样的@Configuration@ComponentScan("com.xiaomin.pojo")@Import(MinConfig2.class)public class MinConfig {  //注册一个bean，就相当于我们之前写的一个bean标签  //这个方法的名字，就相当于bean标签中的id属性  //这个方法的返回值，就相当于bean标签中的class属性  @Bean("user")//可指定可不指定  public User getUser(){    return new User();//就是返回要注入到bean的对象！  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试类！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class MyTest {  public static void main(String[] args) {    //如果完全使用了配置类方式去做，我们就只能通过AnnotationConfig上下文来获取容器，通过配置类的class对象加载！    ApplicationContext context = new AnnotationConfigApplicationContext(MinConfig.class);    User getUser = (User) context.getBean("user");    System.out.println(getUser.getName());  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种纯Java的配置方式，在SpringBoot中随处可见！</p><h1 id="10、代理模式"><a href="#10、代理模式" class="headerlink" title="10、代理模式"></a>10、代理模式</h1><p>中介：为什么要学习代理模式？因为这就是SpringAOP的底层！【SpringAOP 和 SpringMVC】</p><p>代理模式的分类：</p><ul><li>静态代理</li><li>动态代理<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vd29fYmVsbC9QaWN0dXJlQmVkL3Jhdy9tYXN0ZXIvaW1hZ2UvaW1hZ2UtMjAyMDA4MDMxMDE0Mjc4NDYucG5n?x-oss-process=image/format,png" alt="image-20200803101427846"></li></ul><h2 id="10-1、静态代理"><a href="#10-1、静态代理" class="headerlink" title="10.1、静态代理"></a>10.1、静态代理</h2><p>角色分析：</p><ul><li>抽象角色：一般会使用接口或者抽象类来解决</li><li>真实角色：被代理的角色</li><li>代理角色：代理真实角色，代理真实角色后，我们一般会做一些附属操作</li><li>客户：访问代理对象的人！</li></ul><p>代码步骤：</p><ol><li><p>接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">//租房public interface Rent {  public void rent();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>真实角色</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">//房东public class Host implements Rent{  @Override  public void rent() {    System.out.println("房东要出租房子");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>代理角色</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Data@NoArgsConstructor@AllArgsConstructorpublic class Proxy implements Rent {  private Host host;  @Override  public void rent() {    seeHouse();    host.rent();    hetong();    fare();  }  //看房  public void seeHouse(){    System.out.println("中介带你看房");  }  //签合同  public void hetong(){    System.out.println("签租赁合同");  }  //收中介费  public void fare(){    System.out.println("收中介费");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>客户端访问代理角色</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class Client {  public static void main(String[] args) {    //房东要租房子    Host host=new Host();    //代理，中介帮房东租房子，但是呢？代理角色一般会有附属操作    Proxy proxy = new Proxy(host);    //你不用面对房东，直接找中介租房即可    proxy.rent();  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>代理模式的好处：</p><ul><li>可以使真实角色的操作更加纯粹！</li><li>公共业务就交给代理角色！实现了业务的分工！</li><li>公共业务发生扩展的时候，方便集中管理！</li></ul><p>缺点：</p><ul><li>一个真实角色就会产生一个代理角色；代码量会翻倍<del>开发效率会变低</del></li></ul><h2 id="10-2、加深理解"><a href="#10-2、加深理解" class="headerlink" title="10.2、加深理解"></a>10.2、加深理解</h2><ol><li><p>UserService</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public interface UserService {  public void add();  public void delete();  public void update();  public void query();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>UserServiceImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class UserServiceImpl implements UserService{  @Override  public void add() {    System.out.println("增加了一个用户");  }  @Override  public void delete() {    System.out.println("删除了一个用户");  }  @Override  public void update() {    System.out.println("修改了一个用户");  }  @Override  public void query() {    System.out.println("查询了一个用户");  }  //1.改动原有的业务代码，在公司中是大忌！}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>UserServiceProxy</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class UserServiceProxy implements UserService{  private UserService userService;  public void setUserService(UserService userService) {    this.userService = userService;  }  @Override  public void add() {    log("add");    userService.add();  }  @Override  public void delete() {    log("delete");    userService.delete();  }  @Override  public void update() {    log("update");    userService.update();  }  @Override  public void query() {    log("query");    userService.query();  }  //日志方法  public void log(String msg){    System.out.println("[Debug]使用了"+msg+"方法");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Client</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class Client {  public static void main(String[] args) {    UserService userService=new UserServiceImpl();    UserServiceProxy userServiceProxy=new UserServiceProxy();    userServiceProxy.setUserService(userService);    userServiceProxy.add();  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>聊聊AOP</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vd29fYmVsbC9QaWN0dXJlQmVkL3Jhdy9tYXN0ZXIvaW1hZ2UvaW1hZ2UtMjAyMDA4MDMxMTE1Mzk2MjEucG5n?x-oss-process=image/format,png" alt="小敏"></p><h2 id="10-3、动态代理"><a href="#10-3、动态代理" class="headerlink" title="10.3、动态代理"></a>10.3、动态代理</h2><ul><li>动态代理和静态代理角色一样</li><li>动态代理的代理类是动态生成的，不是我们直接写好的！</li><li>动态代理分为两大类：基于接口的动态代理，基于类的动态代理<ul><li>基于接口 ··· JDK动态代理【我们在这里使用】</li><li>基于：cglib</li><li>java字节码实现：javassist</li></ul></li></ul><p>需要了解两个类：Proxy：代理，InvocationHandler：调用处理程序</p><p>动态代理的好处：</p><ul><li>可以使真实角色的操作更加纯粹！</li><li>公共业务就交给代理角色！实现了业务的分工！</li><li>公共业务发生扩展的时候，方便集中管理！</li><li>一个动态代理类代理的是一个接口，一般都是对应的一类业务</li><li>一个动态代理类可以代理多个类，只要是实现了同一个接口即可！</li></ul><h1 id="11、AOP"><a href="#11、AOP" class="headerlink" title="11、AOP"></a>11、AOP</h1><h2 id="11-1、什么是AOP"><a href="#11-1、什么是AOP" class="headerlink" title="11.1、什么是AOP"></a>11.1、什么是AOP</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vd29fYmVsbC9QaWN0dXJlQmVkL3Jhdy9tYXN0ZXIvaW1hZ2UvaW1hZ2UtMjAyMDA4MDMxMzQ1MDIxNjklMjAtJTIwQU9QLnBuZw?x-oss-process=image/format,png" alt="image-20200803134502169"></p><p><img src="https://s1.ax1x.com/2020/08/28/dIUZkV.png" alt="dIUZkV.png"></p><h2 id="11-2、AOP在Spring中的使用"><a href="#11-2、AOP在Spring中的使用" class="headerlink" title="11.2、AOP在Spring中的使用"></a>11.2、AOP在Spring中的使用</h2><p>==提供声明式事务，允许用户自定义切面==</p><ul><li>横切关注点：跨越应用程序多个模块的方法或功能。即是，与我们业务逻辑无关的，但是我们需要关注的部分，就是横切关注点。如日志，安全，缓存，事务等等…</li><li>切面(Aspect)：横切关注点 被模块化的特殊对象。即，它是一个类。（Log类）</li><li>通知(Advice)：切面必须要完成的工作。即，它是类中的一个方法。（Log类中的方法）</li><li>目标(Target)：被通知对象。（生成的代理类)</li><li>代理(Proxy)：向目标对象应用通知之后创建的对象。（生成的代理类）</li><li>切入点(PointCut)：切面通知执行的”地点”的定义。（最后两点：在哪个地方执行，比如：method.invoke()）</li><li>连接点(JointPoint)：与切入点匹配的执行点。</li></ul><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vd29fYmVsbC9QaWN0dXJlQmVkL3Jhdy9tYXN0ZXIvaW1hZ2UvaW1hZ2UtMjAyMDA4MDMxNTQwNDM5MDkucG5n?x-oss-process=image/format,png" alt="image-20200803154043909"><br>SpringAOP中，通过Advice定义横切逻辑，Spring中支持5种类型的Advice:</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9naXRlZS5jb20vd29fYmVsbC9QaWN0dXJlQmVkL3Jhdy9tYXN0ZXIvaW1hZ2UvaW1hZ2UtMjAyMDA4MDMxMzU5Mzc0MzUucG5n?x-oss-process=image/format,png" alt="image-20200803135937435"><br><strong>即AOP在不改变原有代码的情况下，去增加新的功能。</strong>（代理)</p><h2 id="11-3、使用Spring实现AOP"><a href="#11-3、使用Spring实现AOP" class="headerlink" title="11.3、使用Spring实现AOP"></a>11.3、使用Spring实现AOP</h2><p>【重点】使用AOP织入，需要导入一个依赖包！</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.9.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方式一：使用Spring的API接口【主要SpringAPI接口实现】</p><p>applicationContext.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--方式一：使用原生Spring API接口--&gt;</span>配置aop：需要导入aop的约束<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--切入点：expression:表达式，execution(要执行的位置！* * * * *)--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>pointcut</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointcut<span class="token punctuation">"</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>execution(* com.xiaomin.service.UserServiceImpl.*(..))<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!--执行环绕增加！--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>advisor</span> <span class="token attr-name">advice-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>log<span class="token punctuation">"</span></span> <span class="token attr-name">pointcut-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointcut<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>advisor</span> <span class="token attr-name">advice-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>afterLog<span class="token punctuation">"</span></span> <span class="token attr-name">pointcut-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pointcut<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Log.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class Log implements MethodBeforeAdvice {  //method：要执行的目标对象的方法  //object：参数  //target：目标对象  @Override  public void before(Method method, Object[] args, Object target) throws Throwable {    System.out.println(target.getClass().getName()+"的"+method.getName()+"被执行了");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AfterLog.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class AfterLog implements AfterReturningAdvice {  //returnValue：返回值  @Override  public void afterReturning(Object returnValue, Method method, Object[] args, Object target) throws Throwable {    System.out.println("执行了"+method.getName()+"方法，返回结果为："+returnValue);  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方式二：自定义来实现AOP【主要是切面定义】</p><p>applicationContext.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--方式二：自定义类--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>diy<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.diy.DiyPointCut<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--自定义切面，ref要引用的类--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspect</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>diy<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--切入点--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>pointcut</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>point<span class="token punctuation">"</span></span> <span class="token attr-name">expression</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>execution(* com.xiaomin.service.UserServiceImpl.*(..))<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>before</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>before<span class="token punctuation">"</span></span> <span class="token attr-name">pointcut-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>point<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>after</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>after<span class="token punctuation">"</span></span> <span class="token attr-name">pointcut-ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>point<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--通知--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>aspect</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">aop:</span>config</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>DiyPointCut.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class DiyPointCut {  public void before(){    System.out.println("=========方法执行前=========");  }  public void after(){    System.out.println("=========方法执行后=========");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方式三：使用注解实现</p><p>applicationContext.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--方式三--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>annotationPointCut<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.diy.AnnotationPointCut<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--开启注解支持!    JDK(默认：proxy-target-class="false")    cglib(proxy-target-class="true")--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">aop:</span>aspectj-autoproxy</span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>AnnotationPointCut.java</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">//方式三：使用注解方式实现AOP@Aspect //标注这个类是一个切面public class AnnotationPointCut {  @Before("execution(* com.xiaomin.service.UserServiceImpl.*(..))")  public void before(){    System.out.println("=====方法执行前=====");  }  @After("execution(* com.xiaomin.service.UserServiceImpl.*(..))")  public void after(){    System.out.println("=====方法执行后=====");  }  //在环绕增强中，我们可以给定一个参数，代表我们要获取处理切入的点  @Around("execution(* com.xiaomin.service.UserServiceImpl.*(..))")  public void around(ProceedingJoinPoint jp) throws Throwable {    System.out.println("环绕前");    Signature signature = jp.getSignature();//获得签名    System.out.println("signature:"+signature);    Object proceed = jp.proceed();//执行方法    System.out.println(proceed);    System.out.println("环绕后");  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="12、整合Mybatis"><a href="#12、整合Mybatis" class="headerlink" title="12、整合Mybatis"></a>12、整合Mybatis</h1><p>步骤：</p><ol><li>导入相关jar包<ul><li>junit</li><li>mybatis</li><li>mysql数据库</li><li>spring相关的</li><li>aop注入</li><li>mybatis-spring【new】</li></ul></li><li>编写配置文件</li><li>测试</li></ol><h2 id="12-1、回忆mybatis"><a href="#12-1、回忆mybatis" class="headerlink" title="12.1、回忆mybatis"></a>12.1、回忆mybatis</h2><ol><li>编写实体类</li><li>编写核心配置文件</li><li>编写接口</li><li>编写Mapper.xml</li><li>测试</li></ol><p>实例：</p><ol><li>导入相关的jar，pom.xml</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>xiaomin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-10-mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token comment">&lt;!--&lt;version&gt;5.1.47&lt;/version&gt;--&gt;</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.19<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--Spring操作数据库的话，需要一个spring-jdbc--&gt;</span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.9.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--在build中配置resources，来防止资源导出失败的问题--&gt;</span>  <span class="token comment">&lt;!-- Maven解决静态资源过滤问题 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--&lt;filtering&gt;false&lt;/filtering&gt;--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--&lt;filtering&gt;true&lt;/filtering&gt;--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>编写实体类，User.java</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Datapublic class User {  private int id;  private String name;  private String password;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>编写核心配置文件，resources/mybatis-config.xml</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--configuration 核心配置文件--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--开启日志--&gt;</span>  <span class="token comment">&lt;!--&lt;settings&gt;        &lt;setting name="logImpl" value="STDOUT_LOGGING" /&gt;    &lt;/settings&gt;--&gt;</span>  <span class="token comment">&lt;!--可以给实体类起别名 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--environments 可配置多个环境--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--多个环境，不同id--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>development<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>      <span class="token comment">&lt;!--事务管理--&gt;</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JDBC<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POOLED<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--&lt;property name="driver" value="com.mysql.jdbc.Driver"/&gt;--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driver<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/software2032?useSSL=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=utf8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>serverTimezone=GMT%2B8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>autoReconnect=true<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>你自己的用户名<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>你自己的密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--每一个Mapper.xml都需要在MyBatis核心配置文件中注册！！！--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--&lt;mapper resource="com/xiaomin/mapper/UserMapper.xml"/&gt;--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>编写接口，UserMapper.xml</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class UserMapperImpl implements UserMapper {  //我们的所有操作，在原来都使用sqlSession来执行，现在都使用SqlSessionTemplate；  private SqlSessionTemplate sqlSession;  public void setSqlSession(SqlSessionTemplate sqlSession) {    this.sqlSession = sqlSession;  }  @Override  public List&lt;User&gt; selectUser() {    UserMapper userMapper = sqlSession.getMapper(UserMapper.class);    return userMapper.selectUser();  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>编写接口配置文件，UserMapper.xml</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config  3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectUser<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select * from user  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>测试，test/java/MyTest.java</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class MyTest {  @Test  public void test() throws IOException {    String resource = "mybatis-config.xml";    InputStream inputStream = Resources.getResourceAsStream(resource);    SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);    SqlSession sqlSession = sqlSessionFactory.openSession(true);    UserMapper mapper = sqlSession.getMapper(UserMapper.class);    List&lt;User&gt; userList = mapper.selectUser();    for (User user : userList) {      System.out.println(user);    }  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-2、Mybatis-spring"><a href="#12-2、Mybatis-spring" class="headerlink" title="12.2、Mybatis-spring"></a>12.2、Mybatis-spring</h2><ol><li>编写数据源配置</li><li>sqlSessionFactory</li><li>sqlSessionTemplate（相当于sqISession）</li><li>需要给接口加实现类【】</li><li>将自己写的实现类注入到Spring中</li><li>测试使用即可</li></ol><p><strong>数据源：</strong></p><ul><li>DataSource：使用Spring的数帮源替换Mybatis的配置</li><li>这使用Spring提供的JDBC：org.springframework.jdbc.datasource</li><li>其他数据源：c3p0、dbcp、druid</li></ul><p><strong>【核心对象】：</strong></p><ul><li><code>sqISessionFactory</code></li></ul><blockquote><p>在基础的 MyBatis 用法中，是通过 <code>SqlSessionFactoryBuilder</code> 来创建 <code>SqlSessionFactory</code> 的。 而在 MyBatis-Spring 中，则使用 <code>SqlSessionFactoryBean</code> 来创建。</p><p>文档：<a href="http://mybatis.org/spring/zh/factorybean.html">http://mybatis.org/spring/zh/factorybean.html</a></p></blockquote><ul><li><code>sqISessionTemplate</code></li></ul><blockquote><p><code>SqlSessionTemplate</code> 是 MyBatis-Spring 的核心。作为 <code>SqlSession</code> 的一个实现，这意味着可以使用它无缝代替你代码中已经在使用的 <code>SqlSession</code>。<code>SqlSessionTemplate</code> 是线程安全的，可以被多个 DAO 或映射器所共享使用。</p><p>当调用 SQL 方法时（包括由 <code>getMapper()</code> 方法返回的映射器中的方法），<code>SqlSessionTemplate</code> 将会保证使用的 <code>SqlSession</code> 与当前 Spring 的事务相关。此外，它管理 session 的生命周期，包含必要的关闭、提交或回滚操作。另外，它也负责将 MyBatis 的异常翻译成 Spring 中的 <code>DataAccessExceptions</code>。</p><p>由于模板可以参与到 Spring 的事务管理中，并且由于其是线程安全的，可以供多个映射器类使用，你应该<strong>总是</strong>用 <code>SqlSessionTemplate</code> 来替换 MyBatis 默认的 <code>DefaultSqlSession</code> 实现。在同一应用程序中的不同类之间混杂使用可能会引起数据一致性的问题。</p><p>可以使用 <code>SqlSessionFactory</code> 作为构造方法的参数来创建 <code>SqlSessionTemplate</code> 对象。</p><p>文档：<a href="http://mybatis.org/spring/zh/sqlsession.html">http://mybatis.org/spring/zh/sqlsession.html</a></p></blockquote><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--sqlSessionFactory--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!--绑定 Mybatis 配置文件--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:mybatis-config.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mapperLocations<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:com/xiaomin/mapper/*.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- sqlSessionTemplate 就是之前使用的：sqlsession --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSession<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionTemplate<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- 只能使用构造器注入sqlSessionFactory 原因：它没有set方法--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先导入jar包</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>xiaomin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-10-mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token comment">&lt;!--&lt;version&gt;5.1.47&lt;/version&gt;--&gt;</span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.0.19<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--Spring操作数据库的话，需要一个spring-jdbc--&gt;</span>    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.9.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--在build中配置resources，来防止资源导出失败的问题--&gt;</span>  <span class="token comment">&lt;!-- Maven解决静态资源过滤问题 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--&lt;filtering&gt;false&lt;/filtering&gt;--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--&lt;filtering&gt;true&lt;/filtering&gt;--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filtering</span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filtering</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编写顺序：</strong></p><p><em>User -&gt; UserMapper -&gt; UserMapper.xml -&gt; spring-dao.xml -&gt; UserServiceImpl -&gt; applicationContext.xml -&gt; MyTest6</em></p><p>代码步骤：</p><p>pojo实体类 User</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">@Datapublic class User {  private int id;  private String name;  private String password;  //Lombok生成的在我这里相当于没用，必须重写toString方法，否则输出的是地址  @Override  public String toString() {    return "User(" +      "id:" + id +      ", name:'" + name + '\'' +      ", password:'" + password + '\'' +      ')';  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接口UserMapper</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public interface UserMapper {  public List&lt;User&gt; selectUser();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>UserMapperImpl</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class UserMapperImpl implements UserMapper {  //我们的所有操作，在原来都使用sqlSession来执行，现在都使用SqlSessionTemplate；  private SqlSessionTemplate sqlSession;  public void setSqlSession(SqlSessionTemplate sqlSession) {    this.sqlSession = sqlSession;  }  @Override  public List&lt;User&gt; selectUser() {    UserMapper userMapper = sqlSession.getMapper(UserMapper.class);    return userMapper.selectUser();  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UserMapper.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config  3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.mapper.UserMapper<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectUser<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    select * from user  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mybatis-config.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD Config 3.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--configuration 核心配置文件--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--开启日志--&gt;</span>  <span class="token comment">&lt;!--&lt;settings&gt;        &lt;setting name="logImpl" value="STDOUT_LOGGING" /&gt;    &lt;/settings&gt;--&gt;</span>  <span class="token comment">&lt;!--可以给实体类起别名 --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.pojo<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--environments 可配置多个环境--&gt;</span>  <span class="token comment">&lt;!--配置了Spring-Dao.xml后，这块可以直接注释掉了：dataSource    &lt;environments default="development"&gt;        &amp;lt;!&amp;ndash;多个环境，不同id&amp;ndash;&amp;gt;        &lt;environment id="development"&gt;            &amp;lt;!&amp;ndash;事务管理&amp;ndash;&amp;gt;            &lt;transactionManager type="JDBC"/&gt;            &lt;dataSource type="POOLED"&gt;                &amp;lt;!&amp;ndash;&lt;property name="driver" value="com.mysql.jdbc.Driver"/&gt;&amp;ndash;&amp;gt;                &lt;property name="driver" value="com.mysql.cj.jdbc.Driver"/&gt;                &lt;property name="url" value="jdbc:mysql://localhost:3306/software2032?useSSL=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;serverTimezone=GMT%2B8&amp;amp;autoReconnect=true"/&gt;                &lt;property name="username" value="XiaoMin"/&gt;                &lt;property name="password" value="990421lm"/&gt;            &lt;/dataSource&gt;        &lt;/environment&gt;    &lt;/environments&gt;--&gt;</span>  <span class="token comment">&lt;!--每一个Mapper.xml都需要在MyBatis核心配置文件中注册！！！--&gt;</span>  <span class="token comment">&lt;!-- 配置了Spring-Dao.xml后，这块可以直接注释掉了：绑定Mybatis配置文件    &lt;mappers&gt;        &lt;mapper class="com.xiaomin.mapper.UserMapper"/&gt;        &amp;lt;!&amp;ndash;&lt;mapper resource="com/xiaomin/mapper/UserMapper.xml"/&gt;&amp;ndash;&amp;gt;    &lt;/mappers&gt;--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>spring-dao.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                           https://www.springframework.org/schema/beans/spring-beans.xsd                           http://www.springframework.org/schema/context                           https://www.springframework.org/schema/context/spring-context.xsd                           http://www.springframework.org/schema/aop                           https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span>       <span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--DataSource:使用Spring的数帮源替换Mybatis的配置 其他数据源：c3p0、dbcp、druid        这使用Spring提供的JDBC: org.springframework.jdbc.datasource --&gt;</span>  <span class="token comment">&lt;!--dataSource --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.jdbc.datasource.DriverManagerDataSource<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>driverClassName<span class="token punctuation">"</span></span>              <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--后面那片段必须加上，否则报错：The server time zone value '�й���׼ʱ��' is unrecognized or        represents more than one time zone--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/software2032?                                useSSL=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=UTF-8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>                                serverTimezone=GMT%2B8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>autoReconnect=true<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>XiaoMin<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>990421lm<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--sqlSessionFactory--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionFactoryBean<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dataSource<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token comment">&lt;!--绑定 Mybatis 配置文件--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>configLocation<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:mybatis-config.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mapperLocations<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:com/xiaomin/mapper/*.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- sqlSessionTemplate 就是之前使用的：sqlsession --&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSession<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.mybatis.spring.SqlSessionTemplate<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 只能使用构造器注入sqlSessionFactory 原因：它没有set方法--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSessionFactory<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>applicationContext.xml</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/context<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/aop<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans                           https://www.springframework.org/schema/beans/spring-beans.xsd                           http://www.springframework.org/schema/context                           https://www.springframework.org/schema/context/spring-context.xsd                           http://www.springframework.org/schema/aop                           https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">"</span></span>       <span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!--导入其他配置文件--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spring-dao.xml<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token comment">&lt;!--&lt;import resource="spring-mvc.xml"/&gt;--&gt;</span>  <span class="token comment">&lt;!--mybatis-spring 方式1--&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userMapper<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.xiaomin.mapper.UserMapperImpl<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSession<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sqlSession<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">public class MyTest {  @Test  public void test() {    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");    UserMapper userMapper = context.getBean("userMapper", UserMapper.class);    for (User user : userMapper.selectUser()) {      System.out.println(user);    }  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="13、声明式事务"><a href="#13、声明式事务" class="headerlink" title="13、声明式事务"></a>13、声明式事务</h1><h2 id="1、回顾事务"><a href="#1、回顾事务" class="headerlink" title="1、回顾事务"></a>1、回顾事务</h2><ul><li>把一组业务当成一个业务来做；要么都成功，要么都失败！</li><li>事务在项目开发中，十分重要，涉及到数据的一致性问题，不能马虎！</li><li>确保完整性和一致性；</li></ul><p>事务ACID原则：</p><ul><li>原子性</li><li>一致性</li><li>隔离性<ul><li>多个业务可能操作同一个资源，防止数据损坏</li></ul></li><li>持久性<ul><li>事务一旦提交，无论系统发生什么问题，结果都不会再被影响，被持久化到存储器中！</li></ul></li></ul><h2 id="2、spring中的事务管理"><a href="#2、spring中的事务管理" class="headerlink" title="2、spring中的事务管理"></a>2、spring中的事务管理</h2><ul><li>声明式事务：AOP</li><li>编程式事务：需要在代码中，进行事务的管理</li></ul><p>思考：</p><p>为什么需要事务？</p><ul><li>如果不配置事务，可能存在数据提交不一致的情况下；</li><li>如果我们不再Spring中去配置声明式事务，我们就需要在代码中手动配置事务！</li><li>事务在项目的开发中十分重要，涉及到数据的一致性和完整性问题，不容马虎！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何快速搭建博客</title>
      <link href="/2022/06/29/ru-he-kuai-su-da-jian-bo-ke/"/>
      <url>/2022/06/29/ru-he-kuai-su-da-jian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre class="line-numbers language-none"><code class="language-none">为什么希望你们都有个人网站呢，好处真的太多了，说句最实在的，你的个人网站也可以在你面试公司的时候加分，何乐而不为。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h1><h2 id="视频教程地址：B站视频地址"><a href="#视频教程地址：B站视频地址" class="headerlink" title="视频教程地址：B站视频地址"></a>视频教程地址：<a href="https://www.bilibili.com/video/BV1je41147Ma/">B站视频地址</a></h2><h2 id="1-nodejs，Git环境搭建："><a href="#1-nodejs，Git环境搭建：" class="headerlink" title="1.nodejs，Git环境搭建："></a>1.nodejs，Git环境搭建：</h2><ul><li><p><a href="https://blog.csdn.net/qq_43285335/article/details/90696126">nodejs搭建教程:</a></p></li><li><p>注意了，像Git这种服务器在国外的东西，它的官网下载这个软件会非常慢，建议直接在百度上搜索git下载与安装，各种软件园都能直接快速下载，留一下版本最好不要太旧就行。</p></li><li><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">git搭建教程：</a></p></li><li><p><a href="https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html">补充参考文档（可能你会用到）：</a></p></li><li><p><a href="https://www.cnblogs.com/luyuandatabase/p/12145707.html">配置淘宝云</a></p><h2 id="2-注册GitHub账号并创建仓库"><a href="#2-注册GitHub账号并创建仓库" class="headerlink" title="2.注册GitHub账号并创建仓库"></a>2.注册GitHub账号并创建仓库</h2><ol><li>注册就不用我说了，创建仓库视频里有，然后这个也很简单，不会就百度（应该没人去百度的，太简单了）</li><li>格式要求：gfyuan.github.io</li><li>下面两个东西选其一我在视频里面没有演示，因为我早已经弄好了，你们看着弄。</li><li><a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html">参考文档（可能用到）——GitHub的ssh密匙添加：</a></li><li><a href="https://www.jianshu.com/p/3f4b2ede5a93">参考文档（可能用到）——Gitee的ssh密匙添加：</a></li></ol><h2 id="3-快速利用hexo搭建博客："><a href="#3-快速利用hexo搭建博客：" class="headerlink" title="3.快速利用hexo搭建博客："></a>3.快速利用hexo搭建博客：</h2><ol><li><a href="https://hexoscript.gitbook.io/hexo-script/">脚本教程</a></li><li><a href="https://blog.csdn.net/jspnetcn/article/details/104111651">matery主题安装及优化</a></li></ol></li></ul><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">matery主题官网：</a></p><h2 id="博客搭建完成"><a href="#博客搭建完成" class="headerlink" title="博客搭建完成"></a>博客搭建完成</h2><p><a href="https://rika0-0.github.io/">我的博客</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>自行下载</li><li>vs code</li></ul><h2 id="需要的编辑软件"><a href="#需要的编辑软件" class="headerlink" title="需要的编辑软件"></a>需要的编辑软件</h2><ul><li>Typora<br>个人建议在国内的网站上面下载，不要去官网，下载慢</li><li>VS code<br>轻量级文档编辑器</li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&amp;quality=100&amp;size=b4000_4000&amp;sec=1586329259&amp;di=4b52fb528ca0962c5b80fef165441db4&amp;src=http://image.cilacila.com/uploads/20190112/21/1547301428-yHBpuVbPFO.jpg" alt="img"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://code.visualstudio.com/">VScode下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/06/28/hello-world/"/>
      <url>/2022/06/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new "My New Post"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
